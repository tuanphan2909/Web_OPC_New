



@{ ViewBag.Title = "CÔNG NỢ CHI TIẾT CỦA KHÁCH HÀNG (PL5)";
    var fromDate = Request.Cookies["From_date"].Value;
    var toDate = Request.Cookies["To_date"].Value;
    var fromDateValue = DateTime.ParseExact(fromDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);
    var toDateValue = DateTime.ParseExact(toDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);

    var formattedFromDate = fromDateValue.ToString("dd/MM/yyyy");
    var formattedToDate = toDateValue.ToString("dd/MM/yyyy");
    System.Globalization.CultureInfo.CurrentCulture = new System.Globalization.CultureInfo("en-US");
    System.Globalization.CultureInfo.CurrentUICulture = new System.Globalization.CultureInfo("en-US");
}
@using System.Data;
@using System.Globalization;
<!DOCTYPE html>
<html lang="en">

<head>



    <style>
        a:hover {
            background-color: lightskyblue;
        }

        * {
            font-family: "Times New Roman";
        }

        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            color: blue;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            /*         justify-content:;*/
            width: 50%;
            height: 300px;
        }

        .submit {
            height: 50px;
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: relative;
            top: 0;
            left: 0;
            height: 50px;
            width: 200px;
            transition: all 0.5s ease;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        .data_table {
            width: max-content;
        }

        .bieu_do {
            padding: 10px;
            margin: 10%;
            text-align: center;
            width: 200px;
            font-size: 16px;
            font-weight: 600;
            color: #fff;
            cursor: pointer;
            margin: 20px;
            height: 55px;
            text-align: center;
            border: none;
            background-size: 300% 100%;
            border-radius: 10px;
            moz-transition: all .4s ease-in-out;
            -o-transition: all .4s ease-in-out;
            -webkit-transition: all .4s ease-in-out;
            transition: all .4s ease-in-out;
        }

            .bieu_do:hover {
                background-position: 100% 0;
                moz-transition: all .4s ease-in-out;
                -o-transition: all .4s ease-in-out;
                -webkit-transition: all .4s ease-in-out;
                transition: all .4s ease-in-out;
            }

            .bieu_do:focus {
                outline: none;
            }

        .bieu_do {
            background-image: linear-gradient(to right, #0ba360, #3cba92, #30dd8a, #2bb673);
            box-shadow: 0 4px 15px 0 rgba(23, 168, 108, 0.75);
        }

        .chart {
            margin: 20px 0px 0px 0px;
        }

        .text-loading {
            position: fixed;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 13px;
            color: black;
            z-index: 2;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 5px 10px;
            display: none;
        }

        .custom-checkbox {
            margin-top: 10px;
            display: inline-block;
            position: relative;
            padding-left: 30px;
            margin-right: 15px;
            cursor: pointer;
        }

            .custom-checkbox input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
            }

        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            border: 2px solid black;
            background-color: #ffffff;
        }

        .custom-checkbox:hover input ~ .checkmark {
            background-color: #ccc;
        }

        .custom-checkbox input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        .custom-checkbox .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        .checkContainer {
            height: 300px;
            overflow: auto;
            scrollbar-width: none;
        }

            .checkContainer::-webkit-scrollbar {
                width: 0.2em;
                background-color: transparent;
            }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        .tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7;
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important; /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
                }

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 1;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                bottom: 0px;
                /* left:300px;*/
            }

                .tab-control ul li {
                    text-align: center;
                }

        .closeTab {
            position: relative;
            display: inline-block;
            vertical-align: middle;
            margin-left: 10px; /* Điều chỉnh khoảng cách với h4 */
        }

        .closeIcon {
            display: inline-block;
            width: 30px;
            height: 25px;
            border-radius: 50%;
            background-color: white;
            color: black; /* Màu chữ x */
            text-align: center;
            line-height: 25px;
        }

        .tab.active {
            background-color: cornflowerblue; /* Màu nền tab khi active */
            color: #fff; /* Màu chữ khi active */
        }

        .tab.selected-tab {
            pointer-events: none;
            background-color: #3763a3; /* Màu nền của tab */
        }

            .tab.selected-tab a {
                color: white /* Màu nền của tab */
            }

            .tab.selected-tab .closeTab {
                pointer-events: auto;
            }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/js/bootstrap-select.min.js"></script>
    <script type="text/javascript" src="Scripts/table2excel.js"></script>


    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>CÔNG NỢ CHI TIẾT CỦA KH (PL5)</title>
    <meta content="" name="description">
    <meta content="Author" name="MJ Maraz">
    <link href="~/assets/images/favicon.png" rel="icon">
    <link href="~/assets/images/favicon.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <!-- ========================================================= -->


    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/css/datatables.min.css">
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/Styles/loader.css">
</head>
<!-- =============== Design & Develop By = MJ MARAZ   ====================== -->

<body style="background-color: #e0e8ee ">
    <div class="loader" style="z-index:1"></div>

    <div class="sidebar">
        <div class="logo-details">

        </div>
        <ul class="nav-links" style="justify-content: center; display:flex;margin-left:10px">
            <li>
                <form id="dateForm" action="CongNoChiTietKH2" method="post" onsubmit="handleFormSubmit(event)">
                    <div id="locBC">
                        <span id="spanText" class="text-loading">[usp_RpCongNoPL5_SAP]</span>
                        <a>Từ Ngày</a><br /><br />
                        <input class="tu_ngay" placeholder="Từ Ngày" id="tu_ngay" name="From_date" type="date" format="YYYY-MM-DD" value="@Request.Cookies["From_date"].Value" />
                        <script>$("#tu_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script><br /><br />
                        <a>Đến Ngày</a><br /><br />
                        <input class="den_ngay" id="den_ngay" placeholder=" Đến Ngày" name="To_date" type="DATE" format="YYYY-MM-DD" value="@Request.Cookies["To_date"].Value" /><br /><br />
                        <script>$("#den_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script>
                    </div>
                    <h6>Chọn Đối Tượng:</h6>

                    <input type="text" id="dropdownInput" list="dropdownList" placeholder="Tìm kiếm đối tượng">
                    <datalist id="dropdownList">
                        @foreach (var item in ViewBag.DataItems)
                        {
                            <option value="@item.Ma_Dt" data-ten="@item.Ma_Dt" data-diachi="@item.Dia_Chi" data-dvcs="@item.Dvcs" data-dvcs1="@item.Dvcs1">@item.Ten_Dt</option>
                        }
                    </datalist>
                    <input type="hidden" name="Ma_Dt" id="selectedOption">
                    <br /><br />
                    <h6>Chọn TDV:</h6>
                    <input type="text" id="dropdownInputTDV" list="dropdownListTDV" placeholder="Tìm kiếm TDV">
                    <datalist id="dropdownListTDV">
                        @foreach (var item in ViewBag.DataTDV)
                        {
                            <option value="@item.Ma_CbNv" data-Ma_CbNv="@item.Ma_CbNv">@*@item.Ma_CbNv*@ @item.hoten</option>
                        }
                    </datalist>
                    <input type="hidden" name="Ma_TDV" id="selectedOptionTDV">
                    <div>
                        <button class="submit" type="submit" id="runReportButton" onclick="runReport();saveNgay()">
                            Chạy Báo Cáo
                        </button>

                    </div>



                </form>

            </li>
        </ul>
    </div>


    <header class="header_part" style="background-color: #aec9e0; color: #3483bd ">
        @if (Request.Cookies["UserName"].Value == "Admin-cnct" || Request.Cookies["UserName"].Value == "Admin-cntg" || Request.Cookies["UserName"].Value == "Admin-cnmd" || Request.Cookies["UserName"].Value == "Admin-cnh1" || Request.Cookies["UserName"].Value == "Admin-cnvt"
                      || Request.Cookies["UserName"].Value == "Admin-cnnt" || Request.Cookies["UserName"].Value == "Admin - cndn" || Request.Cookies["UserName"].Value == "Admin - cnna" || Request.Cookies["UserName"].Value == "Admin - cnhn")
        {



            <a href="/Home/AboutCN" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        else
        {
            <a href="/Home/About" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        <h4 style="color:#3483bd">CÔNG NỢ CHI TIẾT CỦA KH (PL5)</h4>
        <h4 style="color:#3483bd">Từ @formattedFromDate đến @formattedToDate </h4>
    </header>
    <!-- =======  Data-Table  = Start  ========================== -->

    <div class="container">


        <div class="row">
            <div class="col-12">
                <div class="data_table">
                    <table id="example" class="table table-striped table-bordered">
                        <thead class="table-dark">
                            <tr>
                                <th rowspan="2">Mã KH</th>
                                <th colspan="2">Hóa Đơn</th>
                                <th rowspan="2" style="width:100px">Tên Khách Hàng</th>
                                <th rowspan="2" style="width:100px">NV theo dõi công nợ</th>
                                <th rowspan="2">Hạn mức nợ</th>
                                <th rowspan="2">Credit Limit</th>
                                <th rowspan="2" style="width:100px">Thời hạn CKTT</th>
                                <th rowspan="2">Mã LKH</th>
                                <th rowspan="2" style="width:100px">Tên LKH</th>
                                <th rowspan="2" style="width:100px">Số Hợp Đồng</th>
                                <th rowspan="2">Tổng tiền</th>

                                <th rowspan="2">Ngày đến hạn TT</th>
                                <th rowspan="2" style="width:100px">Số Ngày nợ quá hạn TT</th>
                                <th colspan="4">Số tiền nợ quá hạn</th>
                            </tr>
                            <tr>
                                <th>Số</th>
                                <th>Ngày</th>
                                <th>Từ 1 đến 3 tháng</th>
                                <th>Từ 4 đến 6 tháng</th>
                                <th>Từ 7 đến 12 tháng</th>
                                <th>> 1 năm</th>


                            </tr>
                        </thead>
                        <tbody>
                            @foreach (DataRow row2 in Model.Tables[0].Rows)
                            {
                            <tr>
                                <td>@row2["Ma_Dt"]</td>
                                <td>@row2["So_Ct_Einv"]</td>
                                <td>@row2["Ngay_Ct2"]</td>
                                <td style="text-align:left">@row2["Ten_Dt"]</td>
                                <td>@row2["Ten_TDV"]</td>
                                <td>@row2["Han_Muc_No"]</td>
                                <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row2["Gioi_Han_No"])).Replace(".", ",")</td>
                                <td>@row2["Han_CKTT"]</td>
                                <td>@row2["Ma_LKH"]</td>
                                <td>@row2["Ten_LKH"]</td>
                                <td>@row2["So_Hop_Dong"]</td>
                                <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row2["Cong_No"])).Replace(".", ",")</td>





                                <td>@row2["Ngay_Den_Han2"]</td>
                                <td>@row2["So_Ngay_QH"]</td>

                                <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row2["So_Tien_QH_1"])).Replace(".", ",")</td>
                                <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Tien_QH_2"])).Replace(".", ",")</td>
                                <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Tien_QH_3"])).Replace(".", ",")</td>
                                <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Tien_QH_4"])).Replace(".", ",")</td>

                            </tr>



                            }
                        </tbody>
                        <tfoot>
                            <tr id="total-row" style="background-color: burlywood">
                                <td colspan="11"><strong>Tổng trang:</strong></td>
                                <td class="total-tien" style="text-align:right"></td>
                                <td></td>
                                <td></td>
                                <td class="total-tien-q1" style="text-align:right"></td>
                                <td class="total-tien-q2" style="text-align:right"></td>
                                <td class="total-tien-q3" style="text-align:right"></td>
                                <td class="total-tien-q4" style="text-align:right"></td>


                            </tr>
                            @foreach (DataRow row in Model.Tables[1].Rows)
                            {
                                <tr style="background-color: burlywood">
                                    <td colspan="11"><strong>Tổng cộng:</strong></td>
                                    <td style="text-align:right">@row["Tong_CN"]</td>
                                    <td></td>
                                    <td></td>
                                    <td style="text-align:right">@row["Total_1"]</td>
                                    <td style="text-align:right">@row["Total_2"]</td>
                                    <td style="text-align:right">@row["Total_3"]</td>
                                    <td style="text-align:right">@row["Total_4"]</td>
                                </tr>
                            }
                        </tfoot>
                    </table>

                </div>
            </div>
        </div>
    </div>
    <!-- =======  Data-Table  = End  ===================== -->
    <!-- ============ Java Script Files  ================== -->


    <script src="~/assets/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/jquery-3.6.0.min.js"></script>
    <script src="~/assets/js/datatables.min.js"></script>
    <script src="~/assets/js/pdfmake.min.js"></script>
    <script src="~/assets/js/vfs_fonts.js"></script>
    <script src="~/assets/js/custom.js"></script>



    @*<script>
            document.addEventListener('DOMContentLoaded', function () {
                var numericCells = document.querySelectorAll('.numeric-column');
                numericCells.forEach(function (cell) {
                    var originalValue = parseFloat(cell.getAttribute('data-value'));
                    cell.textContent = originalValue.toLocaleString('en-US');
                });
            });
        </script>*@
    @*<script>
            document.addEventListener('DOMContentLoaded', function () {
                // Khởi tạo DataTables
                var table = $('#example').DataTable();

                // Gọi hàm calculateTotal khi trang được tải và khi có sự kiện thay đổi trên trang
                calculateTotal();

                // Thêm sự kiện cho việc thay đổi trang
                table.on('draw.dt', function () {
                    calculateTotal();
                });
            });

            // Hàm tính toán tổng
            function calculateTotal() {
                // Lấy DataTables
                var table = $('#example').DataTable();

                // Tính tổng của cột "Cong_No"
                var totalCongNo = table.column(10, { page: 'all', search: 'applied' }).data().sum();

                // Gán tổng của cột "Cong_No" vào ô của hàng tfoot "Tổng trang"
                document.querySelector('#total-row .total-tien').textContent = formatCurrency(totalCongNo);

                // Gán tổng của cột "Cong_No" vào ô của hàng tfoot "Tổng cộng(Tất cả)"
                document.querySelector('#total-row-tong-cong .total-tienTT').textContent = formatCurrency(totalCongNo);
            }

            // Hàm định dạng số tiền thành chuỗi có dấu phẩy
            function formatCurrency(amount) {
                return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
        </script>*@

    @*<script>
            document.addEventListener('DOMContentLoaded', function () {
                // Khởi tạo DataTables
                $('#example').DataTable();

                // Gọi hàm calculateTotal khi trang được tải và khi có sự kiện thay đổi trên trang
                calculateTotal();

                // Thêm sự kiện cho việc thay đổi trang
                $('#example').on('draw.dt', function () {
                    calculateTotal();
                });
            });

            // Hàm tính toán tổng
            function calculateTotal() {
                // Lấy tất cả các ô chứa giá trị cột "Tiền TT"
                var tienTTCells = document.querySelectorAll('#example tbody td:nth-child(11)');

                // Biến để tính tổng Tiền TT
                var totalTienTT = 0;

                // Lặp qua từng ô và tính tổng
                tienTTCells.forEach(function (cell) {
                    var valueWithoutCommas = cell.textContent.replace(/,/g, ''); // Loại bỏ dấu phẩy
                    totalTienTT += parseFloat(valueWithoutCommas) || 0; // Cộng thêm 0 nếu giá trị không hợp lệ
                });

                // Gán tổng Tiền TT vào ô của hàng tfoot "Tổng trang"
                document.querySelector('#total-row .total-tien').textContent = formatCurrency(totalTienTT);

                // Gán tổng Tiền TT vào ô của hàng tfoot "Tổng cộng(Tất cả)"
                document.querySelector('#total-row-tong-cong .total-tienTT').textContent = formatCurrency(totalTienTT);
            }

            // Hàm định dạng số tiền thành chuỗi có dấu phẩy
            function formatCurrency(amount) {
                return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }
        </script>*@
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            function calculateTotal() {
                // Lấy tất cả các ô chứa giá trị cột "Tiền TT"
                var tienTTCells = document.querySelectorAll('#example tbody td:nth-child(12)');
                var tienQ1 = document.querySelectorAll('#example tbody td:nth-child(15)');
                var tienQ2 = document.querySelectorAll('#example tbody td:nth-child(16)');
                var tienQ3 = document.querySelectorAll('#example tbody td:nth-child(17)');
                var tienQ4 = document.querySelectorAll('#example tbody td:nth-child(18)');
                // Biến để tính tổng Tiền TT
                var totalTienTT = 0;
                var totalTienQ1 = 0;
                var totalTienQ2 = 0;
                var totalTienQ3 = 0;
                var totalTienQ4 = 0;
                // Lặp qua từng ô và tính tổng
                tienTTCells.forEach(function (cell) {
                    var valueWithoutCommas = cell.textContent.replace(/,/g, ''); // Loại bỏ dấu phẩy
                    totalTienTT += parseFloat(valueWithoutCommas);
                });
                tienQ1.forEach(function (cell) {
                    var valueWithoutCommas = cell.textContent.replace(/,/g, '');
                    totalTienQ1 += parseFloat(valueWithoutCommas);
                });
                tienQ2.forEach(function (cell) {
                    var valueWithoutCommas = cell.textContent.replace(/,/g, '');
                    totalTienQ2 += parseFloat(valueWithoutCommas);
                });
                tienQ3.forEach(function (cell) {
                    var valueWithoutCommas = cell.textContent.replace(/,/g, '');
                    totalTienQ3 += parseFloat(valueWithoutCommas);
                });
                tienQ4.forEach(function (cell) {
                    var valueWithoutCommas = cell.textContent.replace(/,/g, '');
                    totalTienQ4 += parseFloat(valueWithoutCommas);
                });
                // Gán tổng Tiền TT vào ô của hàng tfoot "Tổng trang"
                document.querySelector('#total-row .total-tien').textContent = formatCurrency(totalTienTT);
                document.querySelector('#total-row .total-tien-q1').textContent = formatCurrency(totalTienQ1);
                document.querySelector('#total-row .total-tien-q2').textContent = formatCurrency(totalTienQ2);
                document.querySelector('#total-row .total-tien-q3').textContent = formatCurrency(totalTienQ3);
                document.querySelector('#total-row .total-tien-q4').textContent = formatCurrency(totalTienQ4);

                // Gán tổng Tiền TT vào ô của hàng tfoot "Tổng cộng(Tất cả)"
                /* document.querySelector('#total-row-tong-cong .total-tienTT').textContent = formatCurrency(totalTienTT);*/
            }

            // Gọi hàm calculateTotal khi trang được tải và khi có sự kiện thay đổi trên trang
            calculateTotal();

            // Hàm định dạng số tiền thành chuỗi có dấu phẩy
            function formatCurrency(amount) {
                return amount.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
            }

            // Thêm sự kiện cho việc thay đổi trang
            $('#example').on('draw.dt', function () {
                calculateTotal();
            });
        });

    </script>
    <script>
        function saveNgay() {
            var from_date = document.getElementById("tu_ngay").value;
            var to_date = document.getElementById("den_ngay").value;
            document.cookie = "From_date=" + from_date;
            document.cookie = "To_date=" + to_date;
        }
        document.getElementById("dropdownInput").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownList option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOption").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInput");
                    var selectedOption = document.querySelector("#dropdownList option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var tenDt = selectedOption.getAttribute('data-ten');
                        document.cookie = 'Ma_Dt=' + tenDt;
                    } else {
                        var select = "";
                        document.cookie = 'Ma_Dt=' + select;
                    }

                });
            }
        });


    </script>




    <script>
        document.getElementById("dropdownInputTDV").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownListTDV option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOptionTDV").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInputTDV");
                    var selectedOption = document.querySelector("#dropdownListTDV option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var MaTDV = selectedOption.getAttribute('data-Ma_CbNv');
                        document.cookie = 'Ma_TDV=' + MaTDV;
                    } else {
                        var selected = "";
                        document.cookie = 'Ma_TDV=' + selected;
                    }
                });
            }
        });


    </script>



  
    <script>
        function runReport() {

            const uncheckedCheckboxIndexes = [];
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

            checkboxes.forEach((checkbox, index) => {
                if (!checkbox.checked) {
                    uncheckedCheckboxIndexes.push(index);
                }
            });

            // Lưu trạng thái vào Local Storage
            localStorage.setItem('uncheckedCheckboxIndexes', JSON.stringify(uncheckedCheckboxIndexes));
            // Hiển thị thẻ span có id là "spanText"
            const spanElement = document.getElementById("spanText");
            spanElement.style.display = "block";
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');
            const table = document.getElementById('example');

            checkboxes.forEach((checkbox, index) => {
                checkbox.addEventListener('change', function () {
                    const columnIndex = index;
                    const rows = table.querySelectorAll('tr');

                    rows.forEach(row => {
                        const cells = row.querySelectorAll('td, th');
                        cells[columnIndex].style.display = this.checked ? '' : 'none';
                    });
                });
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInput');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var maDtFromCookie = getCookie('Ma_Dt');

            // Đặt giá trị cho trường input và hidden input
            if (maDtFromCookie) {
                dropdownInput.value = maDtFromCookie;
                selectedOption.value = maDtFromCookie;
            }
        });
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInputTDV');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var matdvFromCookie = getCookie('Ma_TDV');

            // Đặt giá trị cho trường input và hidden input
            if (matdvFromCookie) {
                dropdownInput.value = matdvFromCookie;
                selectedOption.value = matdvFromCookie;
            }
        });
       
        // Hàm lấy giá trị từ cookie
        function getCookie(cookieName) {
            var name = cookieName + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var cookieArray = decodedCookie.split(';');

            for (var i = 0; i < cookieArray.length; i++) {
                var cookie = cookieArray[i];
                while (cookie.charAt(0) == ' ') {
                    cookie = cookie.substring(1);
                }
                if (cookie.indexOf(name) == 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return null;
        }
    </script>
    <script>
        function handleFormSubmit(event) {
            event.preventDefault();
            showLoader();
            // Show the loader when the form is submitted


            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Tạo URL mới với các tham số truy vấn
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

            // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
            window.location.href = actionUrl;
        }
        function displaySelectedDate() {
            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Hiển thị các giá trị ngày đã chọn lên thẻ h5
            const selectedDateDisplay = document.getElementById('selectedDateDisplay');
            selectedDateDisplay.innerText = `Từ ngày: ${fromDate} - Đến ngày: ${toDate}`;
            window.location.href = selectedDateDisplay;
        }

        // Function to show the loader
        function showLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.remove("loader-hidden");
        }

        // Function to hide the loader
        function hideLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.add("loader-hidden");
        }

        /*  Add an event listener to the form submission*/
        document.getElementById("dateForm").addEventListener("submit", (event) => {
            event.preventDefault();
            displaySelectedDate();
            // Show the loader when the form is submitted
            showLoader();

            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Tạo URL mới với các tham số truy vấn
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

            // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
            window.location.href = actionUrl;
        });

        // Add event listener for window load event
        window.addEventListener("load", () => {
            // Hide the loader after the page is loaded
            hideLoader();
            const fromDate = urlParams.get('From_date');
            const toDate = urlParams.get('To_date');
            if (fromDate && toDate) {
                displaySelectedDate();
            }
        });
    </script>

    <script>
        // Hàm lưu trạng thái checkbox vào Local Storage
        function saveCheckboxState() {
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');
            const checkboxState = {};

            checkboxes.forEach((checkbox, index) => {
                checkboxState[index] = checkbox.checked;
            });

            localStorage.setItem('checkboxState', JSON.stringify(checkboxState));
        }

        // Lưu trạng thái khi người dùng bỏ chọn checkbox
        // Lắng nghe sự kiện thay đổi của các checkbox
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

            checkboxes.forEach(checkbox => {
                checkbox.addEventListener('change', function () {
                    localStorage.setItem(checkbox.value, checkbox.checked);
                });
            });
        });

    </script>

</body>

</html>