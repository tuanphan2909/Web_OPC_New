

@{ ViewBag.Title = "TỔNG HỢP NHẬP XUÂT TỒN THEO KHO - IN";
    var fromDate = Request.Cookies["From_date"].Value;
    var toDate = Request.Cookies["To_date"].Value;
    var fromDateValue = DateTime.ParseExact(fromDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);
    var toDateValue = DateTime.ParseExact(toDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);

    var formattedFromDate = fromDateValue.ToString("dd/MM/yyyy");
    var formattedToDate = toDateValue.ToString("dd/MM/yyyy");
    var DenNgay = Request.Cookies["To_date"].Value;
    DateTime ngay = DateTime.ParseExact(DenNgay, "yyyy-MM-dd", CultureInfo.InvariantCulture);

    // Chuyển đổi thành chuỗi theo định dạng "DD/MM/YYYY"
    string ngayDaChinhSua = ngay.ToString("dd/MM/yyyy");
    HttpCookie ngayDaChinhSuaCookie = new HttpCookie("NgayDaChinhSua", ngayDaChinhSua);
    ngayDaChinhSuaCookie.Expires = DateTime.Now.AddDays(1); // Ví dụ: sống trong 1 ngày

    var TuNgay = Request.Cookies["From_date"].Value;
    DateTime tungay = DateTime.ParseExact(TuNgay, "yyyy-MM-dd", CultureInfo.InvariantCulture);
    string tungayDaChinhSua = tungay.ToString("dd/MM/yyyy");
    HttpCookie tungayDaChinhSuaCookie = new HttpCookie("TungayDaChinhSua", tungayDaChinhSua);
    var Ma_Dv = Request.Cookies["Ma_Dv"].Value;
    string Dv = "";
    string kyten = "";
    string kyten1 = "";


    if (Request.Cookies["MA_DVCS"].Value == ""|| Request.Cookies["MA_DVCS"].Value == "OPC_B1")
    {
        kyten = "Phụ Trách Đơn Vị";
    }
    else
    {
        kyten = "Giám đốc CN";
    }
    if (Request.Cookies["Ma_Dvcs_2"].Value == "OPC_B1_01020302")
    {
        kyten1 = "Cửa Hàng Trưởng";
        kyten = "Phụ Trách Đơn Vị";
    }
    else
    {
        kyten1 = "Kế Toán";
    }
    string Dvcs = "";
    switch (Request.Cookies["Ma_Dvcs_2"].Value)
    {
        case "": Dvcs = "";break;
        case "OPC_CT": Dvcs = "Chi Nhánh Cần Thơ";break;
        case "OPC_TG": Dvcs = "Chi Nhánh Tiền Giang"; break;
        case "OPC_MD": Dvcs = "Chi Nhánh Miền Đông"; break;
        case "OPC_TP": Dvcs = "Chi Nhánh Hồ Chí Minh"; break;
        case "OPC_TP_03": Dvcs = "Chi Nhánh Hồ Chí Minh"; break;
        case "OPC_TP_04": Dvcs = "Cửa hàng Phùng Hưng"; break;
        case "OPC_TP_05": Dvcs = "Cửa hàng Online HCM"; break;
        case "OPC_VT": Dvcs = "Chi Nhánh Vũng Tàu"; break;
        case "OPC_NT": Dvcs = "Chi Nhánh Nha Trang"; break;
        case "OPC_DN": Dvcs = "Chi Nhánh Đà Nẵng"; break;
        case "OPC_DN_03": Dvcs = "OPC2"; break;
        case "OPC_NA": Dvcs = "Chi Nhánh Nghệ An"; break;
        case "OPC_HN": Dvcs = "Chi Nhánh Hà Nội"; break;
        case "OPC_HN_03": Dvcs = "Nhóm CH HAPU Hà Nội"; break;
        case "OPC_HN_04": Dvcs = "OPC1"; break;
        case "OPC_B1": Dvcs = "Văn phòng Tp.HCM"; break;
        case "OPC_B2": Dvcs = "Nhà máy Bình Dương"; break;
        case "OPC_B1_01020302": Dvcs = "Nhóm CH sỉ Q10 HCM"; break;
        case "OPC_B1_01020303": Dvcs = "Nhóm CH sỉ HAPU HN"; break;

    }
    switch (Request.Cookies["Ma_Dv"].Value)
    {
        case "OPC_B1/TP_B1_DP": Dv = "Kho thành phẩm ĐP trụ sở"; break;
        case "OPC_B2/TP_B2_DP": Dv = "Kho thành phẩm ĐP nhà máy"; break;
        case "OPC_B1/KM_B1_01": Dv = "Kho hàng khuyến mãi"; break;
        case "OPC_B1/TP_B1_CXL": Dv = "Kho thành phẩm Trụ sở chờ xử lý"; break;
        case "OPC_B1/TP_B1_NC": Dv = "Kho thành phẩm Nghiên Cứu điều phối"; break;
        case "OPC_B1/TP_B1_PHIEN": Dv = "Kho vị thuốc cổ truyền Trụ sở"; break;
        case "OPC_B1/TP_B1_PHIEN_CXL": Dv = "Kho vị thuốc cổ truyền trụ sở chờ xử lý"; break;
        case "OPC_B1/XD_B1_01": Dv = "Kho Xăng dầu"; break;
        case "OPC_B1_01020302/HKM_B1_Q1": Dv = "Kho hàng khuyến mãi - Quận 10"; break;
        case "OPC_B1_01020302/TP_B1_Q10": Dv = "Kho cửa hàng sỉ - Quận 10"; break;
        case "OPC_B1_01020303/TP_B1_HAPU": Dv = "Kho quầy 427 Hapu - Hà Nội"; break;
        case "OPC_B1_01020303/TP_CN_HAPU": Dv = "Kho quầy Hapu tại Chi nhánh"; break;
        case "OPC_B2/BB_B2_01": Dv = "Kho bao bì"; break;
        case "OPC_B2/BB_B2_HD2": Dv = "Kho Bao bì hóa dược 2"; break;
        case "OPC_B2/BHLD_B2": Dv = "Kho bảo hộ lao động"; break;
        case "OPC_B2/CB_B2_01": Dv = "Kho chế biến"; break;
        case "OPC_B2/CB_B2_02": Dv = "Kho chế biến Chờ xử lý"; break;
        case "OPC_B2/CB_B2_HD2": Dv = "Kho Chế biến hóa dược 2"; break;
        case "OPC_B2/CB_B2_HD2_02": Dv = "Kho Chế biến hóa dược 2 chờ xử lý"; break;
        case "OPC_B2/CCDC_B2": Dv = "Kho công cụ dụng cụ"; break;
        case "OPC_B2/DL_B2_01": Dv = "Kho dược liệu"; break;
        case "OPC_B2/DL_B2_PHIEN": Dv = "Kho dược liệu phiến"; break;
        case "OPC_B2/DP_DD_01": Dv = "Kho Điều Phối Đi Đường"; break;
        case "OPC_B2/HD_B2_01": Dv = "Kho hóa dược"; break;
        case "OPC_B2/HD_B2_HD2": Dv = "Kho Nguyên liệu hóa dược 2"; break;
        case "OPC_B2/HKM_B1_01": Dv = "Kho hàng khuyến mãi - Điều phối"; break;
        case "OPC_B2/NCPT_B2": Dv = "Kho RD"; break;
        case "OPC_B2/PTTT_B2": Dv = "Phụ Tùng Thay Thế"; break;
        case "OPC_B2/TKX_B2_01": Dv = "Kho thống kê xưởng sản xuất"; break;
        case "OPC_B2/TKX_B2_02": Dv = "Kho thống kê hóa dược 2"; break;
        case "OPC_B2/TP_B1_CXL": Dv = "Kho thành phẩm Trụ sở chờ xử lý"; break;
        case "OPC_B2/TP_B1_NC": Dv = "Kho thành phẩm Nghiên Cứu điều phối"; break;
        case "OPC_B2/TP_B1_PHIEN": Dv = "Kho vị thuốc cổ truyền Trụ sở"; break;
        case "OPC_B2/TP_B1_PHIEN_CXL": Dv = "Kho vị thuốc cổ truyền trụ sở chờ xử lý"; break;
        case "OPC_B2/TP_B2_PHIEN": Dv = "Kho vị thuốc cổ truyền nhà máy"; break;
        case "OPC_B2/TP_B2_PHIEN_QC": Dv = "Kho vị thuốc cổ truyền nhà máy chờ QC"; break;
        case "OPC_B2/TP_B2_QC": Dv = "Kho Thành phẩm Điều phối chờ QC"; break;
        case "OPC_B2/VPP_B2": Dv = "Văn Phòng Phẩm"; break;
        case "OPC_B2/XD_B1_01": Dv = "OPC_B2/XD_B1_01-Kho xăng dầu"; break;
        case "OPC_CT/CXL_CT_CN": Dv = "Kho chờ xử lý - Cần Thơ"; break;
        case "OPC_CT/HKM_CT_CN": Dv = "Kho hàng khuyến mãi - Cần Thơ"; break;
        case "OPC_CT/TP_CT_CN": Dv = "Kho Thành Phẩm - Cần Thơ"; break;
        case "OPC_DN/CXL_DN_CN": Dv = "Kho chờ xử lý - Đà Nẵng"; break;
        case "OPC_DN/HKM_DN_CN": Dv = "Kho hàng khuyến mãi mua ngoài - Đà Nẵng"; break;
        case "OPC_DN/TP_DN_CN": Dv = "Kho Thành Phẩm - Đà Nẵng"; break;
        case "OPC_DN_03/CPC2": Dv = "CPC2"; break;
        case "OPC_HN/CXL_HN_CN": Dv = "Kho chờ xử lý - Hà Nội"; break;
        case "OPC_HN/HKM_HN_CN": Dv = "Kho hàng khuyến mãi mua ngoài - Hà Nội"; break;
        case "OPC_HN/TP_HN_CN": Dv = "Kho Thành phẩm - Hà Nội"; break;
        case "OPC_HN_03/HP1_HCN": Dv = "Cửa hàng HAPU _Chi Nhánh Hà Nôi"; break;
        case "OPC_HN_04/CPC1": Dv = "CPC1"; break;
        case "OPC_MD/CXL_MD_CN": Dv = "Kho chờ xử lý - Miền Đông"; break;
        case "OPC_MD/HKM_MD_CN": Dv = "Kho hàng khuyến mãi - Miền Đông"; break;
        case "OPC_MD/TP_MD_CN": Dv = "Kho Thành phẩm - Miền Đông"; break;
        case "OPC_NA/CXL_NA_CN": Dv = "Kho chờ xử lý - Nghệ An"; break;
        case "OPC_NA/HKM_NA_CN": Dv = "Kho hàng khuyến mãi - Nghệ An"; break;
        case "OPC_NA/TP_NA_CN": Dv = "Kho Thành Phẩm - Nghệ An"; break;
        case "OPC_NT/CXL_NT_CN": Dv = "Kho chờ xử lý - Nha Trang"; break;
        case "OPC_NT/HKM_NT_CN": Dv = "Kho hàng khuyến mãi - Nha Trang"; break;
        case "OPC_NT/TP_NT_CN": Dv = "Kho Thành Phẩm - Nha Trang"; break;
        case "OPC_RD/NCPT_RD": Dv = "Kho RD"; break;
        case "OPC_RD/PST_RD": Dv = "Kho dự án"; break;
        case "OPC_TG/CXL_TG_CN": Dv = "Kho chờ xử lý - Tiền Giang"; break;
        case "OPC_TG/HKM_TG_CN": Dv = "Kho hàng khuyến mãi - Tiền Giang"; break;
        case "OPC_TG/TP_TG_CN": Dv = "Kho Thành Phẩm - Tiền Giang"; break;
        case "OPC_TP/CXL_HCM_CN": Dv = "Kho chờ xử lý - Hồ Chí Minh"; break;
        case "OPC_TP/HKM_HCM_CN": Dv = "Kho hàng khuyến mãi - HCM"; break;
        case "OPC_TP/KKG_HCM_CN": Dv = "Kho ký gởi - Hồ Chí Minh"; break;
        case "OPC_TP/ONLINE_HCM": Dv = "Kho Online - Hồ Chí Minh"; break;
        case "OPC_TP/TP_HCM_CN": Dv = "Kho Thành phẩm - Hồ Chí Minh"; break;
        case "OPC_TP_03/CH1_HCM": Dv = "Kho cửa hàng số 1 - Phú Lâm"; break;
        case "OPC_TP_03/KOL_CH1_HCM": Dv = "Kho Online"; break;
        case "OPC_TP_04/CH2_HCM": Dv = "Kho cửa hàng số 2 - Phùng Hưng"; break;
        case "OPC_TP_04/HKM_CH2_HCM": Dv = "Kho hàng khuyến mãi - Phùng Hưng"; break;
        case "OPC_TP_05/ONLINE_HCM": Dv = "Kho cửa hàng Online HCM"; break;
        case "OPC_VT/CXL_VT_CN": Dv = "Kho chờ xử lý - Vũng tà"; break;
        case "OPC_VT/HKM_VT_CN": Dv = "Kho hàng khuyến mãi mua ngoài -Vũng Tàu"; break;
        case "OPC_VT/TP_VT_CN": Dv = "Kho Thành phẩm - Vũng tàu"; break;
    }
}


@using System.Data;
@using System.Globalization
<!DOCTYPE html>
<html>
<head>
    <meta charset='utf-8'>


    <meta http-equiv='X-UA-Compatible' content='IE=edge'>


    <title>TỔNG NHẬP XUÁT TỒN THEO LÔ</title>
    <meta name='viewport' content='width=device-width, initial-scale=1'>


    <link href="~/Styles/main.css" rel='stylesheet' type='text/css' media="all">



    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">


    <style>
        * {
            font-family: 'Times New Roman';
            color: black;
        }

        page {
            margin: 0;
        }

        body {
            display: flex;
            justify-content: center;
            /*  align-items: center;*/
            min-height: 100vh;
            margin: 0;
        }

        form {
            /*                text-align: center;*/
            padding: 50px;
            border: 0px solid #ccc;
            border: none;
        }

        .flex-container {
            text-align: left;
        }

        a:hover {
            background-color: lightskyblue;
        }

        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            font-weight: bold;
            color: black;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
            font-size: 12px
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            justify-content:;
            width: 50%;
            height: 300px;
        }

        .submit {
            /*height: 50px;
        width: 100px;*/
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: fixed;
            height: 100%;
            width: 200px;
            transition: all 0.5s ease;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        h5 {
            /*text-align: center;*/
            font-size: 15px;
        }

        .text-loading {
            position: fixed;
            bottom: 10px;
            left: 10px;
            font-size: 13px;
            color: black;
            z-index: 1;
            background-color: rgba(255, 255, 255, 0.9); /* Background color for the span */
            padding: 5px 10px;
            display: none; /* Hide the span element initially */
        }

        .expandable-icon {
            cursor: pointer;
        }

            .expandable-icon.collapsed {
                transform: rotate(0deg);
            }

            .expandable-icon.expanded {
                transform: rotate(180deg);
            }

        .material-symbols-outlined {
            cursor: pointer;
        }
        /* Style for the container of the forms */
        .forms-container {
            display: flex;
        }

        /* Style for the locBC form */
        .locBC-form {
            width: 300px; /* Adjust width as needed */
            margin-right: 20px; /* Add space between forms */
        }

        /* Style for the data form */
        .data-form {
            flex: 1; /* Take up remaining space */
        }

        .print-button {
            margin-top: 10px;
        }

        @@media print {
            #locBC {
                display: none;
            }

            #data-form {
                justify-content: center;
                /*  align-items: center;*/
                min-height: 100vh;
                margin: 0; /* Canh giữa nội dung trong data-form */
            }

            h5 {
                text-align: center;
                font-size: 15px;
            }

            #data-form .print-button {
                display: none;
            }
        }

        img {
            width: 70px;
            height: 40px;
        }

        tr {
            page-break-inside: avoid; /* Tránh chuyển trang giữa các dòng */
        }

            tr td {
                padding: 5px;
            }
    </style>
</head>
<body>
    <div class="forms-container">
        <form class="data-form" id="data-form">
            <div style="display:flex;justify-content:space-between;align-items:center">
                <div style="justify-content: space-between;text-align:left;text-align:center">
                    <div>Đơn vị: @Dvcs</div>
                    <div style="height:30px"></div>
                </div>
                <div style="text-align:center;width:300px">
                    <h5 style="font-weight:bold"></h5>
                    <h5 style="word-wrap: break-word"></h5>

                </div>
            </div>

            <div style="text-align:center">
                <h3 style="font-size: 25px; color: black; font-weight: bold">TỔNG HỢP NHẬP XUẤT TỒN THEO KHO</h3>
                @*<h3 style="font-size: 20px; color: black; font-weight: bold">Material Inventories - Balance History</h3>*@
                <h5>Từ ngày/From Date: @tungayDaChinhSua&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Đến Ngày/To Date: @ngayDaChinhSua</h5>
              
                <br />
            </div>
            <div style="text-align:left"> <h5 style="font-weight: bold; text-align: left">Business President:  @Request.Cookies["Ma_Dv"].Value  @Dv</h5></div>
            <div >
                <table id="example" class="table table-striped table-bordered" data-excel-name="Sheet 1" style="width:700px">
                    <thead class="table-dark" id="head">
                        <tr>
                            <th>Mã Vật Tư<br />Product ID</th>
                            <th>Tên Vật Tư<br />Product Name</th>
                            <th>Số Lô<br />Identified Stock ID</th>
                            <th>Hạn Dùng</th>
                            <th>Số Lượng Đầu Kỳ<br />Opening Qty</th>
                            <th>Số Lượng Nhập<br /> Increasing Qty</th>
                            <th>Số Lượng Xuất<br />Decreasing Qty </th>
                            <th>Số Lượng Cuối Kỳ<br />Ending Qty</th>

                        </tr>

                    </thead>

                    <tbody>
                        @{ // Biến tạm để lưu trữ tổng của mỗi loại Ma_Vt
                            decimal totalSoLuongDK = 0;
                            decimal totalSoLuongNhap = 0;
                            decimal totalSoLuongXuat = 0;
                            decimal totalSoLuongCK = 0;
                            string currentMa_Vt = "";
                            string currentMa_Kho = "";
                        }

                        @foreach (DataRow row in Model.Tables[0].Rows)
                        {
                            if (currentMa_Kho != row["Ma_Kho"].ToString())

                            {
                            }
                            if (currentMa_Vt != row["Ma_Vt"].ToString())
                            {
                                // Nếu Ma_Vt của hàng hiện tại khác với Ma_Vt của hàng trước đó,
                                // đó là điểm dừng của một nhóm Ma_Vt, tính tổng và gán vào dòng tổng cộng
                                if (!string.IsNullOrEmpty(currentMa_Vt) && (totalSoLuongCK > 0 || totalSoLuongNhap > 0 || totalSoLuongXuat > 0 || totalSoLuongCK > 0))
                                {

                                    //if (totalSoLuongCK == 0 && totalSoLuongNhap == 0 && totalSoLuongXuat == 0 && totalSoLuongCK == 0)
                                    //{
                                    <tr >
                                        @*<td></td>*@
                                        <td style="font-weight:bold">@currentMa_Vt</td>
                                        <td></td>
                                        <td></td>
                                        <td style="font-weight:bold">Tổng:</td>
                                        <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongDK).Replace("₫", "")</td>
                                        <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongNhap).Replace("₫", "") </td>
                                        <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongXuat).Replace("₫", "")</td>
                                        <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongCK).Replace("₫", "")</td>
                                    </tr>
                                }
                                // Reset tổng và cập nhật Ma_Vt mới
                                totalSoLuongDK = 0;
                                totalSoLuongNhap = 0;
                                totalSoLuongXuat = 0;
                                totalSoLuongCK = 0;
                                currentMa_Vt = row["Ma_Vt"].ToString();
                            }

                            // Cộng dồn vào tổng của nhóm Ma_Vt hiện tại
                            totalSoLuongDK += Convert.ToDecimal(row["So_Luong_DK_FM"]);
                            totalSoLuongNhap += Convert.ToDecimal(row["So_Luong_Nhap_FM"]);
                            totalSoLuongXuat += Convert.ToDecimal(row["So_Luong_Xuat_FM"]);
                            totalSoLuongCK += Convert.ToDecimal(row["So_Luong_CK_FM"]);
                            if (Convert.ToDecimal(row["So_Luong_CK_FM"]) > 0 || Convert.ToDecimal(row["So_Luong_DK_FM"]) > 0 || Convert.ToDecimal(row["So_Luong_Xuat_FM"]) > 0 || Convert.ToDecimal(row["So_Luong_Nhap_FM"]) > 0)
                            {
                                <tr>
                                    @*<td>@row["Ma_Kho"]</td>*@
                                    <td>@row["Ma_Vt"]</td>
                                    <td style="text-align:left">@row["Ten_Vt"]</td>
                                    @{
                                        string soLo = row["So_Lo"].ToString();
                                        string[] parts = soLo.Split('/');
                                        string soLoAfterSlash = parts.Length > 1 ? parts[1] : "";
                                    }
                                    <td style="text-align:center">@soLoAfterSlash</td>


                                    <td>@row["Han_Dung"]</td>
                                    <td style="text-align:right"> @row["So_Luong_DK"]</td>
                                    <td style="text-align:right"> @row["So_Luong_Nhap"]</td>
                                    <td style="text-align:right"> @row["So_Luong_Xuat"]</td>
                                    <td style="text-align:right">@row["So_Luong_Ck"]</td>
                                </tr>
                            }
                        }


                        @if (!string.IsNullOrEmpty(currentMa_Vt))
                        {
                            <tr>
                                @*<td></td>*@
                                <td style="font-weight:bold">@currentMa_Vt</td>
                                <td>
                                </td>
                                <td></td>
                                <td style="font-weight:bold">Tổng:</td>
                                <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongDK).Replace("₫", "")</td>
                                <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongNhap).Replace("₫", "") </td>
                                <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongXuat).Replace("₫", "")</td>
                                <td style="text-align:right;font-weight:bold"> @String.Format(System.Globalization.CultureInfo.GetCultureInfo("vi-VN"), "{0:c}", totalSoLuongCK).Replace("₫", "")</td>
                            </tr>
                        }
                    </tbody>



                    <tfoot>
                        @foreach (DataRow row in Model.Tables[1].Rows)
                        {
                            <tr >
                                <td colspan="4" style="text-align:center;font-weight:bold">TỔNG CỘNG(TOTAL):</td>
                                <td style="text-align:right;font-weight:bold"> @row["So_Luong_DK"]</td>
                                <td style="text-align: right; font-weight: bold"> @row["So_Luong_Nhap"]</td>
                                <td style="text-align: right; font-weight: bold"> @row["So_Luong_Xuat"]</td>
                                <td style="text-align: right; font-weight: bold"> @row["So_Luong_CK"]</td>
                            </tr>
                        }
                    </tfoot>







                </table>


                <br />

                <div style="text-align:right"> Ngày.....tháng.....năm.....</div>
                <div style="display:flex;justify-content:space-between;text-align:center">
                    <h4 style="margin-left:30px">Thủ Kho</h4>

                    <h4 style="">@kyten1</h4>
                    <h4 style="margin-right:30px">@kyten</h4>
                </div><br />

            </div>

        </form>


    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/FileSaver.js/2.0.5/FileSaver.min.js"></script>

    @*<button id="export-button" onclick="exportExcel()">Xuất Excel</button>*@
    <input type="file" id="file-input" style="display: none">
    <script src="src/jquery.table2excel.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.4/xlsx.full.min.js"></script>

    <!-- Tải jQuery từ CDN -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script src="https://html2canvas.hertzen.com/dist/html2canvas.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/js-cookie@3.0.1/dist/js.cookie.min.js"></script>

    <script>
        function showFileInput() {
            // Sử dụng JavaScript để kích hoạt hộp thoại chọn vị trí lưu tệp
            var fileInput = document.getElementById("file-input");
            file.click();
        }

    </script>
    <script>
        document.addEventListener('keydown', function (event) {
            if (event.ctrlKey && event.key === 'p') {
                // Người dùng nhấn Ctrl+P, ẩn nút xuất Excel
                document.getElementById('export-button').style.display = 'none';
            }
        });
    </script>

</body>

</html>

