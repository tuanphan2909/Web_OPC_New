
@{ ViewBag.Title = "BÁO CÁO NHẬP XUẤT KHO";
    var fromDate = Request.Cookies["From_date"].Value;
    var toDate = Request.Cookies["To_date"].Value;
    var fromDateValue = DateTime.ParseExact(fromDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);
    var toDateValue = DateTime.ParseExact(toDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);

    var formattedFromDate = fromDateValue.ToString("dd/MM/yyyy");
    var formattedToDate = toDateValue.ToString("dd/MM/yyyy");
    var MaTK = Request.Cookies["Ma_Tk"].Value;
    var MaNH = Request.Cookies["Ma_Dv"].Value;



    var Ma_Dv = Request.Cookies["Ma_Dv"].Value;
    string Dv = "";
    switch (Request.Cookies["Ma_Dv"].Value)
    {
        case "OPC_B1": Dv = "Văn phòng Tp.HCM"; break;
        case "OPC_B1_01020302": Dv = "Nhóm Cửa Hàng Sỉ Q10"; break;
        case "OPC_B1_01020303": Dv = "Nhóm Cửa hàng sỉ HAPU Hà Nội"; break;
        case "OPC_B2": Dv = "Nhà máy Bình Dương"; break;
        case "OPC_BD": Dv = "Gia Công OPCBD"; break;
        case "OPC_CT": Dv = "Chi Nhánh Cần Thơ"; break;
        case "OPC_DN": Dv = "Chi Nhánh Đà Nẵng"; break;
        case "OPC_DN_03": Dv = "Trung Việt"; break;
        case "OPC_HN": Dv = "Chi Nhánh Hà Nội"; break;
        case "OPC_HN_03": Dv = "Nhóm cửa hàng HAPU Hà Nội"; break;
        case "OPC_HN_04": Dv = "OPC1"; break;
        case "OPC_MD": Dv = "Chi Nhánh Miền Đông"; break;
        case "OPC_NA": Dv = "Chi Nhánh Nghệ An"; break;
        case "OPC_NT": Dv = "Chi Nhánh Nha Trang"; break;
        case "OPC_RD": Dv = "R&D"; break;
        case "OPC_TG": Dv = "Chi Nhánh Tiền Giang"; break;
        case "OPC_TP": Dv = "Chi Nhánh Hồ Chí Minh"; break;
        case "OPC_TP_03": Dv = "Cửa hàng phú lâm"; break;
        case "OPC_TP_05": Dv = "OPC_TP_04 Cửa hàng Online HCM"; break;
        case "OPC_VT": Dv = "Chi Nhánh Vũng Tàu"; break;
    }

    string Dv1 = "";
    string madvcs = "";
    switch (Request.Cookies["Ma_DVCS"].Value)
    {
        case "OPC_CT":
            Dv1 = "OPC_CT Chi Nhánh Cần Thơ";
            madvcs = "OPC_CT";
            break;
        case "OPC_DN":
            Dv1 = "OPC_DN Chi Nhánh Đà Nẵng";
            madvcs = "OPC_DN"; break;
        case "OPC_HN":
            Dv1 = "OPC_HN Chi Nhánh Hà Nội";
            madvcs = "OPC_HN"; break;
        case "OPC_MD":
            Dv1 = "OPC_MD Chi Nhánh Miền Đông";
            madvcs = "OPC_MD"; break;
        case "OPC_NA":
            Dv1 = "OPC_NA Chi Nhánh Nghệ An";
            madvcs = "OPC_NA"; break;
        case "OPC_NT":
            Dv1 = "OPC_NT Chi Nhánh Nha Trang";
            madvcs = "OPC_NT"; break;
        case "OPC_TG":
            Dv1 = "OPC_TG Chi Nhánh Tiền Giang";
            madvcs = "OPC_TG"; break;
        case "OPC_TP":
            Dv1 = "OPC_TP Chi Nhánh Hồ Chí Minh";
            madvcs = "OPC_TP"; break;
        case "OPC_VT":
            Dv1 = "OPC_VT Chi Nhánh Vũng Tàu";
            madvcs = "OPC_VT"; break;
        case "OPC":
            Dv1 = "OPC Công Ty";
            madvcs = "OPC"; break;
        case "OPC_B1":
            Dv1 = "OPC Công Ty";
            madvcs = "OPC"; break;
    }
    var maVt = Request.Cookies["Ma_Vt"].Value;
    var tenVt = Request.Cookies["Ten_Vt"].Value;
}
@using System.Data;
@using System.Globalization;
<!DOCTYPE html>
<html lang="en">

<head>



    <style>


        * {
            font-family: "Times New Roman";
        }

        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            color: blue;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            /*         justify-content:;*/
            width: 50%;
            height: 300px;
        }

        .submit {
            height: 50px;
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: relative;
            top: 0;
            left: 0;
            height: 50px;
            width: 200px;
            transition: all 0.5s ease;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        .data_table {
            width: max-content;
        }

        .bieu_do {
            padding: 10px;
            margin: 10%;
            text-align: center;
            width: 200px;
            font-size: 16px;
            font-weight: 600;
            color: #fff;
            cursor: pointer;
            margin: 20px;
            height: 55px;
            text-align: center;
            border: none;
            background-size: 300% 100%;
            border-radius: 10px;
            moz-transition: all .4s ease-in-out;
            -o-transition: all .4s ease-in-out;
            -webkit-transition: all .4s ease-in-out;
            transition: all .4s ease-in-out;
        }

            .bieu_do:hover {
                background-position: 100% 0;
                moz-transition: all .4s ease-in-out;
                -o-transition: all .4s ease-in-out;
                -webkit-transition: all .4s ease-in-out;
                transition: all .4s ease-in-out;
            }

            .bieu_do:focus {
                outline: none;
            }

        .bieu_do {
            background-image: linear-gradient(to right, #0ba360, #3cba92, #30dd8a, #2bb673);
            box-shadow: 0 4px 15px 0 rgba(23, 168, 108, 0.75);
        }

        .chart {
            margin: 20px 0px 0px 0px;
        }

        .text-loading {
            position: fixed;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 13px;
            color: black;
            z-index: 2;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 5px 10px;
            display: none;
        }

        .custom-checkbox {
            margin-top: 10px;
            display: inline-block;
            position: relative;
            padding-left: 30px;
            margin-right: 15px;
            cursor: pointer;
        }

            .custom-checkbox input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
            }

        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            border: 2px solid black;
            background-color: #ffffff;
        }

        .custom-checkbox:hover input ~ .checkmark {
            background-color: #ccc;
        }

        .custom-checkbox input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        .custom-checkbox .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        .checkContainer {
            height: 300px;
            overflow: auto;
            scrollbar-width: none;
        }

            .checkContainer::-webkit-scrollbar {
                width: 0.2em;
                background-color: transparent;
            }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        .tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7;
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important; /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
                }

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 1;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                bottom: 0px;
                /* left:300px;*/
            }

                .tab-control ul li {
                    text-align: center;
                }

        .closeTab {
            position: relative;
            display: inline-block;
            vertical-align: middle;
            margin-left: 10px; /* Điều chỉnh khoảng cách với h4 */
        }

        .closeIcon {
            display: inline-block;
            width: 30px;
            height: 25px;
            border-radius: 50%;
            background-color: white;
            color: black; /* Màu chữ x */
            text-align: center;
            line-height: 25px;
        }

        .tab.active {
            background-color: cornflowerblue; /* Màu nền tab khi active */
            color: #fff; /* Màu chữ khi active */
        }

        .tab.selected-tab {
            pointer-events: none;
            background-color: #3763a3; /* Màu nền của tab */
        }

            .tab.selected-tab a {
                color: white /* Màu nền của tab */
            }

            .tab.selected-tab .closeTab {
                pointer-events: auto;
            }

        .data_table {
            max-height: 100%;
            overflow: auto;
        }

            .data_table thead {
                position: sticky;
                top: 0;
                z-index: 100;
            }

        /*  .bold-row td:nth-child(3) {
            font-weight: bold;
        }*/

        .bold-row td:nth-child(4) {
            font-weight: bold;
        }

        .bold-row td:nth-child(5) {
            font-weight: bold;
        }

        .bold-row td:nth-child(6) {
            font-weight: bold;
        }

        .bold-row td:nth-child(7) {
            font-weight: bold;
        }

        .bold-row td:nth-child(8) {
            font-weight: bold;
        }

        .bold-row td:nth-child(9) {
            font-weight: bold;
        }

        .num {
            mso-number-format: "\#\,\#\#0\.00_ \;\[Red\]\-\#\,\#\#0\.00\ ";
        }

        .date {
            mso-number-format: "Medium Date";
        }

        .select-btn2 {
            position: relative;
        }

        #nhomtheoselect2 {
            display: none; /* Ẩn dropdown ban đầu */
            position: absolute;
            top: 100%;
            left: 0;
            width: 100%;
            z-index: 1;
            white-space: nowrap; /* Ngăn ngừa text quá dài bị xuống dòng */
            overflow-x: auto; /* Hiển thị thanh cuộn khi nội dung quá dài */
            max-height: 200px; /* Đặt chiều cao tối đa của dropdown */
            box-sizing: border-box;
        }

        .expanded {
            transform: rotate(180deg);
        }

        .expandable-content {
            display: none;
        }

        .expandable-content_detail {
            display: none;
        }

        .expandable-content1563 {
            display: none;
        }

        .expandable-content1561 {
            display: none;
        }

        .expandable-content1571 {
            display: none;
        }

        .expandable-content1572 {
            display: none;
        }
        .expandable-content1522 {
            display: none;
        }
        .expandable-content1521 {
            display: none;
        }
        .expandable-content_detail1563 {
            display: none;
        }

        .expandable-content_detail1561 {
            display: none;
        }

        .expandable-content_detail1571 {
            display: none;
        }

        .expandable-content_detail1572 {
            display: none;
        }
        .expandable-content_detail1521 {
            display: none;
        }
        .expandable-content_detail1522 {
            display: none;
        }
        .expandable-icon {
            cursor: pointer;
            transition: transform 0.3s;
        }

        .expanded {
            transform: rotate(180deg);
        }
      

    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/js/bootstrap-select.min.js"></script>
    @*<script type="text/javascript" src="Scripts/table2excel.js"></script>*@


    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>BÁO CÁO NHẬP XUẤT TỒN KHO</title>
    <meta content="" name="description">
    <meta content="Author" name="MJ Maraz">
    <link href="~/assets/images/favicon.png" rel="icon">
    <link href="~/assets/images/favicon.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.15.4/css/all.css" integrity="sha384-DyZ88mC6Up2uqS4h/KRgHuoeGwBcD4Ng9SiP4dIRy0EXTlnuz47vAwmeGwVChigm" crossorigin="anonymous" />
    <!-- ========================================================= -->
    <!-- ========================================================= -->


    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/css/datatables.min.css">
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/Styles/loader.css">
</head>
<!-- =============== Design & Develop By = MJ MARAZ   ====================== -->

<body style="background-color: #e0e8ee ">
    <div class="loader" style="z-index:1"></div>

    <div class="sidebar">
        <div class="logo-details">

        </div>
        <ul class="nav-links" style="justify-content: center; display: flex; margin-left: 10px; width: 300px">
            <li>
                <form id="dateForm" action="TongNhapXuatTonTheoKy" method="post" onsubmit="handleFormSubmit(event)">
                    <div id="locBC">
                        <span id="spanText" class="text-loading">[usp_TongHopNhapXuatTonTheoTK_SAP]</span>
                        <a>Từ Ngày</a><br /><br />
                        <input class="tu_ngay" placeholder="Từ Ngày" id="tu_ngay" name="From_date" type="date" format="YYYY-MM-DD" value="@Request.Cookies["From_date"].Value" />
                        <script>$("#tu_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script><br /><br />
                        <a>Đến Ngày</a><br /><br />
                        <input class="den_ngay" id="den_ngay" placeholder=" Đến Ngày" name="To_date" type="DATE" format="YYYY-MM-DD" value="@Request.Cookies["To_date"].Value" /><br /><br />
                        <script>$("#den_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script>
                    </div>
                    <h6>Company</h6>
                    @if (Request.Cookies["UserName"].Value == "Admin" || Request.Cookies["UserName"].Value == "OPCADMIN" || Request.Cookies["UserName"].Value == "OPCTCKT001" || Request.Cookies["UserName"].Value == "opctckt001" || Request.Cookies["Ma_Dvcs"].Value == "")
                    {

                        <div class="select-btn" style="width:100px;margin-top:10px">
                            <select name="Chitiet" id="chitietselect" onchange="saveSelectedValueToCookie3()">
                                <option value="" style="background-color: #020024;color:white">Chọn giá trị</option>
                                <option value="OPC_CT">OPC_CT Chi Nhánh Cần Thơ</option>
                                <option value="OPC_TG">OPC_TG Chi Nhánh Tiền Giang</option>
                                <option value="OPC_MD">OPC_MD Chi Nhánh Miền Đông</option>
                                <option value="OPC_TP">OPC_TP Chi Nhánh Hồ Chí Minh</option>
                                <option value="OPC_VT">OPC_VT Chi Nhánh Vũng Tàu</option>
                                <option value="OPC_NT">OPC_NT Chi Nhánh Nha Trang</option>
                                <option value="OPC_DN">OPC_DN Chi Nhánh Đà Nẵng</option>
                                <option value="OPC_NA">OPC_NA Chi Nhánh Nghệ An</option>
                                <option value="OPC_HN">OPC_HN Chi Nhánh Hà Nội</option>
                                <option value="OPC">OPC Công Ty</option>
                            </select>
                        </div>
                    }
                    else
                    {
                        <div class="select-btn" style="width:100px;margin-top:10px">
                            <select name="Chitiet" id="chitietselect" onchange="saveSelectedValueToCookie3()">
                                <option value="@madvcs" style="background-color: #020024;color:white">@Dv1</option>

                            </select>
                        </div>
                    }

                    <a>Vật Tư</a><br />
                    <input type="text" id="dropdownInputVT" list="dropdownListVT" placeholder="Tìm kiếm Vật Tư">
                    <datalist id="dropdownListVT">
                        @foreach (var item in ViewBag.DataVT)
                        {
                            <option value="@item.Ma_Vt" data-TenVt="@item.Ten_Vt" data-maVT="@item.Ma_Vt">@item.Ten_Vt</option>
                        }
                    </datalist>
                    <input type="hidden" name="Ma_Vt" id="selectedOptionVT">
                    <br />
                    <h6>Business President</h6>
                    <div class="select-btn2" style="width:250px;margin-top:10px">
                        <input type="text" id="searchInput" oninput="filterDropdown()" placeholder="Tìm kiếm..." autocomplete="off">
                        <select name="Nhom" id="nhomtheoselect2" size="5" onchange="saveSelectedValueToCookie2()">
                            @*<option value="" style="background-color: #020024;color:white">Tất Cả</option>*@
                            <option value="">Tất Cả</option>
                            <option value="OPC_B1">OPC_B1 Văn phòng Tp.HCM</option>
                            <option value="OPC_B1_01020302">OPC_B1_01020302 Nhóm Cửa Hàng Sỉ Q10</option>
                            <option value="OPC_B1_01020303">OPC_B1_01020303 Nhóm Cửa hàng sỉ HAPU Hà Nội</option>
                            <option value="OPC_B2">OPC_B2 Nhà máy Bình Dương</option>
                            <option value="OPC_BD">OPC_BD Gia Công OPCBD</option>
                            <option value="OPC_CT">OPC_CT CN Cần Thơ</option>
                            <option value="OPC_DN"> OPC_DN CN Đà Nẵng</option>
                            <option value="OPC_DN_03">OPC_DN_03 Trung Việt</option>
                            <option value="OPC_HN">OPC_HN CN Hà Nội</option>
                            <option value="OPC_HN_03">OPC_HN_03 Nhóm cửa hàng HAPU Hà Nội</option>
                            <option value="OPC_HN_04">OPC_HN_04 OPC1</option>
                            <option value="OPC_MD">OPC_MD CN Miền Đông</option>
                            <option value="OPC_NA">OPC_NA CN Nghệ An</option>
                            <option value="OPC_NT">OPC_NT CN Nha Trang</option>
                            <option value="OPC_RD">OPC_RD R&D</option>
                            <option value="OPC_TG">OPC_TG CN Tiền Giang</option>
                            <option value="OPC_TP">OPC_TP CN Hồ Chí Minh</option>
                            <option value="OPC_TP_03">OPC_TP_03 Cửa hàng phú lâm</option>
                            <option value="OPC_TP_04">OPC_TP_04 Cửa hàng phùng hưng</option>
                            <option value="OPC_TP_05">OPC_TP_05 Cửa hàng Online HCM</option>
                            <option value="OPC_VT">OPC_VT CN Vũng Tàu</option>



                        </select>
                    </div>
                    <h6>Chọn Tài Khoản</h6>
                    <div class="select-btn" style="width:100px;margin-top:10px">
                        <select name="Nhom" id="nhomtheoselect" onchange="saveSelectedValueToCookie()">
                            <option value="" style="background-color: #020024;color:white">Tất Cả</option>
                            <option value="1521" data-tenTK="NGUYÊN LIỆU CHÍNH">1521 - NGUYÊN LIỆU CHÍNH</option>
                            <option value="1522" data-tenTK="BAO BÌ, PHỤ LIỆU">1522 - BAO BÌ, PHỤ LIỆU</option>
                            <option value="1551" data-tenTK="THÀNH PHẨM">1551 - THÀNH PHẨM</option>
                            <option value="1561" data-tenTK="GIÁ MUA HÀNG HÓA">1561 - GIÁ MUA HÀNG HÓA</option>
                            <option value="1563" data-tenTK="HÀNG HÓA KHUYẾN MÃI">1563 - HÀNG HÓA KHUYẾN MÃI</option>
                            <option value="1571" data-tenTK="HÀNG HÓA GỬI ĐI BÁN">1571 - HÀNG HÓA GỬI ĐI BÁN</option>
                            <option value="1572" data-tenTK="THÀNH PHẨM GỬI ĐI BÁN">1572 - THÀNH PHẨM GỬI ĐI BÁN</option>

                        </select>
                    </div>
                    <div>
                        <button class="submit" type="submit" id="runReportButton" onclick="runReport();saveNgay()">
                            Chạy Báo Cáo
                        </button>

                    </div>

                </form>
                <div style="display:flex">
                    @*<button id="exportbutton"style="border-radius: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd ">Xuất Excel</button>*@
                    <button style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px; margin-top: 10px; background-color: #aec9e0; color: #3483bd" onclick="exportToExcel()">Xuất Excel</button>

                    <button onclick="printPage()" style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd;padding:10px ">
                        Print
                    </button>
                </div>
                <!--<div style="display:flex">-->
                @*<button id="exportbutton"style="border-radius: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd ">Xuất Excel</button>*@
                <!--<button style="border-radius: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd " onclick="exportToExcel()">-->
                @*<a onclick="return ExcellentExport.excel(this, 'example', 'Sheet 1');" download="SoQuyTienMat.xls" style="color: #3483bd">Xuất Excel </a>*@
                <!--Xuất Excel
                    </button>
                    <button onclick="printPage()" style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd;padding:10px ">
                        <i class="fa-solid fa-print">Print</i>
                    </button>
                </div>-->
                @*<a download="somedata.xls"
                       href="#"
                       onclick="return ExcellentExport.excel(this, 'example', 'Sheet Name Here');">
                        Export table to Excel
                    </a>*@
            </li>
        </ul>
    </div>


    <header class="header_part" style="background-color: #aec9e0; color: #3483bd ">
        @if (Request.Cookies["UserName"].Value == "Admin-cnct" || Request.Cookies["UserName"].Value == "Admin-cntg" || Request.Cookies["UserName"].Value == "Admin-cnmd" || Request.Cookies["UserName"].Value == "Admin-cnh1" || Request.Cookies["UserName"].Value == "Admin-cnvt"
              || Request.Cookies["UserName"].Value == "Admin-cnnt" || Request.Cookies["UserName"].Value == "Admin - cndn" || Request.Cookies["UserName"].Value == "Admin - cnna" || Request.Cookies["UserName"].Value == "Admin - cnhn" && Request.Cookies["UserName"].Value == "admin-cnct" || Request.Cookies["UserName"].Value == "admin-cntg" || Request.Cookies["UserName"].Value == "admin-cnmd" || Request.Cookies["UserName"].Value == "admin-cnh1" || Request.Cookies["UserName"].Value == "admin-cnvt"
              || Request.Cookies["UserName"].Value == "admin-cnnt" || Request.Cookies["UserName"].Value == "admin - cndn" || Request.Cookies["UserName"].Value == "admin - cnna" || Request.Cookies["UserName"].Value == "admin - cnhn")
        {



            <a href="/Home/About1" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        else
        {
            <a href="/Home/About" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        <h4 style="color:#3483bd">TỔNG HỢP NHẬP XUẤT TỒN THEO TK</h4>
        <h4 style="color:#3483bd">Từ @formattedFromDate đến @formattedToDate</h4>
        <h6 style="color:#3483bd;font-weight:bold">@Request.Cookies["Ma_Dv"].Value  @Dv</h6>
    </header>
    <!-- =======  Data-Table  = Start  ========================== -->

    <div class="container" style="margin-left:200px">


        <div class="row">
            <div class="col-12">
                @*<div class="search-container">

                        <span>Search: <input type="Text" name="" id="myInput" placeholder="Tìm kiếm" onkeyup="searchFun()"></span>
                        <div class="search"></div>
                    </div>*@
                <div class="data_table" style="max-height:1500px;width:1200px">
                    <h6 style="font-weight:bold">@maVt - @tenVt</h6>
                    <table id="example" class="table table-striped table-bordered" data-excel-name="Sheet 1">
                        <thead class="table-dark" id="head">
                            <tr>
                                <th rowspan="2" style="align-content:center">Tài Khoản<br />G/L Account</th>
                                <th rowspan="2" style="align-content: center">Mã hàng<br />Item Code</th>
                                <th rowspan="2" style="align-content: center">Tên hàng<br />Item Name</th>
                                <th rowspan="2" style="align-content: center">Đvt<br />Unit</th>

                                <th colspan="2">Số Dư Đầu Kỳ<br />Opening Balance</th>
                               

                                <th colspan="2">Nhập kho<br />Move In</th>
                                <th colspan="2">Xuất Kh<br />Move On</th>
                                <th colspan="2"> Số Dư Cuối Kỳ<br />Closing Balance</th>
                            </tr>
                            <tr>

                                <th>Số Lượng<br />Qty</th>
                                <th>Giá Trị<br />Amount</th>
                               
                                <th>Số Lượng<br />Qty</th>
                                <th>Giá Trị<br />Amount</th>

                                <th>Số Lượng<br />Qty</th>
                                <th>Giá Trị<br />Amount</th>

                                <th>Số Lượng<br />Qty</th>
                                <th>Giá Trị<br />Amount</th>



                            </tr>
                        </thead>
                        <tbody>
                            @foreach (DataRow row in Model.Tables[1].Rows)
                            {
                                if (row["Tk"].ToString() == "1521")
                                {

                                    <tr style="font-weight:bold">
                                        <td>
                                            Tài Khoản 1521 <i class="fa-solid fa-caret-down" onclick="toggleRows1521(this)" style="cursor:pointer"></i>
                                        </td>
                                        <td></td>
                                        <td style="text-align:left">Nguyên Liệu Chính</td>

                                        <td></td>
                                        <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_DK"])).Replace(",", ".")</td>

                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_CK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_CK"])).Replace(",", ".")</td>
                                    </tr>


                                    foreach (DataRow row2 in Model.Tables[0].Rows)
                                    {
                                        if (row2["Tk"].ToString() == "1521")
                                        {
                                            if (Convert.ToDecimal(row2["So_Luong_CK"]) > 0 || Convert.ToDecimal(row2["So_Luong_DK"]) > 0 || Convert.ToDecimal(row2["So_Luong_Xuat"]) > 0 || Convert.ToDecimal(row2["So_Luong_Nhap"]) > 0)
                                            {
                                                <tr class="expandable-content_detail1521">
                                                    <td>@row2["Tk"]</td>
                                                    <td data-format="string">@row2["Ma_Vt"]</td>
                                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                                    <td>@row2["Dvt"]</td>
                                                    <td data-t="n" class="num" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_DK"])).Replace(",", ".")</td>

                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_CK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_CK"])).Replace(",", ".")</td>


                                                </tr>
                                            }
                                        }
                                    }
                                }
                                if (row["Tk"].ToString() == "1522")
                                {

                                    <tr style="font-weight:bold">
                                        <td>
                                            Tài Khoản 1522 <i class="fa-solid fa-caret-down" onclick="toggleRows1522(this)" style="cursor:pointer"></i>
                                        </td>
                                        <td></td>
                                        <td style="text-align:left">Bao Bì, Phụ Liệu</td>

                                        <td></td>
                                        <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_DK"])).Replace(",", ".")</td>

                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_CK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_CK"])).Replace(",", ".")</td>
                                    </tr>


                                    foreach (DataRow row2 in Model.Tables[0].Rows)
                                    {
                                        if (row2["Tk"].ToString() == "1522")
                                        {
                                            if (Convert.ToDecimal(row2["So_Luong_CK"]) > 0 || Convert.ToDecimal(row2["So_Luong_DK"]) > 0 || Convert.ToDecimal(row2["So_Luong_Xuat"]) > 0 || Convert.ToDecimal(row2["So_Luong_Nhap"]) > 0)
                                            {
                                                <tr class="expandable-content_detail1522">
                                                    <td>@row2["Tk"]</td>
                                                    <td data-format="string">@row2["Ma_Vt"]</td>
                                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                                    <td>@row2["Dvt"]</td>
                                                    <td data-t="n" class="num" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_DK"])).Replace(",", ".")</td>

                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_CK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_CK"])).Replace(",", ".")</td>


                                                </tr>
                                            }
                                        }
                                    }
                                }
                                if (row["Tk"].ToString() == "1551")
                                {

                                    <tr style="font-weight:bold">
                                        <td>
                                            Tài Khoản 1551 <i class="fa-solid fa-caret-down" onclick="toggleRows1551(this)" style="cursor:pointer"></i>
                                        </td>
                                        <td></td>
                                        <td style="text-align:left">Thành Phẩm</td>

                                        <td></td>
                                        <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_DK"])).Replace(",", ".")</td>

                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_CK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_CK"])).Replace(",", ".")</td>
                                    </tr>


                                    foreach (DataRow row2 in Model.Tables[0].Rows)
                                    {
                                        if (row2["Tk"].ToString() == "1551")
                                        {
                                            if (Convert.ToDecimal(row2["So_Luong_CK"]) > 0 || Convert.ToDecimal(row2["So_Luong_DK"]) > 0 || Convert.ToDecimal(row2["So_Luong_Xuat"]) > 0 || Convert.ToDecimal(row2["So_Luong_Nhap"]) > 0)
                                            {
                                                <tr class="expandable-content_detail">
                                                    <td>@row2["Tk"]</td>
                                                    <td data-format="string">@row2["Ma_Vt"]</td>
                                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                                    <td>@row2["Dvt"]</td>
                                                    <td data-t="n" class="num" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_DK"])).Replace(",", ".")</td>

                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_CK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_CK"])).Replace(",", ".")</td>


                                                </tr>
                                            }
                                        }
                                    }
                                }
                                if (row["Tk"].ToString() == "1561")
                                {
                                    <tr style="font-weight:bold">
                                        <td>
                                            Tài Khoản 1561 <i class="fa-solid fa-caret-down" onclick="toggleRows1561(this)" style="cursor:pointer"></i>
                                        </td>
                                        <td></td>
                                        <td style="text-align:left">Giá Mua Hàng Hóa</td>
                                        <td></td>
                                        <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_CK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_CK"])).Replace(",", ".")</td>
                                    </tr>

                                    foreach (DataRow row2 in Model.Tables[0].Rows)
                                    {
                                        if (row2["Tk"].ToString() == "1561")
                                        {
                                            if (Convert.ToDecimal(row2["So_Luong_CK"]) > 0 || Convert.ToDecimal(row2["So_Luong_DK"]) > 0 || Convert.ToDecimal(row2["So_Luong_Xuat"]) > 0 || Convert.ToDecimal(row2["So_Luong_Nhap"]) > 0)
                                            {


                                                <tr class="expandable-content_detail1561">
                                                    <td>@row2["Tk"]</td>
                                                    <td data-format="string">@row2["Ma_Vt"]</td>
                                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                                    <td>@row2["Dvt"]</td>
                                                    <td data-t="n" class="num" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_CK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_CK"])).Replace(",", ".")</td>


                                                </tr>
                                            }
                                        }
                                    }
                                }

                                if (row["Tk"].ToString() == "1563")
                                {
                                    <tr style="font-weight:bold">
                                        <td>
                                            Tài Khoản 1563 <i class="fa-solid fa-caret-down" onclick="toggleRows1563(this)" style="cursor:pointer"></i>
                                        </td>
                                        <td></td>
                                        <td style="text-align:left">Hàng Hóa Khuyến Mãi</td>
                                        <td></td>
                                        <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_CK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_CK"])).Replace(",", ".")</td>
                                    </tr>


                                    foreach (DataRow row2 in Model.Tables[0].Rows)
                                    {
                                        if (row2["Tk"].ToString() == "1563")
                                        {
                                            if (Convert.ToDecimal(row2["So_Luong_CK"]) > 0 || Convert.ToDecimal(row2["So_Luong_DK"]) > 0 || Convert.ToDecimal(row2["So_Luong_Xuat"]) > 0 || Convert.ToDecimal(row2["So_Luong_Nhap"]) > 0)
                                            {

                                                <tr class="expandable-content_detail1563">
                                                    <td>@row2["Tk"]</td>
                                                    <td data-format="string">@row2["Ma_Vt"]</td>
                                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                                    <td>@row2["Dvt"]</td>
                                                    <td data-t="n" class="num" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_CK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_CK"])).Replace(",", ".")</td>


                                                </tr>
                                            }
                                        }
                                    }
                                }
                                if (row["Tk"].ToString() == "1571")
                                {
                                    <tr style="font-weight:bold">
                                        <td>
                                            Tài Khoản 1571 <i class="fa-solid fa-caret-down" onclick="toggleRows1571(this)" style="cursor:pointer"></i>
                                        </td>
                                        <td></td>
                                        <td style="text-align:left">Hàng Hóa Gửi Đi Bán</td>
                                        <td></td>
                                        <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_CK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_CK"])).Replace(",", ".")</td>
                                    </tr>


                                    foreach (DataRow row2 in Model.Tables[0].Rows)
                                    {
                                        if (row2["Tk"].ToString() == "1571")
                                        {
                                            if (Convert.ToDecimal(row2["So_Luong_CK"]) > 0 || Convert.ToDecimal(row2["So_Luong_DK"]) > 0 || Convert.ToDecimal(row2["So_Luong_Xuat"]) > 0 || Convert.ToDecimal(row2["So_Luong_Nhap"]) > 0)
                                            {


                                                <tr class="expandable-content_detail1571">
                                                    <td>@row2["Tk"]</td>
                                                    <td data-format="string">@row2["Ma_Vt"]</td>
                                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                                    <td>@row2["Dvt"]</td>
                                                    <td data-t="n" class="num" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_CK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_CK"])).Replace(",", ".")</td>


                                                </tr>

                                            }
                                        }
                                    }
                                }
                                if (row["Tk"].ToString() == "1572")
                                {
                                    <tr style="font-weight:bold">
                                        <td>
                                            Tài Khoản 1572 <i class="fa-solid fa-caret-down" onclick="toggleRows1572(this)" style="cursor:pointer"></i>
                                        </td>
                                        <td></td>
                                        <td style="text-align:left">Thành Phẩm Gửi Đi Bán</td>
                                        <td></td>
                                        <td style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_DK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["So_Luong_CK"])).Replace(",", ".")</td>
                                        <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Gia_Tri_CK"])).Replace(",", ".")</td>
                                    </tr>


                                    foreach (DataRow row2 in Model.Tables[0].Rows)
                                    {
                                        if (row2["Tk"].ToString() == "1572")
                                        {
                                            if (Convert.ToDecimal(row2["So_Luong_CK"]) > 0 || Convert.ToDecimal(row2["So_Luong_DK"]) > 0 || Convert.ToDecimal(row2["So_Luong_Xuat"]) > 0 || Convert.ToDecimal(row2["So_Luong_Nhap"]) > 0)
                                            {


                                                <tr class="expandable-content_detail1572">
                                                    <td>@row2["Tk"]</td>
                                                    <td data-format="string">@row2["Ma_Vt"]</td>
                                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                                    <td>@row2["Dvt"]</td>
                                                    <td data-t="n" class="num" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style="text-align:right"> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_DK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Nhap"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_Xuat"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["So_Luong_CK"])).Replace(",", ".")</td>
                                                    <td data-t="n" style='text-align:right;'> @String.Format("{0:n0}", Convert.ToDecimal(row2["Gia_Tri_CK"])).Replace(",", ".")</td>


                                                </tr>
                                            }
                                        }
                                    }
                                }
                            }
                        </tbody>








                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- =======  Data-Table  = End  ===================== -->
    <!-- ============ Java Script Files  ================== -->
    <script src="~/assets/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/jquery-3.6.0.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="//cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>
    <script src="~/assets/js/pdfmake.min.js"></script>
    <script src="~/assets/js/vfs_fonts.js"></script>
    <script src="~/assets/js/custom.js"></script>
    <script src="https://cdn.canvasjs.com/canvasjs.min.js"></script> @*<script src="https://code.jquery.com/jquery-3.6.0.min.js"
        integrity="sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4="
        crossorigin="anonymous"></script>*@
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.8.0/Chart.bundle.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>

    <script>
        function exportToExcel() {
            // Clone bảng gốc
            var temporaryTable = $('#example').clone();

            // Thực hiện điều chỉnh vị trí của tiêu đề
          

            // Xuất Excel từ bảng đã được xử lý
            temporaryTable.table2excel({
                /*exclude: ".hidden",*/
                name: "Sheet 1",
                filename: "TongHopNhapXuatTonTheoTK"
            });
        }

    </script>








    <script>
        function toggleRows1551(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }

        function toggleRows1563(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail1563')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }
        function toggleRows1522(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail1522')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }
        function toggleRows1521(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail1521')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }
        function toggleRows1561(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail1561')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }

        function toggleRows1571(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail1571')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }

        function toggleRows1572(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail1572')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }
    </script>
    <script>
        // Lấy các phần tử cần sử dụng
        var input = document.getElementById("searchInput");
        var select = document.getElementById("nhomtheoselect2");

        // Thêm event listener cho sự kiện click trên toàn bộ trang
        document.addEventListener("click", function (event) {
            // Kiểm tra nếu sự kiện click không phải từ ô input hoặc dropdown
            if (event.target !== input && event.target !== select) {
                // Ẩn dropdown
                select.style.display = "none";
            }
        });
        function filterDropdown() {
            var filter = input.value.toUpperCase();
            var option = select.getElementsByTagName("option");

            for (var i = 0; i < option.length; i++) {
                var txtValue = option[i].textContent || option[i].innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    option[i].style.display = "";
                } else {
                    option[i].style.display = "none";
                }
            }

            // Tự động mở rộng dropdown
            select.size = Math.min(5, select.options.length);

            // Hiển thị dropdown khi ô input được click
            select.style.display = "block";
        }
        function saveSelectedValueToCookie2() {
            var select = document.getElementById("nhomtheoselect2");
            var input = document.getElementById("searchInput");

            // Lấy giá trị đã chọn từ select
            var selectedValue = select.value;

            // Cập nhật giá trị của ô input
            input.value = selectedValue;

            // Đặt giá trị vào cookie, bao gồm trường hợp selectedValue là null hoặc undefined
            document.cookie = 'Ma_Dv=' + (selectedValue != null ? selectedValue : '');

            // Ẩn dropdown select
            select.style.display = "none";

            // Thực hiện các bước khác theo yêu cầu của bạn.
            console.log("Đã chọn giá trị: " + selectedValue);

            // Gọi hàm để nhóm dữ liệu dựa trên giá trị đã chọn
        }

    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            // Kiểm tra xem cookie "Ma_NH" có tồn tại không
            var maNHValue = getCookie("Ma_Dv");

            // Nếu có giá trị, thiết lập giá trị cho ô input
            if (maNHValue) {
                document.getElementById("searchInput").value = maNHValue;
            }
        });

        // Hàm lấy giá trị của một cookie
        function getCookie(cookieName) {
            var name = cookieName + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var cookieArray = decodedCookie.split(';');

            for (var i = 0; i < cookieArray.length; i++) {
                var cookie = cookieArray[i];
                while (cookie.charAt(0) == ' ') {
                    cookie = cookie.substring(1);
                }
                if (cookie.indexOf(name) == 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return null;
        }
    </script>





    <script>
        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInputVT");
                    var selectedOption = document.querySelector("#dropdownListVT option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var tenDt = selectedOption.getAttribute('data-maVT');
                        document.cookie = 'Ma_Vt=' + tenDt;
                    } else {
                        var selected = "";
                        document.cookie = 'Ma_Vt=' + selected;
                    }
                });
            }
        });
        function getCookie(name) {
            const value = `; ${document.cookie}`;
            const parts = value.split(`; ${name}=`);
            if (parts.length === 2) return parts.pop().split(';').shift();
        }
        function saveSelectedValueToCookie3() {
            var selectedValue = $("#chitietselect").val();

            // Lấy giá trị của cookie hiện tại
            var existingCookieValue = getCookie('Ma_Dvcs');


            if (existingCookieValue) {
                // Nếu cookie đã tồn tại, cập nhật giá trị của nó và thiết lập thời gian hết hạn
                document.cookie = 'Ma_Dvcs=' + selectedValue;
            } else {
                // Nếu cookie chưa tồn tại, tạo một cookie mới với thời gian hết hạn
                document.cookie = 'Ma_Dvcs=' + selectedValue;
            }
        }
    </script>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var selectedInfoFromCookie = getCookie('Ma_Tk');
            if (selectedInfoFromCookie) {
                var selectElement = document.getElementById('nhomtheoselect');

                // Đặt giá trị mặc định cho select dựa trên giá trị cookie
                selectElement.value = selectedInfoFromCookie;

                // Gọi hàm để lưu giá trị mới vào cookie nếu cần thiết
                saveSelectedValueToCookie();
            }
        });

        function saveSelectedValueToCookie() {
            var select = document.getElementById("nhomtheoselect");
            var selectedValue = select.value;

            // Kiểm tra nếu không có lựa chọn nào được chọn thì đặt giá trị mặc định là "Tất Cả"
            var cookieValue = selectedValue != null ? selectedValue : '';

            document.cookie = 'Ma_TK=' + cookieValue;

            // Gọi hàm để nhóm dữ liệu dựa trên giá trị đã chọn
        }


    </script>

    <script>
        function runReport() {

            const uncheckedCheckboxIndexes = [];
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

            checkboxes.forEach((checkbox, index) => {
                if (!checkbox.checked) {
                    uncheckedCheckboxIndexes.push(index);
                }
            });

            // Lưu trạng thái vào Local Storage
            localStorage.setItem('uncheckedCheckboxIndexes', JSON.stringify(uncheckedCheckboxIndexes));
            // Hiển thị thẻ span có id là "spanText"
            const spanElement = document.getElementById("spanText");
            spanElement.style.display = "block";
            const hiddenElement = document.getElementById("head");
            hiddenElement.style.visibility = "hidden";
        }
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');
            const table = document.getElementById('example');

            checkboxes.forEach((checkbox, index) => {
                checkbox.addEventListener('change', function () {
                    const columnIndex = index;
                    const rows = table.querySelectorAll('tr');

                    rows.forEach(row => {
                        const cells = row.querySelectorAll('td, th');
                        cells[columnIndex].style.display = this.checked ? '' : 'none';
                    });
                });
            });
        });
    </script>
    <script>

        function saveNgay() {
            var from_date = document.getElementById("tu_ngay").value;
            var to_date = document.getElementById("den_ngay").value;
            var inputValue = document.getElementById("searchInput").value;
            if (!inputValue.trim()) {
                // Nếu ô input rỗng, đặt giá trị cookie thành khoảng trắng
                document.cookie = 'Ma_Dv= ';
            } else {
                // Nếu ô input có giá trị, đặt giá trị cookie theo giá trị của ô input
                document.cookie = 'Ma_Dv=' + inputValue;
            }
            var select = document.getElementById("nhomtheoselect");
            var selectedValue = select.value;

            // Kiểm tra nếu không có lựa chọn nào được chọn thì đặt giá trị mặc định là "Tất Cả"
            var cookieValue = selectedValue != null ? selectedValue : '';


            document.cookie = 'Ma_TK=' + cookieValue;
            document.cookie = "From_date=" + from_date;
            document.cookie = "To_date=" + to_date;
            saveSelectedValueToCookie2();
            saveSelectedValueToCookie();
        }
        function handleFormSubmit(event) {
            event.preventDefault();
            showLoader();
            // Show the loader when the form is submitted


            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Tạo URL mới với các tham số truy vấn
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

            // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
            window.location.href = actionUrl;
        }
        function displaySelectedDate() {
            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Hiển thị các giá trị ngày đã chọn lên thẻ h5
            const selectedDateDisplay = document.getElementById('selectedDateDisplay');
            selectedDateDisplay.innerText = `Từ ngày: ${fromDate} - Đến ngày: ${toDate}`;
            window.location.href = selectedDateDisplay;
        }

        // Function to show the loader
        function showLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.remove("loader-hidden");
        }

        // Function to hide the loader
        function hideLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.add("loader-hidden");
        }

        /*  Add an event listener to the form submission*/
        document.getElementById("dateForm").addEventListener("submit", (event) => {
            event.preventDefault();
            displaySelectedDate();
            // Show the loader when the form is submitted
            showLoader();

            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Tạo URL mới với các tham số truy vấn
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

            // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
            window.location.href = actionUrl;
        });

        // Add event listener for window load event
        window.addEventListener("load", () => {
            // Hide the loader after the page is loaded
            hideLoader();
            const fromDate = urlParams.get('From_date');
            const toDate = urlParams.get('To_date');
            if (fromDate && toDate) {
                displaySelectedDate();
            }
        });
    </script>


    <script>
        function getCookie(name) {
            var match = document.cookie.match(new RegExp('(^| )' + name + '=([^;]+)'));
            if (match) return match[2];
        }

        // Hàm để đặt giá trị mặc định cho dropdown
        function setDefaultDropdownValue() {
            // Lấy giá trị của cookie 'Ma_TK'
            var maTKValue = getCookie('Ma_Tk');
            var maNHValue = getCookie('Ma_Dv');
            // Nếu cookie tồn tại và giá trị là một trong các giá trị của dropdown
            if (maTKValue && document.getElementById('nhomtheoselect').querySelector('option[value="' + maTKValue + '"]')) {
                // Đặt giá trị mặc định cho dropdown
                document.getElementById('nhomtheoselect').value = maTKValue;
            }
            if (maNHValue) {
                document.getElementById('searchInput').value = maNHValue;
            }
        }

        // Gọi hàm setDefaultDropdownValue khi trang được tải
        window.onload = function () {
            setDefaultDropdownValue();
        };
    </script>
    <script>
        function printPage() {
            // Mở cửa sổ in mới
            var printWindow = window.open('', '_blank');
            printWindow.location.href = "/THNhapXuatTonTheoTK/TongNhapXuatTonTheoKy_In";



        }
    </script>
    <!--<script>
        window.onload = function () {
            // Trích xuất giá trị từ cookie
            function getCookieValue(cookieName) {
                const name = cookieName + "=";
                const decodedCookie = decodeURIComponent(document.cookie);
                const cookieArray = decodedCookie.split(";");
                for (let i = 0; i < cookieArray.length; i++) {
                    let cookie = cookieArray[i];
                    while (cookie.charAt(0) === " ") {
                        cookie = cookie.substring(1);
                    }
                    if (cookie.indexOf(name) === 0) {
                        return cookie.substring(name.length, cookie.length);
                    }
                }
                return "";
            }

            // Lấy giá trị từ cookie "Dvcs3"
            const dvcs4Value = getCookieValue("Ma_Dvcs");

            // Tìm phần tử select
            const selectElement1 = document.getElementById("chitietselect");

            // Thiết lập giá trị cho select nếu có giá trị từ cookie
            if (dvcs4Value !== "" ) {
                selectElement1.value = dvcs4Value;
            }


            /*  var maDvCsSelect = document.getElementById("maDvCsSelect");*/-->
    @*var maDvcsCookieValue = "@Request.Cookies["Ma_Dvcs"].Value";*@
    <!--// Thay thế bằng cách lấy giá trị từ Razor (ASP.NET)

    //        if (maDvcsCookieValue === "OPC_VT" || maDvcsCookieValue === "OPC_CT" || maDvcsCookieValue === "OPC_TP" || maDvcsCookieValue === "OPC_TG" || maDvcsCookieValue === "OPC_MD" || maDvcsCookieValue === "OPC_NT" || maDvcsCookieValue === "OPC_DN" || maDvcsCookieValue === "OPC_NA" || maDvcsCookieValue === "OPC_HN" || maDvcsCookieValue === "OPC_B1") {
    //    // Nếu MA_DVCS là rỗng, bạn có thể ẩn dropdown
    //    maDvCsSelect.style.display = "none";
    //} else {
    //    // Nếu MA_DVCS không rỗng, bạn có thể hiển thị dropdown và chọn giá trị tương ứng
    //    maDvCsSelect.style.display = "block";
    //  /*  maDvCsSelect.value = maDvcsCookieValue;*/
    //        }


        };


    </script>-->

    <script>



        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInputdv = document.getElementById('searchInput');
            var selectedOptiondv = document.getElementById('nhomtheoselect2');
            var dropdownInput = document.getElementById('dropdownInputVT');
            var selectedOption = document.getElementById('selectedOption');
            // Lấy giá trị từ cookie
            var maDvFromCookie = getCookie1('Ma_Dv');
            var mavtFromCookie = getCookie1('Ma_Vt');
            // Đặt giá trị cho trường input và hidden input
            if (maDvFromCookie) {
                dropdownInputdv.value = maDvFromCookie;
                selectedOptiondv.value = maDvFromCookie;
            }
            if (mavtFromCookie) {
                dropdownInput.value = mavtFromCookie;
                selectedOption.value = mavtFromCookie;
            }
        });
        // Hàm lấy giá trị từ cookie
        function getCookie1(cookieName) {
            var name = cookieName + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var cookieArray = decodedCookie.split(';');

            for (var i = 0; i < cookieArray.length; i++) {
                var cookie = cookieArray[i];
                while (cookie.charAt(0) == ' ') {
                    cookie = cookie.substring(1);
                }
                if (cookie.indexOf(name) == 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return null;
        }
    </script>

    <script>
        window.onload = function () {
            // Trích xuất giá trị từ cookie
            //function getCookieValue(cookieName) {
            //    const name = cookieName + "=";
            //    const decodedCookie = decodeURIComponent(document.cookie);
            //    const cookieArray = decodedCookie.split(";");
            //    for (let i = 0; i < cookieArray.length; i++) {
            //        let cookie = cookieArray[i];
            //        while (cookie.charAt(0) === " ") {
            //            cookie = cookie.substring(1);
            //        }
            //        if (cookie.indexOf(name) === 0) {
            //            return cookie.substring(name.length, cookie.length);
            //        }
            //    }
            //    return "";
            //}

            // Lấy giá trị từ cookie "Dvcs3"
            const dvcs3Value = getCookie1("Ma_TK");

            // Tìm phần tử select
            const selectElement = document.getElementById("nhomtheoselect");

            // Thiết lập giá trị cho select nếu có giá trị từ cookie
            if (dvcs3Value !== "" ) {
                selectElement.value = dvcs3Value;
            }


              var maDvCsSelect = document.getElementById("maDvCsSelect");
    var maDvcsCookieValue = "@Request.Cookies["Ma_TK"].Value"; // Thay thế bằng cách lấy giá trị từ Razor (ASP.NET)

    //        if (maDvcsCookieValue === "1551" || maDvcsCookieValue === "1561" || maDvcsCookieValue === "1563" || maDvcsCookieValue === "1571" || maDvcsCookieValue === "1572" ) {
    //    // Nếu MA_DVCS là rỗng, bạn có thể ẩn dropdown
    //    maDvCsSelect.style.display = "none";
    //} else {
    //    // Nếu MA_DVCS không rỗng, bạn có thể hiển thị dropdown và chọn giá trị tương ứng
    //    maDvCsSelect.style.display = "block";
    //  /*  maDvCsSelect.value = maDvcsCookieValue;*/
    //        }


        };


    </script>
</body>

</html>