
@{
    ViewBag.Title = "BaoCaoBanHangTDV";
    string ten = "";
    foreach (DataRow row in Model.Tables[0].Rows)
    {
        ten = @row["Ten_DvCs"].ToString();
        break;
    }
}

@using System.Data;
<!DOCTYPE html>
<html lang="en">

<head>


    <style>
        a:hover {
            background-color: lightskyblue;
        }

        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            color: blue;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            justify-content:;
            width: 50%;
            height: 300px;
        }

        .submit {
            /*height: 50px;
        width: 100px;*/
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: relative;
            top: 0;
            left: 0;
            height: 50px;
            width: 200px;
            transition: all 0.5s ease;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        .data_table {
            width: max-content;
        }

        h5 {
            text-align: center;
            font-size: 15px;
        }

        .text-loading {
            position: fixed;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 13px;
            color: black;
            z-index: 2;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 5px 10px;
            display: none;
        }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        .tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7;
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important; /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
                }

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 90000;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                /* left:300px;*/
            }

                .tab-control ul li {
                    text-align: center;
                }

        .tab.selected-tab {
            pointer-events: none;
            background-color: #3763a3; /* Màu nền của tab */
        }

            .tab.selected-tab a {
                pointer-events: none;
                color: white /* Màu nền của tab */
            }

            .tab.selected-tab .closeTab {
                pointer-events: auto;
            }

        .expandable-icon {
            cursor: pointer;
            transition: transform 0.3s;
        }

        .expanded {
            transform: rotate(180deg);
        }

        .expandable-content {
            display: none;
        }

        .expandable-content_detail {
            display: none;
        }

        .expandable-content_detailCON {
            display: none;
        }

        .expandable-content_detailSUI {
            display: none;
        }

        .expandable-content_detailPHIEN {
            display: none;
        }

        .expandable-content_detail25 {
            display: none;
        }

        .data_table {
            max-height: 100%; /* Đặt chiều cao tối đa của container để có thanh cuộn */
            overflow: auto;
        }

            .data_table thead th {
                position: sticky;
                top: 0;
                z-index: 100;
            }

        tr td:nth-child(2) {
            background-color: cornflowerblue;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(3) {
            background-color: cornflowerblue;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(4) {
            background-color: cornflowerblue;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(5) {
            background-color: lawngreen;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(6) {
            background-color: lawngreen;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(7) {
            background-color: lawngreen;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(8) {
            background-color: lightpink;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(9) {
            background-color: lightpink;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(10) {
            background-color: lightpink;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(11) {
            background-color: orange;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(12) {
            background-color: orange;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(13) {
            background-color: orange;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(14) {
            background-color: gold;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(15) {
            background-color: gold;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(16) {
            background-color: gold;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(17) {
            background-color: aquamarine;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(18) {
            background-color: aquamarine;
            color: black; /* Màu nền bạn muốn đặt */
        }

        tr td:nth-child(19) {
            background-color: aquamarine;
            color: black; /* Màu nền bạn muốn đặt */
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/js/bootstrap-select.min.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>

    <script type="text/javascript" src="Scripts/table2excel.js"></script>


    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>Báo Cáo Bán Hàng TDV </title>
    <meta content="" name="description">
    <meta content="Author" name="MJ Maraz">
    <link href="~/assets/images/favicon.png" rel="icon">
    <link href="~/assets/images/favicon.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <!-- ========================================================= -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>

    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/css/datatables.min.css">
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/Styles/loader.css">





</head>
<!-- =============== Design & Develop By = MJ MARAZ   ====================== -->

<body style="background-color: #e0e8ee ">
    @*<div class="tab-control" style="position:fixed;bottom:50px">
            <ul class="tabs" style="background-color: #1d1b31">
                <li class="tab selected"><a href="/Home/About" style="padding-right:5px">Home</a></li>

            </ul>
        </div>*@
    <div class="loader" style="z-index:1"></div>
    <div class="sidebar">
        <div class="logo-details">

        </div>
        <ul class="nav-links" style="display: flex; justify-content: center;">
            <li>
                <form id="dateForm" action="BaoCaoBanHangTDV_DB" method="post" onsubmit="handleFormSubmit(event)">
                    <div id="locBC">
                        <span id="spanText" class="text-loading">[usp_BaoCaoBanHangTDV_SAP]</span>
                        <a>Từ Ngày</a><br /><br />
                        <input class="tu_ngay" placeholder="Từ Ngày" id="tu_ngay" name="From_date" type="date" format="YYYY-MM-DD" value="@Request.QueryString["From_date"]" />
                        <script>$("#tu_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script><br /><br />
                        <a>Đến Ngày</a><br /><br />
                        <input class="den_ngay" id="den_ngay" placeholder=" Đến Ngày" name="To_date" type="DATE" format="YYYY-MM-DD" value="@Request.QueryString["To_date"]" /><br /><br />
                        <script>$("#den_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script>
                    </div>

                    <div>
                        <button class="submit" type="submit" onclick="runReport()"> Chạy Báo Cáo </button>
                    </div>
                </form>
                <button  style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px; margin-top: 10px; background-color: #aec9e0; color: #3483bd"onclick="exportToExcel()">Xuất Excel</button>


            </li>
        </ul>
    </div>

    <header class="header_part" style="background-color: #aec9e0; color: #3483bd ">
        @if (Request.Cookies["UserName"].Value == "Admin-cnct" || Request.Cookies["UserName"].Value == "Admin-cntg" || Request.Cookies["UserName"].Value == "Admin-cnmd" || Request.Cookies["UserName"].Value == "Admin-cnhcm" || Request.Cookies["UserName"].Value == "Admin-cnvt"
                      || Request.Cookies["UserName"].Value == "Admin-cnnt" || Request.Cookies["UserName"].Value == "Admin-cndn" || Request.Cookies["UserName"].Value == "Admin-cnna" || Request.Cookies["UserName"].Value == "Admin-cnhn" && Request.Cookies["UserName"].Value == "admin-cnct" || Request.Cookies["UserName"].Value == "admin-cntg" || Request.Cookies["UserName"].Value == "admin-cnmd" || Request.Cookies["UserName"].Value == "admin-cnhcm" || Request.Cookies["UserName"].Value == "admin-cnvt"
                      || Request.Cookies["UserName"].Value == "admin-cnnt" || Request.Cookies["UserName"].Value == "admin-cndn" || Request.Cookies["UserName"].Value == "admin-cnna" || Request.Cookies["UserName"].Value == "admin-cnhn")
        {
            <a href="/Home/About1" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        else
        {
            <a href="/Home/About" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        <h4 style="color:#3483bd">Báo Cáo Bán Hàng TDV</h4>
        <h5 style="color:#3483bd">Từ @Request.QueryString["From_date"] đến @Request.QueryString["To_date"]</h5>
    </header>
    <!-- =======  Data-Table  = Start  ========================== -->
    <div class="container">

        <div class="row">
            <div class="col-12">
                <div class="data_table" style="max-height:800px">
                    <table id="example" class="table table-striped table-bordered" style="width:2300px;height:max-content">
                        <thead class="table-dark">
                            <!--<tr>
                                <th rowspan="1"></th>
                                <th rowspan="1"></th>
                                <th colspan="9">Thực Hiện OTC</th>
                                <th colspan="6">Thực Hiện ETC</th>
                                <th colspan="6">Khoán</th>-->
                            @*<th colspan="6">Khoán ETC</th>*@
                            <!--<th rowspan="1"></th>
                                <th rowspan="1"></th>
                            </tr>
                            <tr>
                                <!--OTC-->
                            <!--<th>Mã TDV</th>
                            <th>Tên Trình Dược</th>
                            <th>Sản Phẩm Chủ Lực OTC</th>
                            <th>Sản Phẩm Phát Triển OTC</th>
                            <th>OPC còn Lại</th>
                            <th>Cồn OTC</th>
                            <th>Sủi OTC</th>
                            <th>Tw25 OTC</th>
                            <th>Phiến OTC</th>
                            <th>Combo OTC</th>
                            <th>Tổng Thực Hiện</th>-->
                            <!--ETC-->
                            <!--<th>OPC còn Lại</th>
                            <th>Cồn ETC</th>
                            <th>Sủi ETC</th>
                            <th>Tw25 ETC</th>
                            <th>Phiến ETC</th>
                            <th>Tổng Thực Hiện</th>-->
                            <!--Khoán OTC-->
                            <!--<th>Khoán OPC</th>
                            <th>Khoán Sủi</th>
                            <th>Khoán Cồn</th>
                            <th>Khoán 25</th>
                            <th>Khoán Phiến</th>
                            <th>Tổng Khoán</th>-->
                            <!--khoán ETC-->
                            <!--@*<th>Khoán OPC</th>
                                    <th>Khoán Sủi</th>
                                    <th>Khoán Cồn</th>
                                    <th>Khoán 25</th>
                                    <th>Khoán Phiến</th>
                                    <th>Tổng Khoán</th>*@
                                <th>Doanh Thu Khác</th>
                                <th>Tổng Doanh Thu</th>
                            </tr>-->
                            <tr>
                                <th style="width:330px">Chi Nhánh</th>
                                <th style="background-color: cornflowerblue">OPC </th>
                                <th style="background-color: cornflowerblue">Khoán OPC</th>
                                <th style="background-color: cornflowerblue">Tỷ lệ OPC</th>
                                <th style="background-color: lawngreen">CỒN</th>
                                <th style="background-color:lawngreen">Khoán Cồn</th>
                                <th style="background-color: lawngreen">Tỷ lệ Cồn</th>
                                <th style="background-color: lightpink">SỦI</th>
                                <th style="background-color: lightpink">Khoán Sủi</th>
                                <th style="background-color:lightpink">Tỷ lệ Sủi</th>
                                <th style="background-color: orange">PHIẾN</th>
                                <th style="background-color: orange ">Khoán Phiến</th>
                                <th style="background-color: orange ">Tỷ lệ Phiến</th>
                                <th style="background-color: gold">TW25</th>
                                <th style="background-color: gold ">Khoán TW25</th>
                                <th style="background-color: gold">Tỷ lệ 25</th>
                                <th style="background-color:aquamarine">TỔNG KHOÁN</th>
                                <th style="background-color: aquamarine">TỔNG THỰC HIỆN</th>
                                <th style="background-color: aquamarine">Tỷ lệ TH</th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (DataRow row2 in Model.Tables[1].Rows)
                            {

                                decimal tylePhien = 0;
                                decimal tyleOPC = 0;
                                object sumKhoan_OPCObj = row2["Sum_Khoan_OPC"];
                                decimal sumKhoan_OPC = sumKhoan_OPCObj != DBNull.Value ? Convert.ToDecimal(sumKhoan_OPCObj) : 0;

                                if (sumKhoan_OPC != 0)
                                {
                                    tyleOPC = Math.Round(Convert.ToDecimal(row2["Sum_OPC"]) / sumKhoan_OPC * 100, 2);
                                }
                                else
                                {
                                    tyleOPC = 0;
                                }

                                object sumConObj = row2["Sum_Con"];
                                object sumKhoanConObj = row2["Sum_Khoan_CON"];

                                decimal sumCon = sumConObj != DBNull.Value ? Convert.ToDecimal(sumConObj) : 0;
                                decimal sumKhoanCon = sumKhoanConObj != DBNull.Value ? Convert.ToDecimal(sumKhoanConObj) : 1;  // Tránh chia cho 0

                                decimal tyleCon = Math.Round((sumCon / sumKhoanCon) * 100, 2);

                                object sumSuiObj = row2["Sum_Sui"];
                                object sumKhoanSuiObj = row2["Sum_Khoan_SUI"];

                                decimal sumSui = sumSuiObj != DBNull.Value ? Convert.ToDecimal(sumSuiObj) : 0;
                                decimal sumKhoanSui = sumKhoanSuiObj != DBNull.Value ? Convert.ToDecimal(sumKhoanSuiObj) : 1;  // Tránh chia cho 0

                                decimal tyleSui = Math.Round((sumSui / sumKhoanSui) * 100, 2);

                                object sum25Obj = row2["Sum_25"];
                                object sumKhoanTW25Obj = row2["Sum_Khoan_TW25"];

                                decimal sum25 = sum25Obj != DBNull.Value ? Convert.ToDecimal(sum25Obj) : 0;
                                decimal sumKhoanTW25 = sumKhoanTW25Obj != DBNull.Value ? Convert.ToDecimal(sumKhoanTW25Obj) : 1;  // Tránh chia cho 0

                                decimal tyle25;

                                if (sumKhoanTW25 != 0)
                                {
                                    tyle25 = Math.Round((sum25 / sumKhoanTW25) * 100, 2);
                                }
                                else
                                {
                                    // Xử lý trường hợp khi mẫu số bằng 0, có thể gán giá trị mặc định hoặc thực hiện hành động khác.
                                    tyle25 = 0;
                                }


                                object totalDoanhThuObj = row2["Total_DoanhThu"];
                                object sumKhoanObj = row2["Sum_Khoan"];

                                decimal totalDoanhThu = totalDoanhThuObj != DBNull.Value ? Convert.ToDecimal(totalDoanhThuObj) : 0;
                                decimal sumKhoan = sumKhoanObj != DBNull.Value ? Convert.ToDecimal(sumKhoanObj) : 1;  // Tránh chia cho 0

                                decimal tyleTH = Math.Round((totalDoanhThu / sumKhoan) * 100, 2);

                                object sumKhoanPhienObj = row2["Sum_Khoan_PHIEN"];

                                decimal sumKhoanPhien = sumKhoanPhienObj != DBNull.Value ? Convert.ToDecimal(sumKhoanPhienObj) : 0;  // Tránh chia cho 0
                                decimal Phien = row2["Sum_Phien"] != DBNull.Value ? Convert.ToDecimal(row2["Sum_Phien"]) : 0;

                                if (Phien != 0 && sumKhoanPhien != 0)
                                {
                                    tylePhien = Math.Round(Phien / sumKhoanPhien * 100, 2);
                                }
                                else
                                {
                                    tylePhien = 0;
                                }


                                <tr>
                                    <th style="text-align:left">@ten <i class="fa-solid fa-caret-down" onclick="toggleRows(this)"style="cursor:pointer"></i></th>
                                    <td class="num" style="text-align:right;font-weight:lighter">@String.Format("{0:n0}", row2["Sum_OPC"])</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Khoan_OPC"])</td>
                                    <td style="text-align: right; font-weight: lighter">@tyleOPC%</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Con"])</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Khoan_CON"])</td>
                                    <td style="text-align: right; font-weight: lighter">@tyleCon%</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Sui"])</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Khoan_SUI"])</td>
                                    <td style="text-align: right; font-weight: lighter">@tyleSui%</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Phien"])</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Khoan_PHIEN"])</td>
                                    <td style="text-align: right; font-weight: lighter">@tylePhien%</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_25"])</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Khoan_TW25"])</td>

                                    <td style="text-align: right; font-weight: lighter">@tyle25%</td>
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Sum_Khoan"])</td>
                                    @*<td class="num" style="text-align:right">@String.Format("{0:n0}", row2["Sum_SPCL_OPC"]) - @String.Format("{0:n0}", row2["Sum_SPPT_OPC"])</td>*@
                                    <td class="num" style="text-align: right; font-weight: lighter">@String.Format("{0:n0}", row2["Total_DoanhThu"])</td>
                                    <td style="text-align: right; font-weight: lighter">@tyleTH%</td>
                                </tr>
                                <tr style="background-color:blanchedalmond" class="expandable-content">
                                    <th>Mã TDV - Tên TDV</th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                    <th></th>
                                </tr>
                                foreach (DataRow row in Model.Tables[0].Rows)
                                {
                                    decimal sumOPC_KH = 0;
                                    decimal sumcon_KH = 0;
                                    decimal sumsui_KH = 0;
                                    decimal sumphien_KH = 0;
                                    decimal sum25_KH = 0;
                                    decimal sumspcl = 0;
                                    decimal sumsppt = 0;
                                    decimal sumcombo = 0;
                                    decimal total = 0;
                                    decimal khoanOPC = 0;
                                    decimal khoanCon = 0;
                                    decimal khoanSui = 0;
                                    decimal khoanPhien = 0;
                                    decimal khoanTW25 = 0;
                                    decimal spcl = 0;
                                    decimal sppt = 0;
                                    decimal sum3gam = 0;
                                    decimal sumKhoan1 = 0;
                                    decimal TyLe_TH_TDV = 0;
                                    decimal TyLe_OPC = 0;
                                    decimal TyLe_Sui = 0;
                                    decimal TyLe_Con = 0;
                                    decimal TyLe_Phien = 0;
                                    decimal TyLe_TW25 = 0;
                                    {
                                        if (row["ma_TDV"].ToString() == row["ma_TDV"].ToString())
                                        {
                                            spcl = Convert.ToDecimal(row["Doanh_Thu_SPCL_OPC_OTC"]);
                                            sppt = Convert.ToDecimal(row["Doanh_Thu_SPPT_OPC_OTC"]);
                                        }
                                        decimal doanhThuOTC = Convert.ToDecimal(row["Doanh_Thu_OPC_OTC"]);
                                        decimal doanhThuETC = Convert.ToDecimal(row["Doanh_Thu_OPC_ETC"]);
                                        decimal con_OTC = Convert.ToDecimal(row["Doanh_Thu_Con_OTC"]);
                                        decimal con_ETC = Convert.ToDecimal(row["Doanh_Thu_Con_ETC"]);
                                        decimal sui_ETC = Convert.ToDecimal(row["Doanh_Thu_Sui_ETC"]);
                                        decimal sui_OTC = Convert.ToDecimal(row["Doanh_Thu_Sui_OTC"]);
                                        decimal phien_OTC = Convert.ToDecimal(row["Doanh_Thu_Phien_OTC"]);
                                        decimal phien_ETC = Convert.ToDecimal(row["Doanh_Thu_Phien_ETC"]);
                                        decimal tw25_ETC = Convert.ToDecimal(row["Doanh_Thu_TW25_ETC"]);
                                        decimal tw25_OTC = Convert.ToDecimal(row["Doanh_Thu_TW25_OTC"]);

                                        decimal combo = Convert.ToDecimal(row["Doanh_Thu_ComBo_OTC"]);
                                        decimal totalOTC = Convert.ToDecimal(row["Tong_Thuc_Hien_OTC"]);
                                        decimal totalETC = Convert.ToDecimal(row["Tong_Thuc_Hien_ETC"]);
                                        sumOPC_KH += doanhThuOTC + doanhThuETC + spcl + sppt;

                                        sumcon_KH += con_OTC + con_ETC;
                                        sumsui_KH += sui_OTC + sui_ETC;
                                        sumphien_KH += phien_OTC + phien_ETC;
                                        sum25_KH += tw25_OTC + tw25_ETC;
                                        sumspcl += spcl;
                                        sumsppt += sppt;
                                        sumcombo += combo;
                                        total += totalOTC + totalETC;
                                        khoanOPC = Convert.ToDecimal(row["Khoan_OPC_OTC"]);
                                        khoanCon = Convert.ToDecimal(row["Khoan_Con_OTC"]);
                                        khoanSui = Convert.ToDecimal(row["Khoan_Sui_OTC"]);
                                        khoanPhien = Convert.ToDecimal(row["Khoan_Phien_OTC"]);
                                        khoanTW25 = Convert.ToDecimal(row["Khoan_25_OTC"]);
                                        sum3gam = doanhThuOTC + spcl + sppt;
                                        sumKhoan1 = khoanOPC + khoanCon + khoanSui + khoanPhien + khoanTW25;
                                        // Check if the denominator (sumKhoan) is not zero before performing the division
                                        if (sumKhoan1 != 0)
                                        {
                                            TyLe_TH_TDV = Math.Round(total / sumKhoan1 * 100, 2);
                                        }
                                        else
                                        {
                                            // Handle the case when sumKhoan is zero, for example, set TyLe_TH_TDV to a default value.
                                            TyLe_TH_TDV = 0; // or any other appropriate value
                                        }


                                        // Check if the denominator (khoanCon) is not zero before performing the division
                                        if (khoanOPC != 0)
                                        {
                                            TyLe_OPC = Math.Round(sumOPC_KH / khoanOPC * 100, 2);
                                        }
                                        else
                                        {
                                            TyLe_OPC = 0;
                                        }
                                        if (khoanCon != 0)
                                        {
                                            TyLe_Con = Math.Round(sumcon_KH / khoanCon * 100, 2);
                                        }
                                        else
                                        {
                                            // Handle the case when khoanCon is zero, for example, set TyLe_Con to a default value.
                                            TyLe_Con = 0; // or any other appropriate value
                                        }

                                        if (sumphien_KH != 0)
                                        {
                                            TyLe_Phien = Math.Round(sumphien_KH / sumphien_KH * 100, 2);
                                        }
                                        else
                                        {
                                            // Handle the case when sumphien_KH is zero, for example, set TyLe_Phien to a default value.
                                            TyLe_Phien = 0; // or any other appropriate value
                                        }
                                        if (khoanSui != 0)
                                        {
                                            TyLe_Sui = Math.Round(sumsui_KH / khoanSui * 100, 2);
                                        }
                                        else
                                        {
                                            // Handle the case when khoanSui is zero, for example, set TyLe_Sui to a default value.
                                            TyLe_Sui = 0; // or any other appropriate value
                                        }


                                        if (khoanTW25 != 0)
                                        {
                                            TyLe_TW25 = Math.Round(sum25_KH / khoanTW25 * 100, 2);
                                        }
                                        else
                                        {
                                            // Handle the case when khoanTW25 is zero, for example, set TyLe_TW25 to a default value.
                                            TyLe_TW25 = 0; // or any other appropriate value
                                        }

                                    }

                                    <tr class="expandable-content" style="color: black; font-weight: lighter">
                                        <td style="text-align:left">@row["ma_TDV"] - @row["Ten_TDV"] <i class="fa-solid fa-caret-down"onclick="toggleRowsOPC(this)"style="cursor:pointer"></i></td>
                                        <td style="text-align: right; color: black" class="sum-opc-kh">@sumOPC_KH.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@khoanOPC.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@TyLe_OPC%</td>
                                        <td class="num" style="text-align: right; color: black">@sumcon_KH.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@khoanCon.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@TyLe_Con%</td>
                                        <td class="num" style="text-align: right; color: black">@sumsui_KH.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@khoanSui.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@TyLe_Sui%</td>
                                        <td class="num" style="text-align: right; color: black">@sumphien_KH.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@khoanPhien.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@TyLe_Phien%</td>
                                        <td class="num" style="text-align: right; color: black">@sum25_KH.ToString("N0")</td>
                                        <td style="text-align: right; color: black">@khoanTW25.ToString("N0")</td>
                                        <td style="text-align: right; color: black ">@TyLe_TW25%</td>
                                        <td style="text-align: right; color: black">@sumKhoan1.ToString("N0")</td>
                                        <td class="num" style="text-align: right; color: black">@total.ToString("N0")</td>
                                        <td style="text-align: right; font-weight: lighter; color: black">@TyLe_TH_TDV%</td>
                                    </tr>
                                    if (row["ma_TDV"].ToString() == row["ma_TDV"].ToString())
                                    {
                                        <tr class="expandable-content_detail">
                                            <td style="text-align:left">OTC</td>

                                            <td style="text-align:right">@sum3gam.ToString("N0")</td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Khoan_OPC_OTC"]))</td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_Con_OTC"]))</td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Khoan_Con_OTC"]))</td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_Sui_OTC"]))</td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Khoan_Sui_OTC"]))</td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_Phien_OTC"]))</td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Khoan_Phien_OTC"]))</td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_TW25_OTC"]))</td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Khoan_25_OTC"]))</td>
                                            <td></td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Tong_Thuc_Hien_OTC"]))</td>
                                            <td></td>

                                        </tr>
                                        <tr class="expandable-content_detail">
                                            <td style="text-align:left">ETC</td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_OPC_ETC"]))</td>
                                            <td></td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_CON_ETC"]))</td>
                                            <td></td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_SUI_ETC"]))</td>
                                            <td></td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_TW25_ETC"]))</td>
                                            <td></td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Doanh_Thu_Phien_ETC"]))</td>
                                            <td></td>
                                            <td></td>
                                            <td></td>
                                            <td style="text-align:right">@String.Format("{0:n0}", Convert.ToDecimal(row["Tong_Thuc_Hien_ETC"]))</td>
                                            <td></td>
                                        </tr>

                                    }

                                }
                            }


                        </tbody>

                    </table>
                </div>
            </div>
        </div>
    </div>
    <!-- =======  Data-Table  = End  ===================== -->
    <!-- ============ Java Script Files  ================== -->


    <script src="~/assets/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/jquery-3.6.0.min.js"></script>
    @*<script src="~/assets/js/datatables.min.js"></script>*@
    @*<script src="~/assets/js/pdfmake.min.js"></script>*@
    <script src="~/assets/js/vfs_fonts.js"></script>
    <script src="~/assets/js/custom.js"></script>
    <script src="~/Scripts/excellentexport.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="//cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>
    @*<script>
            function exportToExcel() {
                return ExcellentExport.convert({
                    anchor: this,
                    filename: 'BaoCaoKetQuaKinhDoanh',
                    format: 'xls',
                    beforeSave: function (excelData, createSheetFunc) {
                        // Modify the content before saving
                        excelData[0].content.forEach(function (row) {
                            row.forEach(function (cell) {
                                // Check if the cell contains an element with the specified class and remove it
                                if (cell.html.indexOf('material-symbols-outlined') !== -1) {
                                    cell.html = cell.html.replace(/<span class="material-symbols-outlined[^>]*>.*?<\/span>/g, '');
                                }
                            });
                        });
                    }
                }, [
                    { name: 'Sheet Name Here 1', from: { table: 'example1' } },
                    { name: 'Sheet Name Here 2', from: { table: 'example2' } }
                ]);
            }
        </script>*@
    <script>
        function exportToExcel() {
            // Lấy danh sách cột cần xuất từ bảng gốc
            var columnsToExport = ['Tên', 'Số điện thoại'];

            // Tạo bảng tạm thời chỉ chứa cột Tên và Số điện thoại
            var temporaryTable = $('#example').clone();

            // Lặp qua các cột không nằm trong danh sách cần xuất và ẩn chúng
            temporaryTable.find('thead th, tbody td').each(function () {
                var columnHeader = $(this).text();
                if (!columnsToExport.includes(columnHeader)) {
                    $(this).hide();
                }
            });

            // Xuất Excel từ bảng tạm thời
            temporaryTable.table2excel({
                exclude: ".hidden",
                name: "Sheet 1",
                filename: "BaoCaoBanHangTDV"
            });
        }
    </script>

    <script>
        function toggleRows(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark')) {
                    break;
                }
            }
        }

        function toggleRowsOPC(cell) {
            var rowIndex = cell.parentElement.parentElement.rowIndex;
            var table = document.getElementById('example');
            var rows = table.rows;

            for (var i = rowIndex + 1; i < rows.length; i++) {
                var row = rows[i];
                if (row.classList.contains('expandable-content_detail')) {
                    row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
                } else if (row.classList.contains('table-dark') || row.classList.contains('expandable-content')) {
                    break;
                }
            }
        }

        //function toggleRowsCON(cell) {
        //    var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
        //    var table = document.getElementById('example');
        //    var rows = table.rows;

        //    for (var i = rowIndex + 1; i < rows.length; i++) {
        //        var row = rows[i];
        //        if (row.classList.contains('expandable-content_detailCON')) {
        //            row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
        //        } else if (row.classList.contains('table-dark')) {
        //            break;
        //        }
        //    }
        //}
        //function toggleRowsSUI(cell) {
        //    var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
        //    var table = document.getElementById('example');
        //    var rows = table.rows;

        //    for (var i = rowIndex + 1; i < rows.length; i++) {
        //        var row = rows[i];
        //        if (row.classList.contains('expandable-content_detailSUI')) {
        //            row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
        //        } else if (row.classList.contains('table-dark')) {
        //            break;
        //        }
        //    }
        //}
        //function toggleRowsPHIEN(cell) {
        //    var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
        //    var table = document.getElementById('example');
        //    var rows = table.rows;

        //    for (var i = rowIndex + 1; i < rows.length; i++) {
        //        var row = rows[i];
        //        if (row.classList.contains('expandable-content_detailPHIEN')) {
        //            row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
        //        } else if (row.classList.contains('table-dark')) {
        //            break;
        //        }
        //    }
        //}
        //function toggleRows25(cell) {
        //    var rowIndex = cell.parentElement.parentElement.rowIndex; // Adjusted to get the index of the parent row
        //    var table = document.getElementById('example');
        //    var rows = table.rows;

        //    for (var i = rowIndex + 1; i < rows.length; i++) {
        //        var row = rows[i];
        //        if (row.classList.contains('expandable-content_detail25')) {
        //            row.style.display = (row.style.display === 'none' || row.style.display === '') ? 'table-row' : 'none';
        //        } else if (row.classList.contains('table-dark')) {
        //            break;
        //        }
        //    }
        //}
        //window.onload = function () {
        //    // Ẩn các dòng con có class "expandable-contentOTC"
        //    var table2 = document.getElementById('example');
        //    var rows2 = table2.getElementsByClassName('expandable-content_detail');

        //    for (var j = 0; j < rows2.length; j++) {
        //        rows2[j].style.display = 'none';
        //    }

        //    // Ẩn các dòng con có class "expandable-contentETC"
        //    //var rows3 = table2.getElementsByClassName('expandable-contentETC');

        //    //for (var k = 0; k < rows3.length; k++) {
        //    //    rows3[k].style.display = 'none';
        //    //}
        //};
    </script>
    <script>
        function runReport() {
            // Hiển thị thẻ span có id là "spanText"
            const spanElement = document.getElementById("spanText");
            spanElement.style.display = "block";
        }
    </script>
    <script>
        function handleFormSubmit(event) {
            event.preventDefault();

            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Tạo URL mới với các tham số truy vấn
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

            // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
            window.location.href = actionUrl;
        }
        function showLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.remove("loader-hidden");
        }

        // Function to hide the loader
        function hideLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.add("loader-hidden");
        }

        // Add an event listener to the form submission
        document.getElementById("dateForm").addEventListener("submit", (event) => {
            event.preventDefault();

            // Show the loader when the form is submitted
            showLoader();

            // Lấy các giá trị ngày đã chọn từ trường nhập liệu
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;

            // Tạo URL mới với các tham số truy vấn
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

            // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
            window.location.href = actionUrl;
        });

        // Add event listener for window load event
        window.addEventListener("load", () => {
            // Hide the loader after the page is loaded
            hideLoader();
        });
    </script>
    <script>
        $(document).ready(function () {
            $("thead tr").sortable({
                axis: "x",
                containment: "parent",
                tolerance: "pointer",
                cursor: "move"
            }).disableSelection();
        });
    </script>
    <script>
        $(document).ready(function () {
            var dataTable = $('#example').DataTable();

            function calculateTotal() {
                var totalColumns = new Array(25).fill(0);

                dataTable.rows({ search: 'applied' }).every(function () {
                    var rowData = this.data();
                    rowData.forEach(function (cellValue, columnIndex) {
                        var columnValue = parseFloat(cellValue.toString().replace(/,/g, ''));
                        if (!isNaN(columnValue)) {
                            totalColumns[columnIndex] += columnValue;
                        }
                    });
                });

                updateTotalValues(totalColumns);
            }
            function updateTotalValues(totalColumns) {
                // Gán giá trị tổng từng cột vào các biến riêng
                var spclOtcOtcTotal = totalColumns[2];
                var spptOtcOtcTotal = totalColumns[3];
                var opcConLaiOtcTotal = totalColumns[4];
                var conOtcOtcTotal = totalColumns[5];
                var suiOtcTotal = totalColumns[6];
                var tw25OtcOtcTotal = totalColumns[7];
                var phienOtcOtcTotal = totalColumns[8];
                var comboOtcOtcTotal = totalColumns[9];
                var tongThucHienOtcTotal = totalColumns[10];
                var opcConLaiEtcTotal = totalColumns[11];
                var conEtcEtcTotal = totalColumns[12];
                var suiEtcTotal = totalColumns[13];
                var tw25EtcTotal = totalColumns[14];
                var phienEtcEtcTotal = totalColumns[15];
                var tongThucHienEtcTotal = totalColumns[16];
                var khoanOpcOtcTotal = totalColumns[17];
                var khoanSuiOtcTotal = totalColumns[18];
                var khoanConOtcTotal = totalColumns[19];
                var khoan25OtcTotal = totalColumns[20];
                var khoanPhienOtcTotal = totalColumns[21];
                var tongKhoanOtcTotal = totalColumns[22];
                var doanhThuKhacTotal = totalColumns[23];
                var tongDoanhThuTotal = totalColumns[24];

                // Hiển thị giá trị tổng từng cột lên view
                $('#spcl-otc-otc').text(formatNumber(spclOtcOtcTotal));
                $('#sppt-otc-otc').text(formatNumber(spptOtcOtcTotal));
                $('#opc-conlai-otc').text(formatNumber(opcConLaiOtcTotal));
                $('#con-otc-otc').text(formatNumber(conOtcOtcTotal));
                $('#sui-otc').text(formatNumber(suiOtcTotal));
                $('#tw25-otc-otc').text(formatNumber(tw25OtcOtcTotal));
                $('#phien-otc-otc').text(formatNumber(phienOtcOtcTotal));
                $('#combo-otc-otc').text(formatNumber(comboOtcOtcTotal));
                $('#tongthuchien-otc').text(formatNumber(tongThucHienOtcTotal));
                $('#opc-conlai-etc').text(formatNumber(opcConLaiEtcTotal));
                $('#con-etc-etc').text(formatNumber(conEtcEtcTotal));
                $('#sui-etc').text(formatNumber(suiEtcTotal));
                $('#tw25-etc').text(formatNumber(tw25EtcTotal));
                $('#phien-etc-etc').text(formatNumber(phienEtcEtcTotal));
                $('#tongthuchien-etc').text(formatNumber(tongThucHienEtcTotal));
                $('#khoan-opc-otc').text(formatNumber(khoanOpcOtcTotal));
                $('#khoan-sui-otc').text(formatNumber(khoanSuiOtcTotal));
                $('#khoan-con-otc').text(formatNumber(khoanConOtcTotal));
                $('#khoan-25-otc').text(formatNumber(khoan25OtcTotal));
                $('#khoan-phien-otc').text(formatNumber(khoanPhienOtcTotal));
                $('#tongkhoan-otc').text(formatNumber(tongKhoanOtcTotal));
                $('#doanhthukhac').text(formatNumber(doanhThuKhacTotal));
                $('#tongdoanhthu').text(formatNumber(tongDoanhThuTotal));
                var grandTotal = totalColumns.reduce(function (total, value) {
                    return total + value;
                }, 0);

                $('#grand-total').text(formatNumber(grandTotal));
            }

            calculateTotal();

            $('input').on('input', function () {
                calculateTotal();
            });

            // Sự kiện lắng nghe khi giá trị ô input trong bảng thay đổi
            $('#example tbody').on('input', 'input', function () {
                calculateTotal();
            });

            function formatNumber(number) {
                return number.toLocaleString('en-US');
            }
        });
    </script>

</body>

</html>

