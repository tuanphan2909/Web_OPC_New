
@{ ViewBag.Title = "PHÂN TÍCH BÁN HÀNG";
    Layout = null;
    decimal tongTien = 0; }
@using System.Data;


<!DOCTYPE html>
<html lang="en">

<head>

    <style>
        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            width: 100%;
            height: 100%;
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            color: blue;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            /* justify-content:;*/
            width: 50%;
            height: 300px;
        }

        .submit {
            /*height: 50px;
        width: 100px;*/
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: relative;
            top: 0;
            left: 0;
            height: 50px;
            width: 200px;
            transition: all 0.5s ease;
        }

        h5 {
            text-align: center;
            font-size: 15px;
            color: aliceblue;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        .data_table {
            width: max-content;
        }

        .bieu_do {
            padding: 10px;
            /*    margin: 10%;*/
            text-align: center;
            width: 200px;
            font-size: 16px;
            font-weight: 600;
            color: #fff;
            cursor: pointer;
            /*      margin: 20px;*/
            height: 55px;
            text-align: center;
            border: none;
            background-size: 300% 100%;
            border-radius: 10px;
            moz-transition: all .4s ease-in-out;
            -o-transition: all .4s ease-in-out;
            -webkit-transition: all .4s ease-in-out;
            transition: all .4s ease-in-out;
        }

            .bieu_do:hover {
                background-position: 100% 0;
                moz-transition: all .4s ease-in-out;
                -o-transition: all .4s ease-in-out;
                -webkit-transition: all .4s ease-in-out;
                transition: all .4s ease-in-out;
            }

            .bieu_do:focus {
                outline: none;
            }

        .bieu_do {
            background-image: linear-gradient(to right, #f5ce62, #e43603, #fa7199, #e85a19);
            box-shadow: 0 4px 15px 0 rgba(229, 66, 10, 0.75);
        }

        .chart {
            margin: 40px 0px 0px 0px;
        }

        .box-chart {
            margin-left: 500px;
            width: 100px;
            height: 25vh;
        }

        .text-loading {
            position: fixed;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 13px;
            color: black;
            z-index: 2;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 5px 10px;
            display: none;
        }

        .custom-checkbox {
            margin-top: 10px;
            display: inline-block;
            position: relative;
            padding-left: 30px;
            margin-right: 15px;
            cursor: pointer;
        }

            .custom-checkbox input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
            }

        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            border: 2px solid black;
            background-color: #ffffff;
        }

        .custom-checkbox:hover input ~ .checkmark {
            background-color: #ccc;
        }

        .custom-checkbox input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        .custom-checkbox .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        .checkContainer {
            height: 300px;
            overflow: auto;
        }

            .checkContainer::-webkit-scrollbar {
                width: 0.2em;
                background-color: transparent;
            }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        .tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7;
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important; /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
                }

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 1;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                bottom: 0px;
                /* left:300px;*/
            }

                .tab-control ul li {
                    text-align: center;
                }

        .closeTab {
            position: relative;
            display: inline-block;
            vertical-align: middle;
            margin-left: 10px; /* Điều chỉnh khoảng cách với h4 */
        }

        .closeIcon {
            display: inline-block;
            width: 30px;
            height: 25px;
            border-radius: 50%;
            background-color: white;
            color: black; /* Màu chữ x */
            text-align: center;
            line-height: 25px;
        }

        .tab.active {
            background-color: cornflowerblue; /* Màu nền tab khi active */
            color: #fff; /* Màu chữ khi active */
        }

        .tab.selected-tab {
            pointer-events: none;
            background-color: #3763a3; /* Màu nền của tab */
        }

            .tab.selected-tab a {
                color: white /* Màu nền của tab */
            }

            .tab.selected-tab .closeTab {
                pointer-events: auto;
            }

        .favicon {
            width: 100px; /* Kích thước mong muốn */
            height: 100px; /* Kích thước mong muốn */
        }

        .expandable-icon {
            cursor: pointer;
        }

        .expanded::before {
            content: 'arrow_drop_down'; /* Unicode ký tự cho biểu tượng mở rộ */
        }

        .data_table {
            max-height: 100%; /* Đặt chiều cao tối đa của container để có thanh cuộn */
            overflow: auto;
        }

            .data_table thead th {
                position: sticky;
                top: 0;
                z-index: 100;
            }

        .search-container {
            display: flex;
            margin-left: 300px;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/js/bootstrap-select.min.js"></script>
    @*<script type="text/javascript" src="Scripts/table2excel.js"></script>*@


    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>PHÂN TÍCH BÁN HÀNG</title>
    <meta content="" name="description">
    <meta content="Author" name="MJ Maraz">
    <link href="~/assets/images/Logo.png" rel="icon">
    <link href="~/assets/images/Logo.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link href="https://cdn.datatables.net/1.13.6/css/jquery.dataTables.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Outlined:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200" />
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <!-- ========================================================= -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.1/css/all.min.css" />
    <link href='https://unpkg.com/boxicons@2.0.7/css/boxicons.min.css' rel='stylesheet'>


    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/css/datatables.min.css">
    <link rel="stylesheet" href="~/assets/css/style.css" class="favicon">
    <link rel="stylesheet" href="~/Styles/loader.css" class="favicon">





</head>
<!-- =============== Design & Develop By = MJ MARAZ   ====================== -->

<body style="background-color: #e0e8ee">

    <div class="loader" style="z-index:1"></div>

    <div class="sidebar">
        <div class="logo-details">

        </div>
        <ul class="nav-links" style="justify-content: center; display: flex; margin-left: 10px">
            <li>
                <form id="dateForm" action="PhanTichBanHang" method="post" onsubmit="handleFormSubmit(event)">
                    <div id="locBC">
                        <span id="spanText" class="text-loading">[usp_PhanTichBanHang_SAP]</span>
                        <a>Từ Ngày</a><br /><br />
                        <input class="tu_ngay" placeholder="Từ Ngày" id="tu_ngay" name="From_date" type="date" format="YYYY-MM-DD" value="@Request.QueryString["From_date"]" />
                        <script>$("#tu_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script><br /><br />
                        <a>Đến Ngày</a><br /><br />
                        <input class="den_ngay" id="den_ngay" placeholder=" Đến Ngày" name="To_date" type="DATE" format="YYYY-MM-DD" value="@Request.QueryString["To_date"]" /><br /><br />
                        <script>$("#den_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script>
                    </div>
                    <h6>Chọn Đối Tượng</h6>

                    <input type="text" id="dropdownInput" list="dropdownList" placeholder="Tìm kiếm đối tượng">
                    <datalist id="dropdownList">
                        @foreach (var item in ViewBag.DataItems)
                        {
                            <option value="@item.Ma_Dt" data-ten="@item.Ten_Dt" data-maDt="@item.Ma_Dt" data-dvcs="@item.Dvcs" data-dvcs1="@item.Dvcs1">@item.Ten_Dt</option>
                        }
                    </datalist>
                    <input type="hidden" name="Ma_Dt" id="selectedOption">
                    <a>Tìm TDV</a>



                    <input type="text" id="dropdownInputTDV" list="dropdownListTDV" placeholder="Tìm kiếm TDV">
                    <datalist id="dropdownListTDV">
                        @foreach (var item in ViewBag.DataTDV)
                        {
                            <option value="@item.Ma_CbNv" data-Ma_CbNv="@item.Ma_CbNv">@*@item.Ma_CbNv*@ @item.hoten</option>
                        }
                    </datalist>
                    <input type="hidden" name="Ma_TDV" id="selectedOptionTDV">
                    <a>Tìm Vật Tư</a>
                    <input type="text" id="dropdownInputVT" list="dropdownListVT" placeholder="Tìm kiếm Vật Tư">
                    <datalist id="dropdownListVT">
                        @foreach (var item in ViewBag.DataVT)
                        {
                            <option value="@item.Ma_Vt" data-TenVt="@item.Ten_Vt" data-maVT="@item.Ma_Vt">@item.Ten_Vt</option>
                        }
                    </datalist>
                    <input type="hidden" name="Ma_Vt" id="selectedOptionVT"><hr />
                    <h6>Nhóm theo <span style="color:red;font-weight:bold">*</span></h6>
                    <div class="select-btn" style="width:100px;margin-top:10px">
                        <select name="Nhom" id="nhomtheoselect" onchange="saveSelectedValueToCookie()">
                            <option value="" style="background-color: #020024;color:white">Chọn giá trị</option>
                            <option value="ma_vt" data-nhom="1">Theo mặt hàng</option>
                            <option value="ma_dt" data-nhom="2">Theo đối tượng</option>
                            <option value="so_ct" data-nhom="3">Theo chứng từ</option>
                            <option value="Loai_Vt" data-nhom="4">Theo loại sản phẩm</option>
                            <option value="ma_tdv" data-nhom="5">Theo TDV</option>
                            <option value="So_Hop_Dong_Ex" data-nhom="6">Theo hợp đồng</option>
                            <option value="Ma_LKH" data-nhom="7">Theo Loại KH</option>
                        </select>
                    </div>

                    <h6>Chi tiết <span style="color: red; font-weight: bold">*</span></h6>
                    <div class="select-btn" style="width:100px;margin-top:10px">
                        <select name="Chitiet" id="chitietselect" onchange="saveSelectedValueToCookie2()">
                            <option value="" style="background-color: #020024;color:white">Chọn giá trị</option>
                            <option value="ma_vt" data-chitiet="1">Theo mặt hàng</option>
                            <option value="ma_dt" data-chitiet="2">Theo đối tượng</option>
                            <option value="so_ct" data-chitiet="3">Theo chứng từ</option>
                            <option value="Loai_Vt" data-chitiet="4">Theo loại sản phẩm</option>
                            <option value="ma_tdv" data-chitiet="5">Theo TDV</option>
                            <option value="So_Hop_Dong_Ex" data-chitiet="6">Theo hợp đồng</option>
                            <option value="Ma_LKH" data-chitiet="7">Theo Loại KH</option>
                        </select>
                    </div>
                    <div>
                        <button class="submit" type="submit" id="runReportButton" onclick="runReport()"> Chạy Báo Cáo </button>
                    </div>
                </form>
                <button style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px; margin-top: 10px; background-color: #aec9e0; color: #3483bd" onclick="exportToExcel()">Xuất Excel</button>

            </li>
        </ul>
    </div>

    <header class="header_part" style="background-color: #aec9e0; color: #3483bd ">
        @if (Request.Cookies["UserName"].Value == "Admin-cnct" || Request.Cookies["UserName"].Value == "Admin-cntg" || Request.Cookies["UserName"].Value == "Admin-cnmd" || Request.Cookies["UserName"].Value == "Admin-cnh1" || Request.Cookies["UserName"].Value == "Admin-cnvt"
                         || Request.Cookies["UserName"].Value == "Admin-cnnt" || Request.Cookies["UserName"].Value == "Admin - cndn" || Request.Cookies["UserName"].Value == "Admin - cnna" || Request.Cookies["UserName"].Value == "Admin - cnhn" && Request.Cookies["UserName"].Value == "admin-cnct" || Request.Cookies["UserName"].Value == "admin-cntg" || Request.Cookies["UserName"].Value == "admin-cnmd" || Request.Cookies["UserName"].Value == "admin-cnh1" || Request.Cookies["UserName"].Value == "admin-cnvt"
                         || Request.Cookies["UserName"].Value == "admin-cnnt" || Request.Cookies["UserName"].Value == "admin - cndn" || Request.Cookies["UserName"].Value == "admin - cnna" || Request.Cookies["UserName"].Value == "admin - cnhn")
        {



            <a href="/Home/About1" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        else
        {
            <a href="/Home/About" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        <h4 style="color: #3483bd">PHÂN TÍCH BÁN HÀNG</h4>
        <h5 style="color: #3483bd">Từ @Request.QueryString["From_date"] đến @Request.QueryString["To_date"]</h5>
    </header>
    <!-- =======  Data-Table  = Start  ========================== -->


    <div class="container">

        <div class="row">
            @*<div id="chartContainer" class="box-chart"></div>*@
            <div class="col-12">
                <div class="search-container">

                    <span>Search: <input type="Text" name="" id="myInput" placeholder="Tìm kiếm" onkeyup="searchFun()"></span>
                    <div class="search"></div>
                </div>
                <div class="data_table" style="width:1200px;max-height:800px">
                    @{
                        var rowsBySoCT = new Dictionary<object, List<DataRow>>();

                        foreach (DataRow row in Model.Tables[0].Rows)
                        {
                            var select = Request.Cookies["SelectedNhom"].Value;
                            var soCT = row[select];
                            if (!rowsBySoCT.ContainsKey(soCT))
                            {
                                rowsBySoCT[soCT] = new List<DataRow>();
                            }
                            rowsBySoCT[soCT].Add(row);
                        }
                    }

                    <table id="example" class="table table-striped table-bordered">
                        <thead class="table-dark" id="head">
                            <tr>
                                @if (Request.Cookies["SelectedChiTiet"].Value == "ma_dt")
                                {
                                    //8
                                    <th>Mã Đối Tượng</th>
                                    <th>Tên Đối Tượng</th>
                                    <th>Bill-To</th>
                                    <th>ĐVT</th>
                                    <th>Số Lượng</th>
                                    <th>Kênh BH</th>
                                    <th>Mã TDV</th>
                                    <th>Tên TDV</th>
                                    <th>Tổng tiền</th>
                                    @*<th>Giá</th>*@
                                    @*<th>Tiền TT</th>*@
                                }
                                else if (Request.Cookies["SelectedChiTiet"].Value == "ma_vt")
                                {

                                    <th>Mã Vật Tư</th>
                                    //8
                                    <th>Tên Vật Tư</th>

                                    <th>Bill-To</th>
                                    <th>ĐVT</th>
                                    <th>Số Lượng</th>
                                    <th>Kênh BH</th>
                                    <th>Mã TDV</th>
                                    <th>Tên TDV</th>
                                    <th>Tổng tiền</th>
                                    @*<th>Giá</th>*@
                                    @*<th>Tiền TT</th>*@
                                }
                                else if (Request.Cookies["SelectedChiTiet"].Value == "so_ct")
                                {

                                    <th>Ngày Chứng Từ</th>
                                    //8
                                    <th>Số Chứng Từ</th>
                                    <th>Bill-To</th>
                                    <th>ĐVT</th>
                                    <th>Số Lượng</th>
                                    <th>Kênh BH</th>
                                    <th>Mã TDV</th>
                                    <th>Tên TDV</th>
                                    <th>Tổng tiền</th>
                                    @*<th>Giá</th>*@
                                    @*<th>Tiền TT</th>*@
                                }
                                else if (Request.Cookies["SelectedChiTiet"].Value == "Loai_Vt")
                                {

                                    <th>Loại Vật Tư</th>
                                    //8
                                    <th>Mã VT - Tên VT</th>
                                    <th>Bill-To</th>
                                    <th>ĐVT</th>
                                    <th>Số Lượng</th>
                                    <th>Kênh BH</th>
                                    <th>Mã TDV</th>
                                    <th>Tên TDV</th>
                                    <th>Tổng tiền</th>
                                    @*<th>Giá</th>*@
                                    @*<th>Tiền TT</th>*@
                                }
                                else if (Request.Cookies["SelectedChiTiet"].Value == "ma_tdv")
                                {

                                    <th>Mã TDV</th>
                                    //8
                                    <th>Tên TDV</th>
                                    <th>Bill-To</th>
                                    <th>ĐVT</th>
                                    <th>Số Lượng</th>
                                    <th>Kênh BH</th>

                                    <th>Mã Đối Tượng</th>

                                    <th>Mã Vật Tư</th>
                                    <th>Tổng tiền</th>
                                    @*<th>Giá</th>*@
                                    @*<th>Tiền TT</th>*@
                                }
                                else if (Request.Cookies["SelectedChiTiet"].Value == "Ma_LKH")
                                {
                                    <th>Mã Loại KH</th>
                                    //8
                                    <th>Tên LKH</th>
                                    <th>Bill-To</th>
                                    <th>DVT</th>
                                    <th>Số lượng</th>
                                    <th>Kênh BH</th>
                                    <th>Mã TDV</th>
                                    <th>Tên TDV</th>
                                    <th>Tổng Tiền</th>
                                }

                            </tr>
                        </thead>
                        @*<tfoot>

                            </tfoot>*@
                    <tbody>
                        <tr style="background-color: burlywood">
                            <td colspan="8" style="font-weight:bold;color:black;">Tổng tất cả:</td>
                            @foreach (DataRow row3 in Model.Tables[1].Rows)
                            {
                                <td style='text-align:right;mso-number-format:" #,##0.00"'>@String.Format("{0:n0}", row3["Tong_Tien"]).Replace(",", ".")</td>
                            }

                        </tr>
                        @foreach (var entry in rowsBySoCT)
                        {
                            <tr class="title">
                                @if (Request.Cookies["SelectedNhom"].Value == "ma_vt")
                                {
                                    <td colspan="8" style='text-align:left;mso-number-format:" #,##0.00"'>

                                        <span class="material-symbols-outlined expandable-icon"><i class="fa-solid fa-caret-down"></i></span><strong>Mã Vật Tư: @entry.Key - </strong>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            if (row["ma_vt"] == entry.Key)
                                            {
                                                <strong>@row["ten_vt"]</strong>
                                                tongTien = 0;
                                                foreach (var row2 in entry.Value)
                                                {
                                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                                }
                                                break;
                                            }

                                        }
                                        @*<div style="text-align: right; color: #3483bd"> <strong> @String.Format("{0:n0}", tongTien).Replace(",",".")</strong></div>*@

                                    </td>
                                    <td style="text-align: right; color: #3483bd">@String.Format("{0:n0}", tongTien).Replace(",", ".")</td>

                                }
                                @if (Request.Cookies["SelectedNhom"].Value == "ma_dt")
                                {
                                    <td colspan="8" style='text-align:left;mso-number-format:" #,##0.00"'>

                                        <span class="material-symbols-outlined expandable-icon"><i class="fa-solid fa-caret-down"></i></span><strong>Mã Đối Tượng: @entry.Key - </strong>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            if (row["ma_dt"] == entry.Key)
                                            {
                                                <strong>@row["ten_dt"]</strong>
                                                tongTien = 0;
                                                foreach (var row2 in entry.Value)
                                                {
                                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                                }
                                                break;
                                            }
                                        }
                                        @*<div style="text-align: right; color: #3483bd"> <strong> @String.Format("{0:n0}", tongTien).Replace(",", ".")</strong></div>*@
                                    </td>
                                    <td style="text-align: right; color: #3483bd">@String.Format("{0:n0}", tongTien).Replace(",", ".")</td>
                                }
                                @if (Request.Cookies["SelectedNhom"].Value == "ma_tdv")
                                {
                                    <td colspan="8" style='text-align:left;mso-number-format:" #,##0.00"'>

                                        <span class="material-symbols-outlined expandable-icon"><i class="fa-solid fa-caret-down"></i></span><strong>Mã TDV: @entry.Key - </strong>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            if (row["Ma_TDV"] == entry.Key)
                                            {
                                                <strong>@row["Ten_TDV"]</strong>
                                                tongTien = 0;
                                                foreach (var row2 in entry.Value)
                                                {
                                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                                }
                                                break;
                                            }
                                        }
                                        @*<div style="text-align: right; color: #3483bd"> <strong> @String.Format("{0:n0}", tongTien).Replace(",", ".")</strong></div>*@
                                    </td>
                                    <td style="text-align: right; color: #3483bd">@String.Format("{0:n0}", tongTien).Replace(",", ".")</td>
                                }
                                @if (Request.Cookies["SelectedNhom"].Value == "Ma_LKH")
                                {
                                    <td colspan="8" style='text-align:left;mso-number-format:" #,##0.00"'>

                                        <span class="material-symbols-outlined expandable-icon"><i class="fa-solid fa-caret-down"></i></span><strong>Mã TDV: @entry.Key - </strong>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            if (row["Ma_LKH"] == entry.Key)
                                            {
                                                <strong>@row["Ten_LKH"]</strong>
                                                tongTien = 0;
                                                foreach (var row2 in entry.Value)
                                                {
                                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                                }
                                                break;
                                            }
                                        }
                                        @*<div style="text-align: right; color: #3483bd"> <strong> @String.Format("{0:n0}", tongTien).Replace(",", ".")</strong></div>*@
                                    </td>
                                    <td style="text-align: right; color: #3483bd">@String.Format("{0:n0}", tongTien).Replace(",", ".")</td>
                                }
                                @if (Request.Cookies["SelectedNhom"].Value == "Loai_Vt")
                                {
                                    <td colspan="8" style='text-align:left;mso-number-format:" #,##0.00"'>

                                        <span class="material-symbols-outlined expandable-icon"><i class="fa-solid fa-caret-down"></i></span> <strong>Loại Vật Tư: @entry.Key</strong>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            if (row["Loai_Vt"] == entry.Key)
                                            {

                                                tongTien = 0;
                                                foreach (var row2 in entry.Value)
                                                {
                                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                                }
                                                break;
                                            }
                                        }
                                        @*<div style="text-align: right; color: #3483bd"> <strong> @String.Format("{0:n0}", tongTien).Replace(",", ".")</strong></div>*@
                                    </td>
                                    <td style="text-align: right; color: #3483bd">@String.Format("{0:n0}", tongTien).Replace(",", ".")</td>
                                }
                                @if (Request.Cookies["SelectedNhom"].Value == "so_ct")
                                {
                                    <td colspan="8" style='text-align:left;mso-number-format:" #,##0.00"'>
                                        <span class="material-symbols-outlined expandable-icon"><i class="fa-solid fa-caret-down"></i></span>   <strong>Số Chứng Từ: @entry.Key</strong>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            if (row["so_ct"] == entry.Key)
                                            {

                                                tongTien = 0;
                                                foreach (var row2 in entry.Value)
                                                {
                                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                                }
                                                break;
                                            }
                                        }
                                        @*<div style="text-align: right; color: #3483bd"> <strong> @String.Format("{0:n0}", tongTien).Replace(",", ".")</strong></div>*@
                                    </td>
                                    <td style="text-align: right; color: #3483bd">@String.Format("{0:n0}", tongTien).Replace(",", ".")</td>
                                }

                                @if (Request.Cookies["SelectedNhom"].Value == "So_Hop_Dong_Ex")
                                {
                                    <td colspan="8" style='text-align:left;mso-number-format:" #,##0.00"'>
                                        <span class="material-symbols-outlined expandable-icon"><i class="fa-solid fa-caret-down"></i></span>   <strong>Số Hợp Đồng: @entry.Key</strong>
                                        @foreach (DataRow row in Model.Tables[0].Rows)
                                        {
                                            if (row["So_Hop_Dong_Ex"] == entry.Key)
                                            {

                                                tongTien = 0;
                                                foreach (var row2 in entry.Value)
                                                {
                                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                                }
                                                break;
                                            }
                                        }
                                        @*<div style="text-align: right; color: #3483bd"> <strong> @String.Format("{0:n0}", tongTien).Replace(",", ".")</strong></div>*@

                                    </td>
                                    <td style="text-align: right; color: #3483bd">@String.Format("{0:n0}", tongTien).Replace(",", ".")</td>
                                }

                            </tr>
                            if (Request.Cookies["SelectedChiTiet"].Value == "ma_dt")
                            {
                                Dictionary<string, List<DataRow>> groupedRows = new Dictionary<string, List<DataRow>>();
                                string ten_dt = "";
                                string bill_to = "";
                                string ma_tdv = "";
                                string ten_tdv = "";
                                string kenh_bh = "";
                                string dvt = "";
                                tongTien = 0; // Tạo biến để tính tổng
                                foreach (var row2 in entry.Value)
                                {
                                    string ma_dt = row2["ma_dt"].ToString();

                                    // Kiểm tra xem ma_vt đã được thêm vào nhóm nào chưa
                                    if (groupedRows.ContainsKey(ma_dt))
                                    {
                                        // Nếu đã tồn tại, thêm dòng dữ liệu vào nhóm đã có
                                        groupedRows[ma_dt].Add(row2);
                                    }
                                    else
                                    {
                                        // Nếu chưa tồn tại, tạo một nhóm mới và thêm dòng dữ liệu vào nhóm mới
                                        groupedRows.Add(ma_dt, new List<DataRow> { row2 });
                                    }
                                }
                                foreach (var group in groupedRows)
                                {
                                    string ma_dt = group.Key;
                                    List<DataRow> rows = group.Value;

                                    // Khai báo biến tổng giá trị cho từng nhóm
                                    decimal totalSoLuong = 0;
                                    decimal totalTongTien = 0;

                                    // Duyệt qua từng hàng trong nhóm
                                    foreach (var row in rows)
                                    {
                                        // Tính tổng giá trị so_luong và Tong_tien của từng hàng
                                        totalSoLuong += Convert.ToDecimal(row["so_luong"]);
                                        totalTongTien += Convert.ToDecimal(row["Tong_tien"]);
                                        ten_dt = row["ten_dt"].ToString();
                                        bill_to = row["Bill_To_Name"].ToString();
                                        dvt = row["dvt"].ToString();
                                        kenh_bh = row["Kenh_BH"].ToString();
                                        ma_tdv = row["Ma_TDV"].ToString();
                                        ten_tdv = row["Ten_TDV"].ToString();
                                    }

                                    // Hiển thị dòng và tổng giá trị
                                    <tr class="chitiet">
                                        <td>@ma_dt</td>
                                        <td>@ten_dt</td>
                                        <td>@bill_to</td>
                                        <td>@dvt</td>

                                        <td>@String.Format("{0:n0}", totalSoLuong).Replace(",", ".")</td>
                                        <td>@kenh_bh</td>
                                        <td>@ma_tdv</td>
                                        <td>@ten_tdv</td>
                                        <td style='text-align:right;mso-number-format:" #,##0.00"'>@String.Format("{0:n0}", totalTongTien).Replace(",", ".")</td>
                                    </tr>


                                }
                            }

                            if (Request.Cookies["SelectedChiTiet"].Value == "so_ct")
                            {
                                tongTien = 0;
                                foreach (var row2 in entry.Value)
                                {
                                    <tr class="chitiet">

                                        <td>@row2["Ngay_ct"]</td>
                                        <td>@row2["so_ct"]</td>
                                        <td style="text-align:left">
                                            @if (row2["Bill_To_Name"].ToString().EndsWith("ST"))
                                            {
                                                @row2["Bill_To_Name"]
                                            }
                                        </td>
                                        <td>@row2["dvt"]</td>
                                        <td>@String.Format("{0:n0}", Convert.ToDecimal(row2["so_luong"])).Replace(",", ".")</td>
                                        <td>@row2["Kenh_BH"]</td>
                                        <td>@row2["Ma_TDV"]</td>
                                        <td style="text-align:left">@row2["Ten_TDV"]</td>
                                        <td style='text-align:right;mso-number-format:" #,##0.00"'>@String.Format("{0:n0}", Convert.ToDecimal(row2["Tong_tien"])).Replace(",", ".")</td>


                                    </tr>
                                    // Cập nhật tổng giá trị
                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                }

                            }
                            if (Request.Cookies["SelectedChiTiet"].Value == "ma_vt")
                            {
                                // Tạo một Dictionary để lưu trữ các hàng dữ liệu nhóm lại dựa trên ma_vt
                                Dictionary<string, List<DataRow>> groupedRows = new Dictionary<string, List<DataRow>>();
                                string ten_vt = "";
                                string bill_to = "";
                                string ma_tdv = "";
                                string ten_tdv = "";
                                string kenh_bh = "";
                                string dvt = "";
                                // Duyệt qua từng dòng dữ liệu
                                foreach (var row2 in entry.Value)
                                {
                                    string ma_vt = row2["ma_vt"].ToString();

                                    // Kiểm tra xem ma_vt đã được thêm vào nhóm nào chưa
                                    if (groupedRows.ContainsKey(ma_vt))
                                    {
                                        // Nếu đã tồn tại, thêm dòng dữ liệu vào nhóm đã có
                                        groupedRows[ma_vt].Add(row2);
                                    }
                                    else
                                    {
                                        // Nếu chưa tồn tại, tạo một nhóm mới và thêm dòng dữ liệu vào nhóm mới
                                        groupedRows.Add(ma_vt, new List<DataRow> { row2 });
                                    }
                                }

                                // Duyệt qua từng nhóm và hiển thị dữ liệu
                                foreach (var group in groupedRows)
                                {
                                    string ma_vt = group.Key;
                                    List<DataRow> rows = group.Value;

                                    // Khai báo biến tổng giá trị cho từng nhóm
                                    decimal totalSoLuong = 0;
                                    decimal totalTongTien = 0;

                                    // Duyệt qua từng hàng trong nhóm
                                    foreach (var row in rows)
                                    {
                                        // Tính tổng giá trị so_luong và Tong_tien của từng hàng
                                        totalSoLuong += Convert.ToDecimal(row["so_luong"]);
                                        totalTongTien += Convert.ToDecimal(row["Tong_tien"]);
                                        ten_vt = row["ten_vt"].ToString();
                                        bill_to = row["Bill_To_Name"].ToString();
                                        dvt = row["dvt"].ToString();
                                        kenh_bh = row["Kenh_BH"].ToString();
                                        ma_tdv = row["Ma_TDV"].ToString();
                                        ten_tdv = row["Ten_TDV"].ToString();
                                    }
                                    // Hiển thị dòng và tổng giá trị
                                    <tr class="chitiet">
                                        <td>@ma_vt</td>
                                        <td>@ten_vt</td>
                                        <td>@bill_to</td>
                                        <td>@dvt</td>

                                        <td>@String.Format("{0:n0}", totalSoLuong).Replace(",", ".")</td>
                                        <td>@kenh_bh</td>
                                        <td>@ma_tdv</td>
                                        <td>@ten_tdv</td>
                                        <td style='text-align:right;mso-number-format:" #,##0.00"'>@String.Format("{0:n0}", totalTongTien).Replace(",", ".")</td>
                                    </tr>


                                }
                            }






                            if (Request.Cookies["SelectedChiTiet"].Value == "Loai_Vt")
                            {
                                tongTien = 0;
                                foreach (var row2 in entry.Value)
                                {
                                    <tr class="chitiet">
                                        <td>@row2["Loai_Vt"]</td>
                                        <td style="text-align:left">@row2["ma_vt"]-@row2["ten_vt"]</td>
                                        <td style="text-align:left">
                                            @if (row2["Bill_To_Name"].ToString().EndsWith("ST"))
                                            {
                                                @row2["Bill_To_Name"]
                                            }
                                        </td>
                                        <td>@row2["dvt"]</td>
                                        <td>@String.Format("{0:n0}", Convert.ToDecimal(row2["so_luong"])).Replace(",", ".")</td>
                                        <td>@row2["Kenh_BH"]</td>
                                        <td>@row2["Ma_TDV"]</td>
                                        <td style="text-align:left">@row2["Ten_TDV"]</td>
                                        <td style='text-align:right;mso-number-format:" #,##0.00"'>@String.Format("{0:n0}", Convert.ToDecimal(row2["Tong_tien"])).Replace(",", ".")</td>


                                    </tr>
                                    // Cập nhật tổng giá trị
                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                }

                            }

                            if (Request.Cookies["SelectedChiTiet"].Value == "ma_tdv")
                            {
                                // Tạo một Dictionary để lưu trữ các hàng dữ liệu nhóm lại dựa trên ma_vt
                                Dictionary<string, List<DataRow>> groupedRows = new Dictionary<string, List<DataRow>>();
                                string ten_tdv = "";
                                string bill_to = "";
                                string ma_vt = "";
                                string ma_dt = "";
                                string kenh_bh = "";
                                string dvt = "";
                                // Duyệt qua từng dòng dữ liệu
                                foreach (var row2 in entry.Value)
                                {
                                    string ma_tdv = row2["Ma_TDV"].ToString();

                                    // Kiểm tra xem ma_vt đã được thêm vào nhóm nào chưa
                                    if (groupedRows.ContainsKey(ma_tdv))
                                    {
                                        // Nếu đã tồn tại, thêm dòng dữ liệu vào nhóm đã có
                                        groupedRows[ma_tdv].Add(row2);
                                    }
                                    else
                                    {
                                        // Nếu chưa tồn tại, tạo một nhóm mới và thêm dòng dữ liệu vào nhóm mới
                                        groupedRows.Add(ma_tdv, new List<DataRow> { row2 });
                                    }
                                }

                                // Duyệt qua từng nhóm và hiển thị dữ liệu
                                foreach (var group in groupedRows)
                                {
                                    string ma_tdv = group.Key;
                                    List<DataRow> rows = group.Value;

                                    // Khai báo biến tổng giá trị cho từng nhóm
                                    decimal totalSoLuong = 0;
                                    decimal totalTongTien = 0;

                                    // Duyệt qua từng hàng trong nhóm
                                    foreach (var row in rows)
                                    {
                                        // Tính tổng giá trị so_luong và Tong_tien của từng hàng
                                        totalSoLuong += Convert.ToDecimal(row["so_luong"]);
                                        totalTongTien += Convert.ToDecimal(row["Tong_tien"]);
                                        ten_tdv = row["Ten_TDV"].ToString();
                                        bill_to = row["Bill_To_Name"].ToString();
                                        dvt = row["dvt"].ToString();
                                        kenh_bh = row["Kenh_BH"].ToString();
                                        ma_dt = row["ma_dt"].ToString();
                                        ma_vt = row["ma_vt"].ToString();
                                    }
                                    // Hiển thị dòng và tổng giá trị
                                    <tr class="chitiet">
                                        <td>@ma_tdv</td>
                                        <td>@ten_tdv</td>
                                        <td>@bill_to</td>
                                        <td>@dvt</td>

                                        <td>@String.Format("{0:n0}", totalSoLuong).Replace(",", ".")</td>
                                        <td>@kenh_bh</td>
                                        <td>@ma_dt</td>
                                        <td>@ma_vt</td>
                                        <td style='text-align:right;mso-number-format:" #,##0.00"'>@String.Format("{0:n0}", totalTongTien).Replace(",", ".")</td>
                                    </tr>


                                }

                            }
                            if (Request.Cookies["SelectedChiTiet"].Value == "Ma_LKH")
                            {
                                tongTien = 0;
                                foreach (var row2 in entry.Value)
                                {
                                    <tr class="chitiet">
                                        <td>@row2["Ma_LKH"]</td>
                                        <td style="text-align:left">@row2["Ten_LKH"]</td>
                                        <td style="text-align:left">
                                            @if (row2["Bill_To_Name"].ToString().EndsWith("ST"))
                                            {
                                                @row2["Bill_To_Name"]
                                            }
                                        </td>

                                        <td>@row2["dvt"]</td>
                                        <td>@String.Format("{0:n0}", Convert.ToDecimal(row2["so_luong"])).Replace(",", ".")</td>
                                        <td>@row2["Kenh_BH"]</td>

                                        <td>@row2["Ma_TDV"]</td>
                                        <td>@row2["Ten_TDV"]</td>
                                        <td style='text-align:right;mso-number-format:" #,##0.00"'>@String.Format("{0:n0}", Convert.ToDecimal(row2["Tong_tien"])).Replace(",", ".")</td>


                                    </tr>
                                    // Cập nhật tổng giá trị
                                    tongTien += Convert.ToDecimal(row2["Tong_tien"]);
                                }

                            }
                        }
                    </tbody>

                    </table>

                </div>
            </div>
        </div>
    </div>
    <!-- =======  Data-Table  = End  ===================== -->
    <!-- ============ Java Script Files  ================== -->


    <script src="~/assets/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/js/jquery-3.6.0.min.js"></script>
    <script src="~/assets/js/datatables.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    @*<script src="~/assets/js/pdfmake.min.js"></script>*@
    <script src="~/assets/js/vfs_fonts.js"></script>
    <script src="~/assets/js/custom.js"></script>
    <script src="https://cdn.canvasjs.com/canvasjs.min.js"></script>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/2.2.4/jquery.min.js"></script>
    <script src="//cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.rawgit.com/rainabba/jquery-table2excel/1.1.0/dist/jquery.table2excel.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.3/xlsx.full.min.js"></script>
    <script>
        var table = $('#example').DataTable();

        // #myInput is a <input type="text"> element
        $('#myInput').on('keyup', function () {
            table.search(this.value).draw();
        });
    </script>
    <script>
        const searchFun = () => {
            let filter = document.getElementById('myInput').value.toUpperCase();
            let myTable = document.getElementById('example');
            let tr = myTable.getElementsByClassName('title');

            for (let i = 0; i < tr.length; i++) {
                let td = tr[i].getElementsByTagName('td')[0]; // Chọn cột trong class title (vd: cột đầu tiên)
                if (td) {
                    let textValue = td.textContent || td.innerHTML;
                    if (textValue.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        };

        document.getElementById('myInput').addEventListener('keyup', searchFun);

    </script>
    <script>
        function exportToExcel() {
            // Lấy danh sách cột cần xuất từ bảng gốc
            var columnsToExport = ['Mã Đối Tượng', 'Tên Đối Tượng', 'ĐVT', 'Số Lượng', 'Kênh BH', 'Mã TDV', 'Tên TDV', 'Tổng tiền'];

            // Tạo bảng tạm thời chỉ chứa cột cần xuất
            var temporaryTable = $('#example').clone();

            // Lặp qua các cột không nằm trong danh sách cần xuất và ẩn chúng
            temporaryTable.find('thead th, tbody td').each(function () {
                var columnHeader = $(this).text();
                if (!columnsToExport.includes(columnHeader)) {
                    $(this).hide();
                }
            });

            // Format cells with numeric data (assuming 'Tổng tiền' is a numeric column)
            temporaryTable.find('tbody td:contains("₫")').attr('data-type', 'number'); // This assumes that the 'Tổng tiền' column contains "₫" symbol

            // Xuất Excel từ bảng tạm thời
            temporaryTable.table2excel({
                exclude: ".hidden",
                name: "Sheet 1",
                filename: "PhanTichBanHang"
            });
        }

    </script>
    @*<script>
            const searchFun = () => {
                let filter = document.getElementById('myInput').value.toUpperCase();
                let myTable = document.getElementById('example');
                let trChitiet = myTable.getElementsByClassName('chitiet');

                // Hiển thị lại tất cả các hàng
                for (let i = 0; i < trChitiet.length; i++) {
                    let td = trChitiet[i].getElementsByTagName('td')[0]; // Chọn cột trong class chitiet (vd: cột đầu tiên)
                    if (td) {
                        let textValue = td.textContent || td.innerHTML;
                        if (textValue.toUpperCase().indexOf(filter) > -1) {
                            trChitiet[i].style.display = "";
                        } else {
                            trChitiet[i].style.display = "none";
                        }
                    }
                }
            };

            document.getElementById('myInput').addEventListener('keyup', searchFun);
        </script>*@


    <script>
        $(document).ready(function () {
            // Ẩn tất cả các dòng con có class "expandable-content"
            $('.expandable-content').hide();

            // Bắt sự kiện click trên icon xổ xuống
            $('.expandable-icon').on('click', function () {
                // Các dòng con sẽ được ẩn/hiện
                var childRows = $(this).closest('tr').nextUntil('tr:has(td[colspan="8"])');

                // Toggle hiển thị/ẩn các dòng con
                childRows.toggle();

                // Lấy nội dung hiện tại của icon
                var currentIcon = $(this).html();

                // Thay đổi nội dung của icon dựa trên nội dung hiện tại
                //if (currentIcon === 'arrow_drop_down') {
                //    // Nếu đang mở rộng, đặt biểu tượng xuống
                //    $(this).html('arrow_right');
                //} else {
                //    // Nếu đang thu gọn, đặt biểu tượng ngang
                //    $(this).html('arrow_drop_down');
                //}
            });

            // Ẩn tất cả các dòng con khi trang được load
            $('.expandable-icon').each(function () {
                var childRows = $(this).closest('tr').nextUntil('tr:has(td[colspan="8"])');
                childRows.hide();
            });
        });
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInput');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var maDtFromCookie = getCookie('Ma_Dt');

            // Đặt giá trị cho trường input và hidden input
            if (maDtFromCookie) {
                dropdownInput.value = maDtFromCookie;
                selectedOption.value = maDtFromCookie;
            }
        });
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInputTDV');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var matdvFromCookie = getCookie('Ma_TDV');

            // Đặt giá trị cho trường input và hidden input
            if (matdvFromCookie) {
                dropdownInput.value = matdvFromCookie;
                selectedOption.value = matdvFromCookie;
            }
        });
        document.addEventListener('DOMContentLoaded', function () {
            var dropdownInput = document.getElementById('dropdownInputVT');
            var selectedOption = document.getElementById('selectedOption');

            // Lấy giá trị từ cookie
            var mavtFromCookie = getCookie('Ma_Vt');

            // Đặt giá trị cho trường input và hidden input
            if (mavtFromCookie) {
                dropdownInput.value = mavtFromCookie;
                selectedOption.value = mavtFromCookie;
            }
        });
        // Hàm lấy giá trị từ cookie
        function getCookie(cookieName) {
            var name = cookieName + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var cookieArray = decodedCookie.split(';');

            for (var i = 0; i < cookieArray.length; i++) {
                var cookie = cookieArray[i];
                while (cookie.charAt(0) == ' ') {
                    cookie = cookie.substring(1);
                }
                if (cookie.indexOf(name) == 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return null;
        }
    </script>






    <script>

        document.getElementById("dropdownInput").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownList option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOption").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInput");
                    var selectedOption = document.querySelector("#dropdownList option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var tenDt = selectedOption.getAttribute('data-maDt');
                        document.cookie = 'Ma_Dt=' + tenDt;
                    } else {
                        var selected = "";
                        document.cookie = 'Ma_Dt=' + selected;
                    }
                });
            }
        });


    </script>

    <script>
        document.getElementById("dropdownInputVT").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownList option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOption").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInputVT");
                    var selectedOption = document.querySelector("#dropdownListVT option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var tenDt = selectedOption.getAttribute('data-maVT');
                        document.cookie = 'Ma_Vt=' + tenDt;
                    } else {
                        var selected = "";
                        document.cookie = 'Ma_Vt=' + selected;
                    }
                });
            }
        });


    </script>
    <script>
        document.getElementById("dropdownInputTDV").addEventListener("input", function () {
            var inputValue = this.value;
            var options = document.querySelectorAll("#dropdownListTDV option");

            for (var i = 0; i < options.length; i++) {
                if (options[i].getAttribute("value") === inputValue) {
                    document.getElementById("selectedOptionTDV").value = inputValue;

                    break;
                }
            }
        });



        document.addEventListener("DOMContentLoaded", function () {
            var runReportButton = document.getElementById("runReportButton");

            if (runReportButton) {
                runReportButton.addEventListener("click", function () {
                    var dropdownInput = document.getElementById("dropdownInputTDV");
                    var selectedOption = document.querySelector("#dropdownListTDV option[value='" + dropdownInput.value + "']");

                    if (selectedOption) {
                        var MaTDV = selectedOption.getAttribute('data-Ma_CbNv');
                        document.cookie = 'Ma_TDV=' + MaTDV;
                    } else {
                        var selected = "";
                        document.cookie = 'Ma_TDV=' + selected;
                    }
                });
            }
        });


    </script>
    <!-- Đoạn mã JavaScript để chọn giá trị mặc định từ cookie -->
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy giá trị từ cookie
            var selectedInfoFromCookie = getCookie1('SelectedInfo');

            // Nếu giá trị từ cookie tồn tại, chọn giá trị mặc định cho select
            if (selectedInfoFromCookie) {
                var selectElement = document.getElementById('nhomtheoselect');

                // Kiểm tra giá trị từ cookie và đặt giá trị mặc định tương ứng
                switch (selectedInfoFromCookie) {
                    case '1':
                        selectElement.value = 'ma_vt';
                        break;
                    case '2':
                        selectElement.value = 'ma_dt';
                        break;
                    case '3':
                        selectElement.value = 'so_ct';
                        break;
                    case '4':
                        selectElement.value = 'Loai_Vt';
                        break;
                    case '5':
                        selectElement.value = 'ma_tdv';
                        break;
                    case '6':
                        selectElement.value = 'So_Hop_Dong_Ex';
                        break;
                    case '7':
                        selectElement.value = 'Ma_LKH';
                        break;
                    default:
                        // Trường hợp mặc định, chẳng hạn nếu cookie không khớp với giá trị nào
                        selectElement.value = '';
                        break;
                }

                // Gọi hàm để lưu giá trị mới vào cookie nếu cần thiết
                saveSelectedValueToCookie();
            }
        });
        document.addEventListener('DOMContentLoaded', function () {
            // Lấy giá trị từ cookie
            var selectedInfoFromCookie = getCookie1('SelectedChitiet');

            // Nếu giá trị từ cookie tồn tại, chọn giá trị mặc định cho select
            if (selectedInfoFromCookie) {
                var selectElement = document.getElementById('chitietselect');

                // Kiểm tra giá trị từ cookie và đặt giá trị mặc định tương ứng
                switch (selectedInfoFromCookie) {
                    case '1':
                        selectElement.value = 'ma_vt';
                        break;
                    case '2':
                        selectElement.value = 'ma_dt';
                        break;
                    case '3':
                        selectElement.value = 'so_ct';
                        break;
                    case '4':
                        selectElement.value = 'Loai_Vt';
                        break;
                    case '5':
                        selectElement.value = 'ma_tdv';
                        break;
                    case '6':
                        selectElement.value = 'So_Hop_Dong_Ex';
                        break;
                    case '7':
                        selectElement.value = 'Ma_LKH';
                        break;
                    default:
                        // Trường hợp mặc định, chẳng hạn nếu cookie không khớp với giá trị nào
                        selectElement.value = '';
                        break;
                }

                // Gọi hàm để lưu giá trị mới vào cookie nếu cần thiết
                saveSelectedValueToCookie();
            }
        });
        // Hàm lấy giá trị từ cookie
        function getCookie1(cookieName) {
            var name = cookieName + "=";
            var decodedCookie = decodeURIComponent(document.cookie);
            var cookieArray = decodedCookie.split(';');

            for (var i = 0; i < cookieArray.length; i++) {
                var cookie = cookieArray[i];
                while (cookie.charAt(0) == ' ') {
                    cookie = cookie.substring(1);
                }
                if (cookie.indexOf(name) == 0) {
                    return cookie.substring(name.length, cookie.length);
                }
            }
            return null;
        }

        // Hàm lưu giá trị đã chọn vào cookie khi có sự thay đổi
        function saveSelectedValueToCookie() {
            var selectElement = document.getElementById('nhomtheoselect');
            var selectedValue = selectElement.value;

            // Lưu giá trị vào cookie
            document.cookie = "SelectedInfo=" + selectedValue + "; path=/";
        }
    </script>

    <script>
        function saveSelectedValueToCookie() {
            var selectedValue = $("#nhomtheoselect").val();
            document.cookie = 'SelectedNhom=' + selectedValue;

            var select = document.getElementById("nhomtheoselect");
            var selectedOption = select.options[select.selectedIndex];
            var info = selectedOption.getAttribute("data-nhom");
            document.cookie = 'SelectedInfo=' + info;
            // Gọi hàm để nhóm dữ liệu dựa trên giá trị đã chọn

        }

        function saveSelectedValueToCookie2() {
            var selectedValue = $("#chitietselect").val();
            document.cookie = 'SelectedChiTiet=' + selectedValue;

            var select = document.getElementById("chitietselect");
            var selectedOption = select.options[select.selectedIndex];
            var info = selectedOption.getAttribute("data-chitiet");
            document.cookie = 'SelectedChitiet=' + info;
            // Gọi hàm để nhóm dữ liệu dựa trên giá trị đã chọn

        }
        function runReport() {
            const uncheckedCheckboxIndexes = [];
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

            checkboxes.forEach((checkbox, index) => {
                if (!checkbox.checked) {
                    uncheckedCheckboxIndexes.push(index);
                }
            });

            // Lưu trạng thái vào Local Storage
            localStorage.setItem('uncheckedCheckboxIndexes', JSON.stringify(uncheckedCheckboxIndexes));
            // Hiển thị thẻ span có id là "spanText"
            const spanElement = document.getElementById("spanText");
            spanElement.style.display = "block";
            const hiddenElement = document.getElementById("head");
            hiddenElement.style.visibility = "hidden";
        }
    </script>

    <script>
        function handleFormSubmit(event) {
            event.preventDefault();
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;
            window.location.href = actionUrl;
        }
        function showLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.remove("loader-hidden");
        }
        function hideLoader() {
            const loader = document.querySelector(".loader");
            loader.classList.add("loader-hidden");
            createChart(chartData);
        }
        document.getElementById("dateForm").addEventListener("submit", (event) => {
            event.preventDefault();
            showLoader();
            const fromDate = document.getElementById('tu_ngay').value;
            const toDate = document.getElementById('den_ngay').value;
            const form = event.target;
            const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;
            window.location.href = actionUrl;
        });

        window.addEventListener("load", () => {
            hideLoader();
            applyCheckboxAndColumnState();
        });

    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');
            const table = document.getElementById('example');

            checkboxes.forEach((checkbox, index) => {
                checkbox.addEventListener('change', function () {
                    const columnIndex = index;
                    const rows = table.querySelectorAll('tr');

                    rows.forEach(row => {
                        const cells = row.querySelectorAll('td, th');
                        cells[columnIndex].style.display = this.checked ? '' : 'none';
                    });
                });
            });
        });
    </script>
    <script>
        function applyCheckboxAndColumnState() {
            const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');
            const table = document.getElementById('example');

            checkboxes.forEach((checkbox, index) => {
                const columnIndex = index;
                const rows = table.querySelectorAll('tr');

                if (!checkbox.checked) {
                    rows.forEach(row => {
                        const cells = row.querySelectorAll('td, th');
                        cells[columnIndex].style.display = 'none';
                    });
                } else {
                    rows.forEach(row => {
                        const cells = row.querySelectorAll('td, th');
                        cells[columnIndex].style.display = '';
                    });
                }
            });
        }
        // Hàm lấy trạng thái checkbox từ Local Storage và ẩn cột
        function applyUncheckedCheckboxState() {
            const uncheckedCheckboxIndexes = JSON.parse(localStorage.getItem('uncheckedCheckboxIndexes'));
            if (uncheckedCheckboxIndexes) {

                const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

                uncheckedCheckboxIndexes.forEach(index => {
                    checkboxes[index].checked = false;
                });
            }
        }

        // Áp dụng trạng thái checkbox đã bỏ chọn từ Local Storage khi trang được tải
        document.addEventListener('DOMContentLoaded', function () {
            // Áp dụng trạng thái của các checkbox đã bỏ chọn
            applyUncheckedCheckboxState();
        });
    </script>

    <script>
        $(document).ready(function () {
            calculateTotal();

            function calculateTotal() {
                var totalColumns = {};

                $('#example tbody tr:not(#total-row)').each(function () {
                    var cells = $(this).find('td');

                    cells.each(function (index) {
                        if (index === 0 || index === cells.length - 1) {
                            return; // Bỏ qua cột đầu tiên (tên đơn vị) và cột cuối cùng (Tổng Thực Hiện)
                        }

                        var columnValue = parseFloat($(this).text().replace(/,/g, ''));
                        var isRatioColumn = index % 3 === 0; // Kiểm tra nếu đây là cột tỷ lệ

                        if (!isNaN(columnValue)) {
                            if (!totalColumns[index]) {
                                totalColumns[index] = {
                                    sum: 0,
                                    count: 0,
                                    isRatio: isRatioColumn,
                                };
                            }
                            totalColumns[index].sum += columnValue;
                            totalColumns[index].count++;
                        }
                    });
                });

                // Tính tỷ lệ và hiển thị tổng trong hàng tổng cộng
                $.each(totalColumns, function (index, value) {
                    var totalCell = $('#total-row td').eq(index);
                    if (!value.isRatio) {
                        totalCell.text(formatCurrency(value.sum));
                    } else {
                        totalCell.text(''); // Đặt giá trị rỗng cho cột tỷ lệ
                    }
                });
            }

            function formatCurrency(number) {
                return number.toLocaleString('en-US', { style: 'currency', currency: 'VND' }).replace('₫', '');
            }
        });


    </script>
    <script>
        //tinh sum cot tong thuc hien
        $(document).ready(function () {
            calculateTotal();

            function calculateTotal() {
                var totalThucHien = 0;

                $('#example tbody tr:not(#total-row)').each(function () {
                    var tongThucHien = parseFloat($(this).find('td').last().text().replace(/,/g, ''));
                    if (!isNaN(tongThucHien)) {
                        totalThucHien += tongThucHien;
                    }
                });

                var totalCell = $('#total-row td').last();
                totalCell.text(formatNumber(totalThucHien));
            }

            function formatNumber(number) {
                return number.toLocaleString('en-US', { minimumFractionDigits: 0, maximumFractionDigits: 0 });
            }
        });

    </script>
    <script>
        //tinh ty le
        $(document).ready(function () {
            calculateRatios();

            function calculateRatios() {
                var totalColumns = {};

                // Lấy giá trị cột tổng doanh thu và cột tổng khoản
                var sumDoanhThuOpc = parseFloat($('#total-row td.total-doanhthu-opc').text().replace(/,/g, ''));
                var sumKhoanOpc = parseFloat($('#total-row td.total-khoan-opc').text().replace(/,/g, ''));
                var sumDoanhThuCon = parseFloat($('#total-row td.total-doanhthu-con').text().replace(/,/g, ''));
                var sumKhoanCon = parseFloat($('#total-row td.total-khoan-con').text().replace(/,/g, ''));
                var sumDoanhThuSui = parseFloat($('#total-row td.total-doanhthu-sui').text().replace(/,/g, ''));
                var sumKhoanSui = parseFloat($('#total-row td.total-khoan-sui').text().replace(/,/g, ''));
                var sumDoanhThuPhien = parseFloat($('#total-row td.total-doanhthu-phien').text().replace(/,/g, ''));
                var sumKhoanPhien = parseFloat($('#total-row td.total-khoan-phien').text().replace(/,/g, ''));
                var sumDoanhThu25 = parseFloat($('#total-row td.total-doanhthu-25').text().replace(/,/g, ''));
                var sumKhoan25 = parseFloat($('#total-row td.total-khoan-25').text().replace(/,/g, ''));

                // Tính tỷ lệ theo từng loại
                var ratioOpc = sumKhoanOpc !== 0 ? sumDoanhThuOpc / sumKhoanOpc : 0;
                var ratioCon = sumKhoanCon !== 0 ? sumDoanhThuCon / sumKhoanCon : 0;
                var ratioSui = sumKhoanSui !== 0 ? sumDoanhThuSui / sumKhoanSui : 0;
                var ratioPhien = sumKhoanPhien !== 0 ? sumDoanhThuPhien / sumKhoanPhien : 0;
                var ratio25 = sumKhoan25 !== 0 ? sumDoanhThu25 / sumKhoan25 : 0;

                // Gán kết quả lên các ô tương ứng trong cột tỷ lệ
                $('#total-row td.total-tyle-opc').text(formatRatio(ratioOpc));
                $('#total-row td.total-tyle-con').text(formatRatio(ratioCon));
                $('#total-row td.total-tyle-sui').text(formatRatio(ratioSui));
                $('#total-row td.total-tyle-phien').text(formatRatio(ratioPhien));
                $('#total-row td.total-tyle-25').text(formatRatio(ratio25));
            }

            function formatRatio(ratio) {
                return (ratio * 100).toFixed(2) + "%";
            }
        });

    </script>

</body>

</html> 