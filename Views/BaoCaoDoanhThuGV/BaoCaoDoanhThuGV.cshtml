



@{ ViewBag.Title = "BÁO CÁO DOANH THU GIÁ VỐN";
    var fromDate = Request.Cookies["From_date"].Value;
    var toDate = Request.Cookies["To_date"].Value;
    var fromDateValue = DateTime.ParseExact(fromDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);
    var toDateValue = DateTime.ParseExact(toDate, "yyyy-MM-dd", CultureInfo.InvariantCulture);

    var formattedFromDate = fromDateValue.ToString("dd/MM/yyyy");
    var formattedToDate = toDateValue.ToString("dd/MM/yyyy");
    System.Globalization.CultureInfo.CurrentCulture = new System.Globalization.CultureInfo("en-US");
    System.Globalization.CultureInfo.CurrentUICulture = new System.Globalization.CultureInfo("en-US");

    decimal totalSLBan = 0, totalSLKM = 0, totalDTHB = 0, totalGVHB = 0, PBGVKMCT = 0, GiaVonThuan = 0, LaiGop = 0;
    decimal totalSLKM2 = 0, GiaVonKM = 0;
    decimal soLuongCBT = 0, totalCBT = 0, giaVonCBT = 0;
    decimal soLuongBanNB = 0, soLuongKMNB = 0, soLuongTLNB = 0, doanhThuNB = 0, doanhThuTLNB = 0, giaVonNB = 0, giaVonKMNB = 0, PBGVKMNB = 0, giaVonTLNB = 0, giaVonThuanNB = 0, LaiGopNB = 0;
    foreach (DataRow row3 in Model.Tables[0].Rows)
    {
        if (!Convert.IsDBNull(row3["So_Luong_Ban"]))
        {
            totalSLBan += Convert.ToDecimal(row3["So_Luong_Ban"]);
        }
        if (!Convert.IsDBNull(row3["So_Luong_KM"]))
        {
            totalSLKM += Convert.ToDecimal(row3["So_Luong_KM"]);
        }
        if (!Convert.IsDBNull(row3["Doanh_Thu_Hang_Ban"]))
        {
            totalDTHB += Convert.ToDecimal(row3["Doanh_Thu_Hang_Ban"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_Hang_Ban"]))
        {
            totalGVHB += Convert.ToDecimal(row3["Gia_Von_Hang_Ban"]);
        }
        if (!Convert.IsDBNull(row3["PB_GV_KM_CT"]))
        {
            PBGVKMCT += Convert.ToDecimal(row3["PB_GV_KM_CT"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_Thuan"]))
        {
            GiaVonThuan += Convert.ToDecimal(row3["Gia_Von_Thuan"]);
        }
        if (!Convert.IsDBNull(row3["Lai_Gop"]))
        {
            LaiGop += Convert.ToDecimal(row3["Lai_Gop"]);
        }
    }
    foreach (DataRow row3 in Model.Tables[1].Rows)
    {
        if (!Convert.IsDBNull(row3["So_Luong_KM"]))
        {
            totalSLKM2 += Convert.ToDecimal(row3["So_Luong_KM"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_KM"]))
        {
            GiaVonKM += Convert.ToDecimal(row3["Gia_Von_KM"]);
        }
    }
    foreach (DataRow row3 in Model.Tables[2].Rows)
    {
        if (!Convert.IsDBNull(row3["So_Luong_CBT"]))
        {
            soLuongCBT += Convert.ToDecimal(row3["So_Luong_CBT"]);
        }
        if (!Convert.IsDBNull(row3["Doanh_Thu_CBT"]))
        {
            totalCBT += Convert.ToDecimal(row3["Doanh_Thu_CBT"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_Hang_CBT"]))
        {
            giaVonCBT += Convert.ToDecimal(row3["Gia_Von_Hang_CBT"]);
        }
    }

    foreach (DataRow row3 in Model.Tables[3].Rows)
    {
        if (!Convert.IsDBNull(row3["So_Luong_Ban_NoiBo"]))
        {
            soLuongBanNB += Convert.ToDecimal(row3["So_Luong_Ban_NoiBo"]);
        }
        if (!Convert.IsDBNull(row3["So_Luong_KM_NoiBo"]))
        {
            soLuongKMNB += Convert.ToDecimal(row3["So_Luong_KM_NoiBo"]);
        }
        if (!Convert.IsDBNull(row3["So_Luong_TL_NoiBo"]))
        {
            soLuongTLNB += Convert.ToDecimal(row3["So_Luong_TL_NoiBo"]);
        }
        if (!Convert.IsDBNull(row3["Doanh_Thu_NB"]))
        {
            doanhThuNB += Convert.ToDecimal(row3["Doanh_Thu_NB"]);
        }
        if (!Convert.IsDBNull(row3["Doanh_Thu_TL_NB"]))
        {
            doanhThuTLNB += Convert.ToDecimal(row3["Doanh_Thu_TL_NB"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_Noi_Bo"]))
        {
            giaVonNB += Convert.ToDecimal(row3["Gia_Von_Noi_Bo"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_KM_Noi_Bo"]))
        {
            giaVonKMNB += Convert.ToDecimal(row3["Gia_Von_KM_Noi_Bo"]);
        }
        if (!Convert.IsDBNull(row3["PB_GV_KM_NB"]))
        {
            PBGVKMNB += Convert.ToDecimal(row3["PB_GV_KM_NB"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_TL_Noi_Bo"]))
        {
            giaVonTLNB += Convert.ToDecimal(row3["Gia_Von_TL_Noi_Bo"]);
        }
        if (!Convert.IsDBNull(row3["Gia_Von_Thuan_NB"]))
        {
            giaVonThuanNB += Convert.ToDecimal(row3["Gia_Von_Thuan_NB"]);
        }
        if (!Convert.IsDBNull(row3["Lai_Gop_NB"]))
        {
            LaiGopNB += Convert.ToDecimal(row3["Lai_Gop_NB"]);
        }
    }
}
@using System.Data;
@using System.Globalization;
<!DOCTYPE html>
<html lang="en">

<head>



    <style>
        a:hover {
            background-color: lightskyblue;
        }

        * {
            font-family: "Times New Roman";
        }

        a {
            text-decoration: none;
        }

        .container table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .container canvas {
            justify-content: center;
            align-items: center;
            height: min-content;
            zoom: normal;
        }

        h3 {
            text-align: center;
            color: blue;
        }

        table, td, th {
            border: 1px solid black;
            align-items: center;
            margin-left: auto;
            margin-right: auto;
            height: 50px;
        }

        table {
            border-collapse: collapse;
        }

        .num {
            text-align: center;
            width: 100px;
        }

        .ten {
            text-align: left;
        }

        button {
            background-color: #2297f6;
            border: none;
            outline: none;
            padding: 5px;
            font-size: 30px;
            color: #ffffff;
            cursor: pointer;
            margin-top: 20px;
            text-align: center;
        }

        p {
            color: #ffffff;
        }



        canvas {
            width: 200px;
            height: 100px;
            text-align: center;
        }

        .tu_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }

        .den_ngay {
            height: 35px;
            border-radius: 5px;
            border: 1px solid #dcdcdc;
            padding: 0px 10px;
            outline: none;
            Format: 'd-m-y';
        }



        div#chart {
            text-align: center;
            display: flex;
            /*         justify-content:;*/
            width: 50%;
            height: 300px;
        }

        .submit {
            height: 50px;
            background-color: silver;
            border: none;
            color: cadetblue;
            border-radius: 7px;
            font-size: 18px;
            font-weight: 600;
            margin-top: 20px;
            justify-content: center;
            align-items: center;
            transition: all 1s ease-in-out;
        }

            .submit:hover {
                background-color: darkcyan;
                color: #ffffff;
                transition: cubic-bezier(0.075, 0.82, 0.165, 1);
            }

        .form .locBC {
            display: flex;
            flex-direction: column;
            padding: 20px;
            width: 500px;
            height: 400px;
            float: left;
        }

        .form table {
            justify-content: center;
            align-items: center;
            height: 50vh;
            zoom: 90%;
            text-align: center;
        }

        .expandable {
            cursor: pointer;
        }

        .percent {
            width: 20%;
            text-align: right;
            text-align: center;
            background-color: #eee;
            background: linear-gradient(to right, #3399dd, #3399dd);
            background-size: 1% 100%;
            background-repeat: no-repeat;
        }



        #data {
            width: 100%;
            height: 150px;
            background: white;
            float: inline-start;
        }

        .dropdown-check-list {
            display: inline-block;
        }

            .dropdown-check-list .anchor {
                position: relative;
                cursor: pointer;
                display: inline-block;
                padding: 5px 50px 5px 10px;
                border: 1px solid #ccc;
            }

                .dropdown-check-list .anchor:after {
                    position: absolute;
                    content: "";
                    border-left: 2px solid black;
                    border-top: 2px solid black;
                    padding: 5px;
                    right: 10px;
                    top: 20%;
                    -moz-transform: rotate(-135deg);
                    -ms-transform: rotate(-135deg);
                    -o-transform: rotate(-135deg);
                    -webkit-transform: rotate(-135deg);
                    transform: rotate(-135deg);
                }

                .dropdown-check-list .anchor:active:after {
                    right: 8px;
                    top: 21%;
                }

            .dropdown-check-list ul.items {
                padding: 2px;
                display: none;
                margin: 0;
                border: 1px solid #ccc;
                border-top: none;
            }

                .dropdown-check-list ul.items li {
                    list-style: none;
                }

            .dropdown-check-list.visible .anchor {
                color: #0094ff;
            }

            .dropdown-check-list.visible .items {
                display: block;
            }

        .custom-combobox-container {
            position: relative;
            width: 100%;
            outline: none;
            border: none;
        }

        .custom-combobox {
            width: 100%;
            display: flex;
            align-items: center;
            border: 1px solid rgb(199, 199, 199);
            padding: 10px;
        }

            .custom-combobox input[type="text"] {
                width: 95%;
                border: none;
                outline: none;
                background: none;
            }

        .options-container {
            position: absolute;
            width: 100%;
            z-index: 100;
            border: 1px solid rgb(204, 204, 204);
            border-top: none;
            display: none;
            height: 150px;
            overflow-y: scroll;
        }

            .options-container label {
                display: block;
                cursor: pointer;
                padding: 5px;
                margin-top: 5px;
                user-select: none;
            }

                .options-container label:hover {
                    background: rgb(255, 255, 255);
                }

            .options-container::-webkit-scrollbar {
                width: 8px;
            }

            .options-container::-webkit-scrollbar-thumb {
                background-color: white;
            }

        .sidebar {
            position: relative;
            top: 0;
            left: 0;
            height: 50px;
            width: 200px;
            transition: all 0.5s ease;
        }

        .myInput {
            text-align: center;
            height: auto;
            width: 1000px;
            padding: 10px;
        }

        .container {
            text-align: center;
        }

        .data_table {
            width: max-content;
        }

        .bieu_do {
            padding: 10px;
            margin: 10%;
            text-align: center;
            width: 200px;
            font-size: 16px;
            font-weight: 600;
            color: #fff;
            cursor: pointer;
            margin: 20px;
            height: 55px;
            text-align: center;
            border: none;
            background-size: 300% 100%;
            border-radius: 10px;
            moz-transition: all .4s ease-in-out;
            -o-transition: all .4s ease-in-out;
            -webkit-transition: all .4s ease-in-out;
            transition: all .4s ease-in-out;
        }

            .bieu_do:hover {
                background-position: 100% 0;
                moz-transition: all .4s ease-in-out;
                -o-transition: all .4s ease-in-out;
                -webkit-transition: all .4s ease-in-out;
                transition: all .4s ease-in-out;
            }

            .bieu_do:focus {
                outline: none;
            }

        .bieu_do {
            background-image: linear-gradient(to right, #0ba360, #3cba92, #30dd8a, #2bb673);
            box-shadow: 0 4px 15px 0 rgba(23, 168, 108, 0.75);
        }

        .chart {
            margin: 20px 0px 0px 0px;
        }

        .text-loading {
            position: fixed;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%);
            font-size: 13px;
            color: black;
            z-index: 2;
            background-color: rgba(255, 255, 255, 0.9);
            padding: 5px 10px;
            display: none;
        }

        .custom-checkbox {
            margin-top: 10px;
            display: inline-block;
            position: relative;
            padding-left: 30px;
            margin-right: 15px;
            cursor: pointer;
        }

            .custom-checkbox input {
                position: absolute;
                opacity: 0;
                cursor: pointer;
            }

        .checkmark {
            position: absolute;
            top: 0;
            left: 0;
            height: 25px;
            width: 25px;
            border: 2px solid black;
            background-color: #ffffff;
        }

        .custom-checkbox:hover input ~ .checkmark {
            background-color: #ccc;
        }

        .custom-checkbox input:checked ~ .checkmark {
            background-color: #2196F3;
        }

        .checkmark:after {
            content: "";
            position: absolute;
            display: none;
        }

        .custom-checkbox input:checked ~ .checkmark:after {
            display: block;
        }

        .custom-checkbox .checkmark:after {
            left: 9px;
            top: 5px;
            width: 5px;
            height: 10px;
            border: solid white;
            border-width: 0 3px 3px 0;
            transform: rotate(45deg);
        }

        .checkContainer {
            height: 300px;
            overflow: auto;
            scrollbar-width: none;
        }

            .checkContainer::-webkit-scrollbar {
                width: 0.2em;
                background-color: transparent;
            }

        .tabs {
            display: inline-block;
            /* bottom: 0;
            left: 0;
            right: 0;*/
            width: 300vh;
            height: 50px;
            /* margin: 15px auto;*/
            border-bottom: 1px solid #DAE0E7;
            background: #F9F9F9;
            list-style-type: none;
            padding: 0px 12px 0;
        }

        a {
            text-decoration: none;
            color: #333;
        }

        .tab {
            float: left;
            height: 44px;
            margin: 0 8px -1px 0;
            border: 1px solid #DAE0E7; 
            background: #F9F9F9;
            border-radius: 0px 0px 0 0;
            overflow: hidden;
        }

            .tab, .tab a {
                transition: all .25s;
            }

                .tab a {
                    display: inline-block;
                }

                    .tab a:first-child {
                        padding: 12px 2px 12px 16px;
                        white-space: nowrap;
                    }

                .tab.tabClosed, .tab.tabClosed a:first-child {
                    margin-right: 0;
                    border-width: 0;
                }

                .tab.tabClosed {
                    width: 0 !important; /* use important because we need to set the width of tabs in javascript in order to be able to animate them to 0 */
                }

                    .tab.tabClosed a {
                        opacity: 0;
                    }

        .closeTab:hover {
            background: #DAE0E7;
        }

        .tab-control {
            z-index: 1;
            position: fixed;
        }

            .tab-control ul {
                position: absolute;
                bottom: 0px;
                /* left:300px;*/
            }

                .tab-control ul li {
                    text-align: center;
                }

        .closeTab {
            position: relative;
            display: inline-block;
            vertical-align: middle;
            margin-left: 10px; /* Điều chỉnh khoảng cách với h4 */
        }

        .closeIcon {
            display: inline-block;
            width: 30px;
            height: 25px;
            border-radius: 50%;
            background-color: white;
            color: black; /* Màu chữ x */
            text-align: center;
            line-height: 25px;
        }

        .tab.active {
            background-color: cornflowerblue; /* Màu nền tab khi active */
            color: #fff; /* Màu chữ khi active */
        }

        .tab.selected-tab {
            pointer-events: none;
            background-color: #3763a3; /* Màu nền của tab */
        }

            .tab.selected-tab a {
                color: white /* Màu nền của tab */
            }

            .tab.selected-tab .closeTab {
                pointer-events: auto;
            }
        .data_table {
            max-height: 100%; /* Đặt chiều cao tối đa của container để có thanh cuộn */
            overflow: auto;
        }
            .data_table thead th {
                position: sticky;
                top: 0;
                z-index: 100;
            }
        .search-container {
            display: flex;
            margin-left: 300px;
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-select/1.14.0/js/bootstrap-select.min.js"></script>
    <script type="text/javascript" src="Scripts/table2excel.js"></script>


    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">
    <title>BÁO CÁO DOANH THU GIÁ VỐN</title>
    <meta content="" name="description">
    <meta content="Author" name="MJ Maraz">
    <link href="~/assets/images/favicon.png" rel="icon">
    <link href="~/assets/images/favicon.png" rel="apple-touch-icon">
    <!-- Google Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap" rel="stylesheet">
    <!-- ========================================================= -->


    <link rel="stylesheet" href="~/assets/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/assets/css/datatables.min.css">
    <link rel="stylesheet" href="~/assets/css/style.css">
    <link rel="stylesheet" href="~/Styles/loader.css">
</head>
<!-- =============== Design & Develop By = MJ MARAZ   ====================== -->

<body style="background-color: #e0e8ee ">
    <div class="loader" style="z-index:1"></div>

    <div class="sidebar">
        <div class="logo-details">

        </div>
        <ul class="nav-links" style="justify-content: center; display:flex;margin-left:10px">
            <li>
                <form id="dateForm" action="BaoCaoDoanhThuGV" method="post" onsubmit="handleFormSubmit(event)">
                    <div id="locBC">
                        <span id="spanText" class="text-loading">[usp_BaoCaoDoanhThuGV_LINEITEM_SAP]</span>
                        <a>Từ Ngày</a><br /><br />
                        <input class="tu_ngay" placeholder="Từ Ngày" id="tu_ngay" name="From_date" type="date" format="YYYY-MM-DD" value="@Request.Cookies["From_date"].Value" />
                        <script>$("#tu_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script><br /><br />
                        <a>Đến Ngày</a><br /><br />
                        <input class="den_ngay" id="den_ngay" placeholder=" Đến Ngày" name="To_date" type="DATE" format="YYYY-MM-DD" value="@Request.Cookies["To_date"].Value" /><br /><br />
                        <script>$("#den_ngay").datetimepicker({ timepicker: false, format: 'Y-m-d' });</script>
                    </div>
                    @if (Request.Cookies["UserName"].Value == "opctckt001" || Request.Cookies["MA_DVCS"].Value == "" || Request.Cookies["UserName"].Value == "vpct-nhatanh" || Request.Cookies["UserName"].Value == "OPCTCKT001")
                    {
                        <h6>Chọn Chi Nhánh</h6>
                        <div class="select-btn" style="width:100px;margin-top:10px">
                            <select name="Chitiet" id="chitietselect" onchange="saveSelectedValueToCookie2()">
                                <option value="" style="background-color: #020024;color:white">Chọn giá trị</option>
                                <option value="OPC_CT">Chi Nhánh Cần Thơ</option>
                                <option value="OPC_TG">Chi Nhánh Tiền Giang</option>
                                <option value="OPC_MD">Chi Nhánh Miền Đông</option>
                                <option value="OPC_TP">Chi Nhánh Hồ Chí Minh</option>
                                <option value="OPC_VT">Chi Nhánh Vũng Tàu</option>
                                <option value="OPC_NT">Chi Nhánh Nha Trang</option>
                                <option value="OPC_DN">Chi Nhánh Đà Nẵng</option>
                                <option value="OPC_NA">Chi Nhánh Nghệ An</option>
                                <option value="OPC_HN">Chi Nhánh Hà Nội</option>
                                <option value="OPC">Công Ty</option>
                            </select>
                        </div>
                    }
                    <div>
                        <button class="submit" type="submit" id="runReportButton" onclick="runReport();saveNgay()">
                            Chạy Báo Cáo
                        </button>

                    </div>



                </form>

            </li>
        </ul>
    </div>


    <header class="header_part" style="background-color: #aec9e0; color: #3483bd">
        @if (Request.Cookies["UserName"].Value == "Admin-cnct" || Request.Cookies["UserName"].Value == "Admin-cntg" || Request.Cookies["UserName"].Value == "Admin-cnmd" || Request.Cookies["UserName"].Value == "Admin-cnh1" || Request.Cookies["UserName"].Value == "Admin-cnvt"
                      || Request.Cookies["UserName"].Value == "Admin-cnnt" || Request.Cookies["UserName"].Value == "Admin - cndn" || Request.Cookies["UserName"].Value == "Admin - cnna" || Request.Cookies["UserName"].Value == "Admin - cnhn")
        {



            <a href="/Home/AboutCN" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        else
        {
            <a href="/Home/About" style="cursor:pointer">
                <img src="~/Images/opc.png" style="height:60px;width:60px;margin-left:10px">
            </a>
        }
        <h4 style="color:#3483bd;font-size:20px">BÁO CÁO DOANH THU GIÁ VỐN</h4>
        <h4 style="color: #3483bd; font-size: 20px">Từ @formattedFromDate đến @formattedToDate </h4>
    </header>
    <!-- =======  Data-Table  = Start  ========================== -->

    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="search-container">

                    <span>Search: <input type="Text" name="" id="myInput" placeholder="Tìm kiếm" onkeyup="searchFun()"></span>
                    <div class="search"></div>
                </div>
                <div style="text-align: center; align-items: center; width: 1000px; display: flex; margin-left: 20%">
                    <div><h6 style="font-weight: bold; text-align: center">BẢNG 1: DOANH THU GIÁ VỐN HÀNG BÁN</h6></div>
                    <button style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd ">
                        <a onclick="return ExcellentExport.excel(this, 'example', 'Sheet 1');" download="DoanhThuGiaVonHangBan.xls" style="color: #3483bd">Xuất Excel </a>
                    </button>
                </div>

                <div class="data_table" style="max-height: 800px">

                    <table id="example" class="table table-striped table-bordered">
                        <thead class="table-dark" id="head">
                            <tr class="title">
                                <th>Mã Vật Tư</th>
                                <th>Mã KM</th>
                                <th>Tên Vật Tư</th>
                                <th>Số Lượng Bán</th>
                                <th>Số Lượng KM</th>
                                <th>Doanh Thu Hàng Bán</th>
                                <th>Giá Vốn Hàng Bán</th>
                                <th>PB GV KM CT</th>
                                <th>Giá Vốn Thuần</th>
                                <th>Lãi Gộp</th>

                            </tr>

                        </thead>
                        <tbody>
                            <tr style="background-color:burlywood;font-weight:bold">
                                <td colspan="3">Tổng</td>
                                <td style="text-align:right">@FormatValue(totalSLBan)</td>
                                <td style="text-align:right">@FormatValue(totalSLKM)</td>
                                <td style="text-align:right">@FormatValue(totalDTHB)</td>
                                <td style="text-align:right">@FormatValue(totalGVHB)</td>
                                <td style="text-align:right">@FormatValue(PBGVKMCT)</td>
                                <td style="text-align:right">@FormatValue(GiaVonThuan)</td>
                                <td style="text-align:right">@FormatValue(LaiGop)</td>
                            </tr>
                            @foreach (DataRow row2 in Model.Tables[0].Rows)
                            {
                                <tr>
                                    <td style="text-align:left">@row2["Ma_Vt"]</td>
                                    <td style="text-align:left">@row2["Ma_Km"]</td>
                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                    <td style="text-align:right">@FormatValue(row2["So_Luong_Ban"])</td>
                                    <td style="text-align: right">@FormatValue(row2["So_Luong_KM"])</td>
                                    <td style="text-align: right">@FormatValue(row2["Doanh_Thu_Hang_Ban"])</td>
                                    <td style="text-align: right">@FormatValue(row2["Gia_Von_Hang_Ban"])</td>
                                    <td style="text-align: right">@FormatValue(row2["PB_GV_KM_CT"])</td>
                                    <td style="text-align: right">@FormatValue(row2["Gia_Von_Thuan"])</td>
                                    <td style="text-align: right">@FormatValue(row2["Lai_Gop"])</td>

                                </tr>

                            }
                        </tbody>

                    </table>

                </div>
            </div>
        </div>


        <div class="row" style="margin-top:30px">
            <div class="col-12">
                <div class="search-container">

                    <span>Search: <input type="Text" name="" id="myInput2" placeholder="Tìm kiếm" onkeyup="searchFun2()"></span>
                    <div class="search2"></div>
                </div>
                <div style="text-align: center; align-items: center; width: 1000px; display: flex; margin-left: 20%">
                <div><h6 style="font-weight: bold; text-align: center">BẢNG 2: GIÁ VỐN KHUYẾN MÃI CHUNG</h6></div>
                <button style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd ">
                    <a onclick="return ExcellentExport.excel(this, 'example2', 'Sheet 1');" download="GiaVonKhuyenMaiChung.xls" style="color: #3483bd">Xuất Excel </a>
                </button>
            </div>
                <div class="data_table" style="max-height: 800px">

                    <table id="example2" class="table table-striped table-bordered">
                        <thead class="table-dark" id="head">
                            <tr>
                                <th>Mã DVCS</th>
                                <th>Sales Orders</th>
                                <th>Mã ĐT </th>
                                <th>Mã Vật Tư</th>
                                <th>Tên Vật Tư</th>
                                <th>Mã KM</th>
                                <th>KM</th>
                                @*<th>Doanh Thu Thành Phẩm</th>
                                <th>Doanh Thu HH</th>
                                <th>Doanh Thu NB</th>
                                <th>Tổng Doanh Thu</th>
                                <th>Số Lượng</th>
                                <th>Giá Vốn</th>
                                <th>CK</th>
                                <th>Số Lượng Bán</th>*@
                                <th>Số Lượng KM</th>
                                @*<th>Số Lượng CBT</th>
                                <th>Số Lượng Bán Nội Bộ</th>
                                <th>Số Lượng KM Nội Bộ</th>
                                <th>Tổng Doanh Thu Bán Vs NB</th>
                                <th>Tổng Doanh Thu Bán Vs NB CT</th>*@
                                @*<th>Tổng Doanh Thu CBT</th>
                                <th>Giá Vốn Hàng Bán</th>
                                <th>Giá Vốn Hàng CBT</th>
                                <th>Giá Vốn Nội Bộ</th>*@
                                <th>Giá Vốn KM</th>
                                @*<th>Giá Vốn KM Nội Bộ</th>
                                <th>Giá Vốn KM CT</th>
                                <th>Giá Trị PB</th>
                                <th>Giá Trị PB CT</th>
                                <th>Giá Trị PB NB</th>
                                <th>PB GV KM</th>
                                <th>PB GV KM CT</th>
                                <th>PB GV KM NB</th>*@
                            </tr>

                        </thead>
                        <tbody>
                            <tr style="background-color:burlywood;font-weight:bold">
                                <td colspan="7">Tổng</td>
                               
                                <td style="text-align:right">@FormatValue(totalSLKM2)</td>
                                <td style="text-align:right">@FormatValue(GiaVonKM)</td>
                            </tr>
                            @functions { private string FormatValue(object value)
                                {
                                    if (Convert.IsDBNull(value))
                                    {
                                        return string.Empty;
                                    }
                                    else
                                    {
                                        decimal decimalValue = Convert.ToDecimal(value);
                                        return String.Format("{0:n0}", decimalValue).Replace(",", ".");
                                    }
                                } }@foreach (DataRow row2 in Model.Tables[1].Rows)
                            {
                                <tr>
                                    <td style="text-align:left">@row2["Ma_Dvcs"]</td>
                                    <td style="text-align:left">@row2["Sale_Order"]</td>
                                    <td style="text-align:center">@row2["Ma_Dt"]</td>
                                    <td style="text-align:center">@row2["Ma_Vt"]</td>
                                    <td style="text-align:left">@row2["Ten_Vt"]</td>
                                    <td style="text-align:center">@row2["Ma_KM"]</td>
                                    <td style="text-align:center">@row2["KM"]</td>
                                    @*<td style="text-align:right">@FormatValue(row2["Doanh_Thu_TP"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Doanh_Thu_HH"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Doanh_Thu_NB"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Tong_Doanh_Thu"])</td>
                                    <td style="text-align:right">@FormatValue(row2["So_Luong"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Gia_Von"])</td>
                                    <td style="text-align:right">@FormatValue(row2["CK"])</td>
                                    <td style="text-align:right">@FormatValue(row2["So_Luong_Ban"])</td>*@
                                    <td style="text-align:right">@FormatValue(row2["So_Luong_KM"])</td>
                                    @*<td style="text-align:right">@FormatValue(row2["So_Luong_CBT"])</td>
                                    <td style="text-align:right">@FormatValue(row2["So_Luong_Ban_NoiBo"])</td>
                                    <td style="text-align:right">@FormatValue(row2["So_Luong_KM_NoiBo"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Tong_Doanh_Thu_BanVsNB"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Tong_Doanh_Thu_BanVsNB_CT"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Tong_Doanh_Thu_CBT"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Gia_Von_Hang_Ban"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Gia_Von_Hang_CBT"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Gia_Von_Noi_Bo"])</td>*@
                                    <td style="text-align:right">@FormatValue(row2["Gia_Von_KM"])</td>
                                    @*<td style="text-align:right">@FormatValue(row2["Gia_Von_KM_Noi_Bo"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Gia_Von_KM_CT"])</td>
                                    <td style="text-align:right">@FormatValue(row2["Gia_Tri_PB"])</td>*@

                                    @*<td style="text-align:right">
                                        @{
                                            object value = row2["Gia_Tri_PB"];
                                            string formattedValue = "";

                                            if (!Convert.IsDBNull(value))
                                            {
                                                // Nếu giá trị không phải là DBNull, thực hiện chuyển đổi và định dạng
                                                decimal decimalValue = Convert.ToDecimal(value);
                                                formattedValue = String.Format("{0:n0}", decimalValue).Replace(",", ".");
                                            }
                                            // Nếu giá trị là DBNull, formattedValue sẽ vẫn giữ giá trị rỗng

                                            @formattedValue
                                        }
                                    </td>
                                    <td style="text-align:right">
                                        @{
                                            object value2 = row2["Gia_Tri_PB_CT"];
                                            string formattedValue2 = "";

                                            if (!Convert.IsDBNull(value2))
                                            {
                                                // Nếu giá trị không phải là DBNull, thực hiện chuyển đổi và định dạng
                                                decimal decimalValue2 = Convert.ToDecimal(value2);
                                                formattedValue2 = String.Format("{0:n0}", decimalValue2).Replace(",", ".");
                                            }
                                            // Nếu giá trị là DBNull, formattedValue sẽ vẫn giữ giá trị rỗng

                                            @formattedValue2
                                        }
                                    </td>
                                    <td style="text-align:right">
                                        @{
                                            object value3 = row2["Gia_Tri_PB_NB"];
                                            string formattedValue3 = "";

                                            if (!Convert.IsDBNull(value3))
                                            {
                                                // Nếu giá trị không phải là DBNull, thực hiện chuyển đổi và định dạng
                                                decimal decimalValue3 = Convert.ToDecimal(value3);
                                                formattedValue3 = String.Format("{0:n0}", decimalValue3).Replace(",", ".");
                                            }
                                            // Nếu giá trị là DBNull, formattedValue sẽ vẫn giữ giá trị rỗng

                                            @formattedValue3
                                        }
                                    </td>
                                    <td style="text-align:right">
                                        @{
                                            object value4 = row2["PB_GV_KM"];
                                            string formattedValue4 = "";

                                            if (!Convert.IsDBNull(value4))
                                            {
                                                // Nếu giá trị không phải là DBNull, thực hiện chuyển đổi và định dạng
                                                decimal decimalValue4 = Convert.ToDecimal(value4);
                                                formattedValue4 = String.Format("{0:n0}", decimalValue4).Replace(",", ".");
                                            }
                                            // Nếu giá trị là DBNull, formattedValue sẽ vẫn giữ giá trị rỗng

                                            @formattedValue4
                                        }
                                    </td>
                                    <td style="text-align:right">
                                        @{
                                            object value5 = row2["PB_GV_KM_CT"];
                                            string formattedValue5 = "";

                                            if (!Convert.IsDBNull(value5))
                                            {
                                                // Nếu giá trị không phải là DBNull, thực hiện chuyển đổi và định dạng
                                                decimal decimalValue5 = Convert.ToDecimal(value5);
                                                formattedValue5 = String.Format("{0:n0}", decimalValue5).Replace(",", ".");
                                            }
                                            // Nếu giá trị là DBNull, formattedValue sẽ vẫn giữ giá trị rỗng

                                            @formattedValue5
                                        }
                                    </td>
                                    <td style="text-align:right">
                                        @{
                                            object value6 = row2["PB_GV_KM_NB"];
                                            string formattedValue6 = "";

                                            if (!Convert.IsDBNull(value6))
                                            {
                                                // Nếu giá trị không phải là DBNull, thực hiện chuyển đổi và định dạng
                                                decimal decimalValue6 = Convert.ToDecimal(value6);
                                                formattedValue = String.Format("{0:n0}", decimalValue6).Replace(",", ".");
                                            }
                                            // Nếu giá trị là DBNull, formattedValue sẽ vẫn giữ giá trị rỗng

                                            @formattedValue6
                                        }
                                    </td>*@







                                </tr>

                            }
                            </tbody>

                        </table>

                    </div>
                </div>
            </div>


            <div class="row" style="margin-top:30px">
                <div class="col-12">
                    <div class="search-container">

                        <span>Search: <input type="Text" name="" id="myInput3" placeholder="Tìm kiếm" onkeyup="searchFun3()"></span>
                        <div class="search3"></div>
                    </div>
                    <div style="text-align:center;align-items:center;width:1000px;display:flex;margin-left:20%">
                    <div><h6 style="font-weight: bold; text-align: center">BẢNG 3: DOANH THU - GIÁ VỐN CHO BIẾU TẶNG</h6></div>
                    <button style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd ">
                        <a onclick="return ExcellentExport.excel(this, 'example3', 'Sheet 1');" download="DoanhThuGiaVonCBT.xls" style="color: #3483bd">Xuất Excel </a>
                    </button>
                </div>
                    <div class="data_table" style="max-height: 800px">
                        <table id="example3" class="table table-striped table-bordered">
                            <thead class="table-dark" id="head">
                                <tr>
                                    <th>Mã Vật Tư</th>
                                    <th>Mã Khuyến Mãi</th>
                                    <th>Tên VT</th>
                                    <th>Số Lượng CBT</th>

                                    <th>Doanh Thu CBT</th>
                                    <th>Giá Vốn Hàng CBT</th>
                                </tr>

                            </thead>
                            <tbody>

                                <tr style="background-color:burlywood;font-weight:bold">
                                    <td colspan="3">Tổng</td>

                                    <td style="text-align:right">@FormatValue(soLuongCBT)</td>
                                    <td style="text-align:right">@FormatValue(totalCBT)</td>
                                    <td style="text-align:right">@FormatValue(giaVonCBT)</td>
                                </tr>
                                @foreach (DataRow row2 in Model.Tables[2].Rows)
                                {
                                    <tr>
                                        <td style="text-align:left">@row2["Ma_Vt"]</td>
                                        <td style="text-align:left">@row2["Ma_Km"]</td>
                                        <td style="text-align:left">@row2["Ten_Vt"]</td>
                                        <td style="text-align:right">@FormatValue(row2["So_Luong_CBT"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Doanh_Thu_CBT"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Gia_Von_Hang_CBT"])</td>



                                    </tr>

                                }
                            </tbody>

                        </table>

                    </div>
                </div>
            </div>

            <div class="row" style="margin-top:30px">
                <div class="col-12">
                    <div class="search-container">

                        <span>Search: <input type="Text" name="" id="myInput3" placeholder="Tìm kiếm" onkeyup="searchFun3()"></span>
                        <div class="search3"></div>
                    </div>
                    <div style="text-align: center; align-items: center; width: 1000px; display: flex; margin-left: 20%">
                    <div><h6 style="font-weight: bold; text-align: center">BẢNG 4: DOANH THU - GIÁ VỐN NỘI BỘ(DÀNH CHO CÔNG TY)</h6></div>
                    <button style="border-radius: 10px; margin-left: 10px; margin-bottom: 10px;margin-top:10px; background-color: #aec9e0; color: #3483bd ">
                        <a onclick="return ExcellentExport.excel(this, 'example4', 'Sheet 1');" download="DoanhThuGiaVonNoiBo(CTY).xls" style="color: #3483bd">Xuất Excel </a>
                    </button>
                </div>
                    <div class="data_table" style="max-height: 800px">
                        <table id="example4" class="table table-striped table-bordered">
                            <thead class="table-dark" id="head">
                                <tr>
                                    <th>Mã Vật Tư</th>
                                    <th>Tên Vật Tư</th>
                                    <th>Số Lượng Bán NB</th>
                                    <th>Số Lượng KM NB</th>
                                    <th>Số Lượng TL NB</th>
                                    <th>Doanh Thu NB</th>
                                    <th>Doanh Thu TL NB</th>
                                    <th>Giá Vốn NB</th>
                                    <th>Giá Vốn KM NB</th>
                                    <th>PB GV KM NB</th>
                                    <th>Giá Vốn TL NB</th>
                                    <th>Giá Vốn Thuần NB</th>
                                    <th>Lãi Gộp NB</th>
                                </tr>

                            </thead>
                            <tbody>
                                <tr style="background-color:burlywood;font-weight:bold">
                                    <td colspan="2">Tổng</td>
                                    <td style="text-align:right">@FormatValue(soLuongBanNB)</td>
                                    <td style="text-align:right">@FormatValue(soLuongKMNB)</td>
                                    <td style="text-align:right">@FormatValue(soLuongTLNB)</td>
                                    <td style="text-align:right">@FormatValue(doanhThuNB)</td>
                                    <td style="text-align:right">@FormatValue(doanhThuTLNB)</td>
                                    <td style="text-align:right">@FormatValue(giaVonNB)</td>
                                    <td style="text-align:right">@FormatValue(giaVonKMNB)</td>
                                    <td style="text-align:right">@FormatValue(PBGVKMNB)</td>
                                    <td style="text-align:right">@FormatValue(giaVonTLNB)</td>
                                    <td style="text-align:right">@FormatValue(giaVonThuanNB)</td>
                                    <td style="text-align:right">@FormatValue(LaiGopNB)</td>
                                </tr>
                                @foreach (DataRow row2 in Model.Tables[3].Rows)
                                {
                                    <tr>
                                        <td style="text-align:left">@row2["Ma_Vt"]</td>
                                        <td style="text-align:left">@row2["Ten_Vt"]</td>
                                        <td style="text-align:right">@FormatValue(row2["So_Luong_Ban_NoiBo"])</td>
                                        <td style="text-align:right">@FormatValue(row2["So_Luong_KM_NoiBo"])</td>
                                        <td style="text-align:right">@FormatValue(row2["So_Luong_TL_NoiBo"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Doanh_Thu_NB"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Doanh_Thu_TL_NB"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Gia_Von_Noi_Bo"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Gia_Von_KM_Noi_Bo"])</td>
                                        <td style="text-align:right">@FormatValue(row2["PB_GV_KM_NB"]))</td>
                                        <td style="text-align:right">@FormatValue(row2["Gia_Von_TL_Noi_Bo"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Gia_Von_Thuan_NB"])</td>
                                        <td style="text-align:right">@FormatValue(row2["Lai_Gop_NB"])</td>


                                    </tr>

                                }
                            </tbody>

                        </table>

                    </div>
                </div>
            </div>
        </div>


        <!-- =======  Data-Table  = End  ===================== -->
        <!-- ============ Java Script Files  ================== -->


        <script src="~/assets/js/bootstrap.bundle.min.js"></script>
        <script src="~/assets/js/jquery-3.6.0.min.js"></script>
        @*<script src="~/assets/js/datatables.min.js"></script>*@
        <script src="~/assets/js/pdfmake.min.js"></script>
        <script src="~/assets/js/vfs_fonts.js"></script>
        <script src="~/assets/js/custom.js"></script>
        <script src="~/Scripts/excellentexport.js"></script>
        <script>
            var table = $('#example').DataTable();

            // #myInput is a <input type="text"> element
            $('#myInput').on('keyup', function () {
                table.search(this.value).draw();
            });
        </script>
        <script>
            var table = $('#example2').DataTable();

            // #myInput is a <input type="text"> element
            $('#myInput2').on('keyup', function () {
                table.search2(this.value).draw();
            });
        </script>
        <script>
            var table = $('#example3').DataTable();

            // #myInput is a <input type="text"> element
            $('#myInput3').on('keyup', function () {
                table.search3(this.value).draw();
            });
        </script>
        <script>
            function searchFun() {
                var input, filter, table, tr, td, i;
                input = document.getElementById("myInput");
                filter = input.value.toUpperCase();
                table = document.getElementById("example");
                tr = table.getElementsByTagName("tr");

                // Duyệt qua tất cả các hàng trong bảng, bắt đầu từ hàng thứ 1 (bỏ qua hàng đầu tiên là tiêu đề)
                for (i = 1; i < tr.length; i++) {
                    // Lấy giá trị từ các ô ứng với 4 cột đầu tiên
                    var td1 = tr[i].getElementsByTagName("td")[0]; // Mã Vật Tư
                    var td2 = tr[i].getElementsByTagName("td")[1]; // Tên Vật Tư
                    var td3 = tr[i].getElementsByTagName("td")[2]; // Số Lượng Bán
                    var td4 = tr[i].getElementsByTagName("td")[3]; // Số Lượng KM
                    var td5 = tr[i].getElementsByTagName("td")[4];
                    var td6 = tr[i].getElementsByTagName("td")[5];

                    // So sánh giá trị với từ khóa tìm kiếm
                    if (td1 || td2 || td3 || td4 || td5 || td6) {
                        if (td1.textContent.toUpperCase().indexOf(filter) > -1 ||
                            td2.textContent.toUpperCase().indexOf(filter) > -1 ||
                            td3.textContent.toUpperCase().indexOf(filter) > -1 ||
                            td4.textContent.toUpperCase().indexOf(filter) > -1 ||
                            td5.textContent.toUpperCase().indexOf(filter) > -1 ||
                            td6.textContent.toUpperCase().indexOf(filter) > -1) {
                            tr[i].style.display = "";
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            }
        </script>
        <script>
            function searchFun2() {
                var input, filter, table, tr, td, i;
                input = document.getElementById("myInput2");
                filter = input.value.toUpperCase();
                table = document.getElementById("example2");
                tr = table.getElementsByTagName("tr");

                // Duyệt qua tất cả các hàng trong bảng, bắt đầu từ hàng thứ 1 (bỏ qua hàng đầu tiên là tiêu đề)
                for (i = 1; i < tr.length; i++) {
                    // Lấy giá trị từ các ô ứng với 4 cột đầu tiên
                    var td1 = tr[i].getElementsByTagName("td")[0]; // Mã Vật Tư
                    var td2 = tr[i].getElementsByTagName("td")[1]; // Tên Vật Tư
                    //var td3 = tr[i].getElementsByTagName("td")[2]; // Số Lượng Bán
                    //var td4 = tr[i].getElementsByTagName("td")[3]; // Số Lượng KM
                    //var td5 = tr[i].getElementsByTagName("td")[4];
                    //var td6 = tr[i].getElementsByTagName("td")[5];

                    // So sánh giá trị với từ khóa tìm kiếm
                    if (td1 || td2) {
                        if (td1.textContent.toUpperCase().indexOf(filter) > -1 ||
                            td2.textContent.toUpperCase().indexOf(filter) > -1
                        ) {
                            tr[i].style.display = "";
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            }
        </script>
        <script>
            function searchFun3() {
                var input, filter, table, tr, td, i;
                input = document.getElementById("myInput3");
                filter = input.value.toUpperCase();
                table = document.getElementById("example3");
                tr = table.getElementsByTagName("tr");

                // Duyệt qua tất cả các hàng trong bảng, bắt đầu từ hàng thứ 1 (bỏ qua hàng đầu tiên là tiêu đề)
                for (i = 1; i < tr.length; i++) {
                    // Lấy giá trị từ các ô ứng với 4 cột đầu tiên
                    var td1 = tr[i].getElementsByTagName("td")[0]; // Mã Vật Tư
                    var td2 = tr[i].getElementsByTagName("td")[1]; // Tên Vật Tư
                    //var td3 = tr[i].getElementsByTagName("td")[2]; // Số Lượng Bán
                    //var td4 = tr[i].getElementsByTagName("td")[3]; // Số Lượng KM
                    //var td5 = tr[i].getElementsByTagName("td")[4];
                    //var td6 = tr[i].getElementsByTagName("td")[5];

                    // So sánh giá trị với từ khóa tìm kiếm
                    if (td1 || td2) {
                        if (td1.textContent.toUpperCase().indexOf(filter) > -1 ||
                            td2.textContent.toUpperCase().indexOf(filter) > -1
                        ) {
                            tr[i].style.display = "";
                        } else {
                            tr[i].style.display = "none";
                        }
                    }
                }
            }
        </script>
        <script>
            function saveNgay() {
                var from_date = document.getElementById("tu_ngay").value;
                var to_date = document.getElementById("den_ngay").value;
                document.cookie = "From_date=" + from_date;
                document.cookie = "To_date=" + to_date;
            }

            function saveSelectedValueToCookie2() {
                var selectedValue = $("#chitietselect").val();

                // Lấy giá trị của cookie hiện tại
                var existingCookieValue = getCookie('MA_DVCS');

                // Thời gian sống của cookie (đơn vị là giây, 30 ngày trong ví dụ này)
                var expirationTime = 30 * 24 * 60 * 60;

                // Tạo một object Date để thiết lập thời gian hết hạn của cookie
                var expirationDate = new Date();
                expirationDate.setTime(expirationDate.getTime() + (expirationTime * 1000));

                if (existingCookieValue) {
                    // Nếu cookie đã tồn tại, cập nhật giá trị của nó và thiết lập thời gian hết hạn
                    document.cookie = 'MA_DVCS_2=' + selectedValue;
                } else {
                    // Nếu cookie chưa tồn tại, tạo một cookie mới với thời gian hết hạn
                    document.cookie = 'MA_DVCS_2=' + selectedValue;
                }
            }

            // Hàm để lấy giá trị của một cookie
            function getCookie(name) {
                const value = `; ${document.cookie}`;
                const parts = value.split(`; ${name}=`);
                if (parts.length === 2) return parts.pop().split(';').shift();
            }


        </script>

        <script>
            function runReport() {

                const uncheckedCheckboxIndexes = [];
                const checkboxes = document.querySelectorAll('input[name="myCheckbox"]');

                checkboxes.forEach((checkbox, index) => {
                    if (!checkbox.checked) {
                        uncheckedCheckboxIndexes.push(index);
                    }
                });

                // Lưu trạng thái vào Local Storage
                localStorage.setItem('uncheckedCheckboxIndexes', JSON.stringify(uncheckedCheckboxIndexes));
                // Hiển thị thẻ span có id là "spanText"
                const spanElement = document.getElementById("spanText");
                spanElement.style.display = "block";
                const hiddenElement = document.getElementById("head");
                hiddenElement.style.visibility = "hidden";
            }
        </script>


        <script>
            function handleFormSubmit(event) {
                event.preventDefault();
                showLoader();
                // Show the loader when the form is submitted


                // Lấy các giá trị ngày đã chọn từ trường nhập liệu
                const fromDate = document.getElementById('tu_ngay').value;
                const toDate = document.getElementById('den_ngay').value;

                // Tạo URL mới với các tham số truy vấn
                const form = event.target;
                const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

                // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
                window.location.href = actionUrl;
            }
            function displaySelectedDate() {
                // Lấy các giá trị ngày đã chọn từ trường nhập liệu
                const fromDate = document.getElementById('tu_ngay').value;
                const toDate = document.getElementById('den_ngay').value;

                // Hiển thị các giá trị ngày đã chọn lên thẻ h5
                const selectedDateDisplay = document.getElementById('selectedDateDisplay');
                selectedDateDisplay.innerText = `Từ ngày: ${fromDate} - Đến ngày: ${toDate}`;
                window.location.href = selectedDateDisplay;
            }

            // Function to show the loader
            function showLoader() {
                const loader = document.querySelector(".loader");
                loader.classList.remove("loader-hidden");
            }

            // Function to hide the loader
            function hideLoader() {
                const loader = document.querySelector(".loader");
                loader.classList.add("loader-hidden");
            }

            /*  Add an event listener to the form submission*/
            document.getElementById("dateForm").addEventListener("submit", (event) => {
                event.preventDefault();
                displaySelectedDate();
                // Show the loader when the form is submitted
                showLoader();

                // Lấy các giá trị ngày đã chọn từ trường nhập liệu
                const fromDate = document.getElementById('tu_ngay').value;
                const toDate = document.getElementById('den_ngay').value;

                // Tạo URL mới với các tham số truy vấn
                const form = event.target;
                const actionUrl = `${form.action}?From_date=${fromDate}&To_date=${toDate}`;

                // Chuyển hướng tới URL mới với các giá trị ngày đã chọn làm các tham số truy vấn
                window.location.href = actionUrl;
            });

            // Add event listener for window load event
            window.addEventListener("load", () => {
                // Hide the loader after the page is loaded
                hideLoader();
                const fromDate = urlParams.get('From_date');
                const toDate = urlParams.get('To_date');
                if (fromDate && toDate) {
                    displaySelectedDate();
                }
            });
        </script>



    </body>

</html>